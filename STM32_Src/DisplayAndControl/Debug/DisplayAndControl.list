
DisplayAndControl.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000609c  080001a0  080001a0  000011a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00001288  0800623c  0800623c  0000723c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080074c4  080074c4  000090d8  2**0
                  CONTENTS
  4 .ARM          00000008  080074c4  080074c4  000084c4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  080074cc  080074cc  000090d8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080074cc  080074cc  000084cc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080074d0  080074d0  000084d0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000000d8  20000000  080074d4  00009000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000018e8  200000d8  080075ac  000090d8  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200019c0  080075ac  000099c0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000090d8  2**0
                  CONTENTS, READONLY
 12 .debug_info   00038a10  00000000  00000000  00009108  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000034f6  00000000  00000000  00041b18  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000e38  00000000  00000000  00045010  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000244  00000000  00000000  00045e48  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00010b55  00000000  00000000  0004608c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000c696  00000000  00000000  00056be1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004da0a  00000000  00000000  00063277  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000be  00000000  00000000  000b0c81  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00003e84  00000000  00000000  000b0d40  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000071  00000000  00000000  000b4bc4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000968  00000000  00000000  000b4c35  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	@ (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	@ (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	@ (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	200000d8 	.word	0x200000d8
 80001bc:	00000000 	.word	0x00000000
 80001c0:	08006224 	.word	0x08006224

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	@ (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	@ (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	@ (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	200000dc 	.word	0x200000dc
 80001dc:	08006224 	.word	0x08006224

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <LCD_Init>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_Init (void)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af02      	add	r7, sp, #8
	Ucglib4WireSWSPI_begin(&g_ucg, UCG_FONT_MODE_SOLID);
 8000286:	2100      	movs	r1, #0
 8000288:	480f      	ldr	r0, [pc, #60]	@ (80002c8 <LCD_Init+0x48>)
 800028a:	f002 fe51 	bl	8002f30 <Ucglib4WireSWSPI_begin>
	ucg_ClearScreen(&g_ucg);
 800028e:	480e      	ldr	r0, [pc, #56]	@ (80002c8 <LCD_Init+0x48>)
 8000290:	f002 fe95 	bl	8002fbe <ucg_ClearScreen>
	ucg_SetFont(&g_ucg, ucg_font_ncenR10_hf);
 8000294:	490d      	ldr	r1, [pc, #52]	@ (80002cc <LCD_Init+0x4c>)
 8000296:	480c      	ldr	r0, [pc, #48]	@ (80002c8 <LCD_Init+0x48>)
 8000298:	f003 ffaa 	bl	80041f0 <ucg_SetFont>
	ucg_SetColor(&g_ucg, 0, 255, 255, 255);
 800029c:	23ff      	movs	r3, #255	@ 0xff
 800029e:	9300      	str	r3, [sp, #0]
 80002a0:	23ff      	movs	r3, #255	@ 0xff
 80002a2:	22ff      	movs	r2, #255	@ 0xff
 80002a4:	2100      	movs	r1, #0
 80002a6:	4808      	ldr	r0, [pc, #32]	@ (80002c8 <LCD_Init+0x48>)
 80002a8:	f004 f881 	bl	80043ae <ucg_SetColor>
	ucg_SetColor(&g_ucg, 1, 0, 0, 0);
 80002ac:	2300      	movs	r3, #0
 80002ae:	9300      	str	r3, [sp, #0]
 80002b0:	2300      	movs	r3, #0
 80002b2:	2200      	movs	r2, #0
 80002b4:	2101      	movs	r1, #1
 80002b6:	4804      	ldr	r0, [pc, #16]	@ (80002c8 <LCD_Init+0x48>)
 80002b8:	f004 f879 	bl	80043ae <ucg_SetColor>
	ucg_SetRotate180(&g_ucg);
 80002bc:	4802      	ldr	r0, [pc, #8]	@ (80002c8 <LCD_Init+0x48>)
 80002be:	f004 f971 	bl	80045a4 <ucg_SetRotate180>
}
 80002c2:	bf00      	nop
 80002c4:	46bd      	mov	sp, r7
 80002c6:	bd80      	pop	{r7, pc}
 80002c8:	200000f4 	.word	0x200000f4
 80002cc:	0800651c 	.word	0x0800651c

080002d0 <LCD_LoadOnStartup>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_LoadOnStartup (void)
{
 80002d0:	b580      	push	{r7, lr}
 80002d2:	b082      	sub	sp, #8
 80002d4:	af02      	add	r7, sp, #8
	ucg_DrawString(&g_ucg, 33, 40, 0, "IOT305x");
 80002d6:	4b0d      	ldr	r3, [pc, #52]	@ (800030c <LCD_LoadOnStartup+0x3c>)
 80002d8:	9300      	str	r3, [sp, #0]
 80002da:	2300      	movs	r3, #0
 80002dc:	2228      	movs	r2, #40	@ 0x28
 80002de:	2121      	movs	r1, #33	@ 0x21
 80002e0:	480b      	ldr	r0, [pc, #44]	@ (8000310 <LCD_LoadOnStartup+0x40>)
 80002e2:	f003 fec1 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, 55, 65, 0, "by");
 80002e6:	4b0b      	ldr	r3, [pc, #44]	@ (8000314 <LCD_LoadOnStartup+0x44>)
 80002e8:	9300      	str	r3, [sp, #0]
 80002ea:	2300      	movs	r3, #0
 80002ec:	2241      	movs	r2, #65	@ 0x41
 80002ee:	2137      	movs	r1, #55	@ 0x37
 80002f0:	4807      	ldr	r0, [pc, #28]	@ (8000310 <LCD_LoadOnStartup+0x40>)
 80002f2:	f003 feb9 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, 22, 90, 0, "Hoang Dung");
 80002f6:	4b08      	ldr	r3, [pc, #32]	@ (8000318 <LCD_LoadOnStartup+0x48>)
 80002f8:	9300      	str	r3, [sp, #0]
 80002fa:	2300      	movs	r3, #0
 80002fc:	225a      	movs	r2, #90	@ 0x5a
 80002fe:	2116      	movs	r1, #22
 8000300:	4803      	ldr	r0, [pc, #12]	@ (8000310 <LCD_LoadOnStartup+0x40>)
 8000302:	f003 feb1 	bl	8004068 <ucg_DrawString>
}
 8000306:	bf00      	nop
 8000308:	46bd      	mov	sp, r7
 800030a:	bd80      	pop	{r7, pc}
 800030c:	0800623c 	.word	0x0800623c
 8000310:	200000f4 	.word	0x200000f4
 8000314:	08006244 	.word	0x08006244
 8000318:	08006248 	.word	0x08006248

0800031c <LCD_ClearScreen>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ClearScreen (void)
{
 800031c:	b580      	push	{r7, lr}
 800031e:	af00      	add	r7, sp, #0
	ucg_ClearScreen(&g_ucg);
 8000320:	4804      	ldr	r0, [pc, #16]	@ (8000334 <LCD_ClearScreen+0x18>)
 8000322:	f002 fe4c 	bl	8002fbe <ucg_ClearScreen>
	ucg_SetFont(&g_ucg, ucg_font_ncenR10_hf);
 8000326:	4904      	ldr	r1, [pc, #16]	@ (8000338 <LCD_ClearScreen+0x1c>)
 8000328:	4802      	ldr	r0, [pc, #8]	@ (8000334 <LCD_ClearScreen+0x18>)
 800032a:	f003 ff61 	bl	80041f0 <ucg_SetFont>
}
 800032e:	bf00      	nop
 8000330:	bd80      	pop	{r7, pc}
 8000332:	bf00      	nop
 8000334:	200000f4 	.word	0x200000f4
 8000338:	0800651c 	.word	0x0800651c

0800033c <LCD_DisplayTempValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_DisplayTempValue (uint8_t temperature)
{
 800033c:	b580      	push	{r7, lr}
 800033e:	b084      	sub	sp, #16
 8000340:	af02      	add	r7, sp, #8
 8000342:	4603      	mov	r3, r0
 8000344:	71fb      	strb	r3, [r7, #7]
	// Store temperature values------------------------------------------------------------
	memset(g_strTemp, 0, sizeof(g_strTemp));
 8000346:	221e      	movs	r2, #30
 8000348:	2100      	movs	r1, #0
 800034a:	480a      	ldr	r0, [pc, #40]	@ (8000374 <LCD_DisplayTempValue+0x38>)
 800034c:	f005 f972 	bl	8005634 <memset>

	sprintf(g_strTemp, "Temp: %d oC     ", temperature);
 8000350:	79fb      	ldrb	r3, [r7, #7]
 8000352:	461a      	mov	r2, r3
 8000354:	4908      	ldr	r1, [pc, #32]	@ (8000378 <LCD_DisplayTempValue+0x3c>)
 8000356:	4807      	ldr	r0, [pc, #28]	@ (8000374 <LCD_DisplayTempValue+0x38>)
 8000358:	f005 f874 	bl	8005444 <siprintf>

	// Display on LCD----------------------------------------------------------------------
	ucg_DrawString(&g_ucg, 2, 40, 0, g_strTemp);
 800035c:	4b05      	ldr	r3, [pc, #20]	@ (8000374 <LCD_DisplayTempValue+0x38>)
 800035e:	9300      	str	r3, [sp, #0]
 8000360:	2300      	movs	r3, #0
 8000362:	2228      	movs	r2, #40	@ 0x28
 8000364:	2102      	movs	r1, #2
 8000366:	4805      	ldr	r0, [pc, #20]	@ (800037c <LCD_DisplayTempValue+0x40>)
 8000368:	f003 fe7e 	bl	8004068 <ucg_DrawString>
}
 800036c:	bf00      	nop
 800036e:	3708      	adds	r7, #8
 8000370:	46bd      	mov	sp, r7
 8000372:	bd80      	pop	{r7, pc}
 8000374:	200001a8 	.word	0x200001a8
 8000378:	08006254 	.word	0x08006254
 800037c:	200000f4 	.word	0x200000f4

08000380 <LCD_DisplayHumiValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_DisplayHumiValue (uint8_t humidity)
{
 8000380:	b580      	push	{r7, lr}
 8000382:	b084      	sub	sp, #16
 8000384:	af02      	add	r7, sp, #8
 8000386:	4603      	mov	r3, r0
 8000388:	71fb      	strb	r3, [r7, #7]
	// Store humidity values---------------------------------------------------------------
	memset(g_strHumi, 0, sizeof(g_strHumi));
 800038a:	221e      	movs	r2, #30
 800038c:	2100      	movs	r1, #0
 800038e:	480a      	ldr	r0, [pc, #40]	@ (80003b8 <LCD_DisplayHumiValue+0x38>)
 8000390:	f005 f950 	bl	8005634 <memset>

	sprintf(g_strHumi, "Humi: %d %%     ", humidity);
 8000394:	79fb      	ldrb	r3, [r7, #7]
 8000396:	461a      	mov	r2, r3
 8000398:	4908      	ldr	r1, [pc, #32]	@ (80003bc <LCD_DisplayHumiValue+0x3c>)
 800039a:	4807      	ldr	r0, [pc, #28]	@ (80003b8 <LCD_DisplayHumiValue+0x38>)
 800039c:	f005 f852 	bl	8005444 <siprintf>

	// Display on LCD----------------------------------------------------------------------
	ucg_DrawString(&g_ucg, 2, 60, 0, g_strHumi);
 80003a0:	4b05      	ldr	r3, [pc, #20]	@ (80003b8 <LCD_DisplayHumiValue+0x38>)
 80003a2:	9300      	str	r3, [sp, #0]
 80003a4:	2300      	movs	r3, #0
 80003a6:	223c      	movs	r2, #60	@ 0x3c
 80003a8:	2102      	movs	r1, #2
 80003aa:	4805      	ldr	r0, [pc, #20]	@ (80003c0 <LCD_DisplayHumiValue+0x40>)
 80003ac:	f003 fe5c 	bl	8004068 <ucg_DrawString>
}
 80003b0:	bf00      	nop
 80003b2:	3708      	adds	r7, #8
 80003b4:	46bd      	mov	sp, r7
 80003b6:	bd80      	pop	{r7, pc}
 80003b8:	200001c8 	.word	0x200001c8
 80003bc:	08006268 	.word	0x08006268
 80003c0:	200000f4 	.word	0x200000f4

080003c4 <LCD_DisplayLightValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_DisplayLightValue (uint16_t light)
{
 80003c4:	b580      	push	{r7, lr}
 80003c6:	b084      	sub	sp, #16
 80003c8:	af02      	add	r7, sp, #8
 80003ca:	4603      	mov	r3, r0
 80003cc:	80fb      	strh	r3, [r7, #6]
	// Store light intensity values--------------------------------------------------------
	memset(g_strLight, 0, sizeof(g_strLight));
 80003ce:	221e      	movs	r2, #30
 80003d0:	2100      	movs	r1, #0
 80003d2:	480a      	ldr	r0, [pc, #40]	@ (80003fc <LCD_DisplayLightValue+0x38>)
 80003d4:	f005 f92e 	bl	8005634 <memset>

	sprintf(g_strLight, "Light: %d Lux     ", light);
 80003d8:	88fb      	ldrh	r3, [r7, #6]
 80003da:	461a      	mov	r2, r3
 80003dc:	4908      	ldr	r1, [pc, #32]	@ (8000400 <LCD_DisplayLightValue+0x3c>)
 80003de:	4807      	ldr	r0, [pc, #28]	@ (80003fc <LCD_DisplayLightValue+0x38>)
 80003e0:	f005 f830 	bl	8005444 <siprintf>

	// Display on LCD----------------------------------------------------------------------
	ucg_DrawString(&g_ucg, 2, 80, 0, g_strLight);
 80003e4:	4b05      	ldr	r3, [pc, #20]	@ (80003fc <LCD_DisplayLightValue+0x38>)
 80003e6:	9300      	str	r3, [sp, #0]
 80003e8:	2300      	movs	r3, #0
 80003ea:	2250      	movs	r2, #80	@ 0x50
 80003ec:	2102      	movs	r1, #2
 80003ee:	4805      	ldr	r0, [pc, #20]	@ (8000404 <LCD_DisplayLightValue+0x40>)
 80003f0:	f003 fe3a 	bl	8004068 <ucg_DrawString>
}
 80003f4:	bf00      	nop
 80003f6:	3708      	adds	r7, #8
 80003f8:	46bd      	mov	sp, r7
 80003fa:	bd80      	pop	{r7, pc}
 80003fc:	200001e8 	.word	0x200001e8
 8000400:	0800627c 	.word	0x0800627c
 8000404:	200000f4 	.word	0x200000f4

08000408 <LCD_DisplayDetectionState>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_DisplayDetectionState (uint8_t state)
{
 8000408:	b580      	push	{r7, lr}
 800040a:	b084      	sub	sp, #16
 800040c:	af02      	add	r7, sp, #8
 800040e:	4603      	mov	r3, r0
 8000410:	71fb      	strb	r3, [r7, #7]
	if (state)
 8000412:	79fb      	ldrb	r3, [r7, #7]
 8000414:	2b00      	cmp	r3, #0
 8000416:	d008      	beq.n	800042a <LCD_DisplayDetectionState+0x22>
	{
		ucg_DrawString(&g_ucg, 2, 89, 0, "Motion: Yes   ");
 8000418:	4b0a      	ldr	r3, [pc, #40]	@ (8000444 <LCD_DisplayDetectionState+0x3c>)
 800041a:	9300      	str	r3, [sp, #0]
 800041c:	2300      	movs	r3, #0
 800041e:	2259      	movs	r2, #89	@ 0x59
 8000420:	2102      	movs	r1, #2
 8000422:	4809      	ldr	r0, [pc, #36]	@ (8000448 <LCD_DisplayDetectionState+0x40>)
 8000424:	f003 fe20 	bl	8004068 <ucg_DrawString>
	else
	{
		ucg_DrawString(&g_ucg, 2, 100, 0, "Motion: No   ");
	}

}
 8000428:	e007      	b.n	800043a <LCD_DisplayDetectionState+0x32>
		ucg_DrawString(&g_ucg, 2, 100, 0, "Motion: No   ");
 800042a:	4b08      	ldr	r3, [pc, #32]	@ (800044c <LCD_DisplayDetectionState+0x44>)
 800042c:	9300      	str	r3, [sp, #0]
 800042e:	2300      	movs	r3, #0
 8000430:	2264      	movs	r2, #100	@ 0x64
 8000432:	2102      	movs	r1, #2
 8000434:	4804      	ldr	r0, [pc, #16]	@ (8000448 <LCD_DisplayDetectionState+0x40>)
 8000436:	f003 fe17 	bl	8004068 <ucg_DrawString>
}
 800043a:	bf00      	nop
 800043c:	3708      	adds	r7, #8
 800043e:	46bd      	mov	sp, r7
 8000440:	bd80      	pop	{r7, pc}
 8000442:	bf00      	nop
 8000444:	08006290 	.word	0x08006290
 8000448:	200000f4 	.word	0x200000f4
 800044c:	080062a0 	.word	0x080062a0

08000450 <LCD_DisplayLedState>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_DisplayLedState (uint8_t state)
{
 8000450:	b580      	push	{r7, lr}
 8000452:	b084      	sub	sp, #16
 8000454:	af02      	add	r7, sp, #8
 8000456:	4603      	mov	r3, r0
 8000458:	71fb      	strb	r3, [r7, #7]
	if (state)
 800045a:	79fb      	ldrb	r3, [r7, #7]
 800045c:	2b00      	cmp	r3, #0
 800045e:	d008      	beq.n	8000472 <LCD_DisplayLedState+0x22>
	{
		ucg_DrawString(&g_ucg, 2, 109, 0, "Led: On   ");
 8000460:	4b0a      	ldr	r3, [pc, #40]	@ (800048c <LCD_DisplayLedState+0x3c>)
 8000462:	9300      	str	r3, [sp, #0]
 8000464:	2300      	movs	r3, #0
 8000466:	226d      	movs	r2, #109	@ 0x6d
 8000468:	2102      	movs	r1, #2
 800046a:	4809      	ldr	r0, [pc, #36]	@ (8000490 <LCD_DisplayLedState+0x40>)
 800046c:	f003 fdfc 	bl	8004068 <ucg_DrawString>
	}
	else
	{
		ucg_DrawString(&g_ucg, 2, 120, 0, "Led: Off   ");
	}
}
 8000470:	e007      	b.n	8000482 <LCD_DisplayLedState+0x32>
		ucg_DrawString(&g_ucg, 2, 120, 0, "Led: Off   ");
 8000472:	4b08      	ldr	r3, [pc, #32]	@ (8000494 <LCD_DisplayLedState+0x44>)
 8000474:	9300      	str	r3, [sp, #0]
 8000476:	2300      	movs	r3, #0
 8000478:	2278      	movs	r2, #120	@ 0x78
 800047a:	2102      	movs	r1, #2
 800047c:	4804      	ldr	r0, [pc, #16]	@ (8000490 <LCD_DisplayLedState+0x40>)
 800047e:	f003 fdf3 	bl	8004068 <ucg_DrawString>
}
 8000482:	bf00      	nop
 8000484:	3708      	adds	r7, #8
 8000486:	46bd      	mov	sp, r7
 8000488:	bd80      	pop	{r7, pc}
 800048a:	bf00      	nop
 800048c:	080062b0 	.word	0x080062b0
 8000490:	200000f4 	.word	0x200000f4
 8000494:	080062bc 	.word	0x080062bc

08000498 <LCD_ScreenHome>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenHome (void)
{
 8000498:	b580      	push	{r7, lr}
 800049a:	b084      	sub	sp, #16
 800049c:	af02      	add	r7, sp, #8
	g_currentScreen = SCREEN_HOME;
 800049e:	4b1b      	ldr	r3, [pc, #108]	@ (800050c <LCD_ScreenHome+0x74>)
 80004a0:	2200      	movs	r2, #0
 80004a2:	701a      	strb	r2, [r3, #0]
	uint16_t *frame = USART_GetFrame();
 80004a4:	f000 ff48 	bl	8001338 <USART_GetFrame>
 80004a8:	6078      	str	r0, [r7, #4]

	LCD_ClearScreen();
 80004aa:	f7ff ff37 	bl	800031c <LCD_ClearScreen>
	ucg_DrawString(&g_ucg, 42, 15, 0, "HOME");
 80004ae:	4b18      	ldr	r3, [pc, #96]	@ (8000510 <LCD_ScreenHome+0x78>)
 80004b0:	9300      	str	r3, [sp, #0]
 80004b2:	2300      	movs	r3, #0
 80004b4:	220f      	movs	r2, #15
 80004b6:	212a      	movs	r1, #42	@ 0x2a
 80004b8:	4816      	ldr	r0, [pc, #88]	@ (8000514 <LCD_ScreenHome+0x7c>)
 80004ba:	f003 fdd5 	bl	8004068 <ucg_DrawString>
	LCD_DisplayTempValue(CMD_DATA_TEMP);
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	330e      	adds	r3, #14
 80004c2:	881b      	ldrh	r3, [r3, #0]
 80004c4:	b2db      	uxtb	r3, r3
 80004c6:	4618      	mov	r0, r3
 80004c8:	f7ff ff38 	bl	800033c <LCD_DisplayTempValue>
	LCD_DisplayHumiValue(CMD_DATA_HUMI);
 80004cc:	687b      	ldr	r3, [r7, #4]
 80004ce:	330e      	adds	r3, #14
 80004d0:	881b      	ldrh	r3, [r3, #0]
 80004d2:	b2db      	uxtb	r3, r3
 80004d4:	4618      	mov	r0, r3
 80004d6:	f7ff ff53 	bl	8000380 <LCD_DisplayHumiValue>
	LCD_DisplayLightValue(CMD_DATA_LIGHT);
 80004da:	687b      	ldr	r3, [r7, #4]
 80004dc:	330e      	adds	r3, #14
 80004de:	881b      	ldrh	r3, [r3, #0]
 80004e0:	4618      	mov	r0, r3
 80004e2:	f7ff ff6f 	bl	80003c4 <LCD_DisplayLightValue>
	LCD_DisplayDetectionState(CMD_DATA_DETEC);
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	330e      	adds	r3, #14
 80004ea:	881b      	ldrh	r3, [r3, #0]
 80004ec:	b2db      	uxtb	r3, r3
 80004ee:	4618      	mov	r0, r3
 80004f0:	f7ff ff8a 	bl	8000408 <LCD_DisplayDetectionState>
	LCD_DisplayLedState(CMD_DATA_LED);
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	330e      	adds	r3, #14
 80004f8:	881b      	ldrh	r3, [r3, #0]
 80004fa:	b2db      	uxtb	r3, r3
 80004fc:	4618      	mov	r0, r3
 80004fe:	f7ff ffa7 	bl	8000450 <LCD_DisplayLedState>
}
 8000502:	bf00      	nop
 8000504:	3708      	adds	r7, #8
 8000506:	46bd      	mov	sp, r7
 8000508:	bd80      	pop	{r7, pc}
 800050a:	bf00      	nop
 800050c:	20000206 	.word	0x20000206
 8000510:	080062c8 	.word	0x080062c8
 8000514:	200000f4 	.word	0x200000f4

08000518 <LCD_ScreenMenuConfig>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenMenuConfig (void)
{
 8000518:	b580      	push	{r7, lr}
 800051a:	b082      	sub	sp, #8
 800051c:	af02      	add	r7, sp, #8
	g_currentScreen = SCREEN_MENU_CONFIG;
 800051e:	4b20      	ldr	r3, [pc, #128]	@ (80005a0 <LCD_ScreenMenuConfig+0x88>)
 8000520:	2201      	movs	r2, #1
 8000522:	701a      	strb	r2, [r3, #0]
	g_currentSelect = g_menuItemSelected;
 8000524:	4b1f      	ldr	r3, [pc, #124]	@ (80005a4 <LCD_ScreenMenuConfig+0x8c>)
 8000526:	781a      	ldrb	r2, [r3, #0]
 8000528:	4b1f      	ldr	r3, [pc, #124]	@ (80005a8 <LCD_ScreenMenuConfig+0x90>)
 800052a:	701a      	strb	r2, [r3, #0]

	LCD_ClearScreen();
 800052c:	f7ff fef6 	bl	800031c <LCD_ClearScreen>
	ucg_DrawString(&g_ucg, 21, 15, 0, "Menu Config");
 8000530:	4b1e      	ldr	r3, [pc, #120]	@ (80005ac <LCD_ScreenMenuConfig+0x94>)
 8000532:	9300      	str	r3, [sp, #0]
 8000534:	2300      	movs	r3, #0
 8000536:	220f      	movs	r2, #15
 8000538:	2115      	movs	r1, #21
 800053a:	481d      	ldr	r0, [pc, #116]	@ (80005b0 <LCD_ScreenMenuConfig+0x98>)
 800053c:	f003 fd94 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_1, ROW_0, 0, "-------------------------");
 8000540:	4b1c      	ldr	r3, [pc, #112]	@ (80005b4 <LCD_ScreenMenuConfig+0x9c>)
 8000542:	9300      	str	r3, [sp, #0]
 8000544:	2300      	movs	r3, #0
 8000546:	2220      	movs	r2, #32
 8000548:	2101      	movs	r1, #1
 800054a:	4819      	ldr	r0, [pc, #100]	@ (80005b0 <LCD_ScreenMenuConfig+0x98>)
 800054c:	f003 fd8c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_1, 0, "1. Distance");
 8000550:	4b19      	ldr	r3, [pc, #100]	@ (80005b8 <LCD_ScreenMenuConfig+0xa0>)
 8000552:	9300      	str	r3, [sp, #0]
 8000554:	2300      	movs	r3, #0
 8000556:	2233      	movs	r2, #51	@ 0x33
 8000558:	2112      	movs	r1, #18
 800055a:	4815      	ldr	r0, [pc, #84]	@ (80005b0 <LCD_ScreenMenuConfig+0x98>)
 800055c:	f003 fd84 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_2, 0, "2. Sensitivity");
 8000560:	4b16      	ldr	r3, [pc, #88]	@ (80005bc <LCD_ScreenMenuConfig+0xa4>)
 8000562:	9300      	str	r3, [sp, #0]
 8000564:	2300      	movs	r3, #0
 8000566:	2249      	movs	r2, #73	@ 0x49
 8000568:	2112      	movs	r1, #18
 800056a:	4811      	ldr	r0, [pc, #68]	@ (80005b0 <LCD_ScreenMenuConfig+0x98>)
 800056c:	f003 fd7c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_3, 0, "3. Latency");
 8000570:	4b13      	ldr	r3, [pc, #76]	@ (80005c0 <LCD_ScreenMenuConfig+0xa8>)
 8000572:	9300      	str	r3, [sp, #0]
 8000574:	2300      	movs	r3, #0
 8000576:	225f      	movs	r2, #95	@ 0x5f
 8000578:	2112      	movs	r1, #18
 800057a:	480d      	ldr	r0, [pc, #52]	@ (80005b0 <LCD_ScreenMenuConfig+0x98>)
 800057c:	f003 fd74 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_4, 0, "4. Light");
 8000580:	4b10      	ldr	r3, [pc, #64]	@ (80005c4 <LCD_ScreenMenuConfig+0xac>)
 8000582:	9300      	str	r3, [sp, #0]
 8000584:	2300      	movs	r3, #0
 8000586:	2275      	movs	r2, #117	@ 0x75
 8000588:	2112      	movs	r1, #18
 800058a:	4809      	ldr	r0, [pc, #36]	@ (80005b0 <LCD_ScreenMenuConfig+0x98>)
 800058c:	f003 fd6c 	bl	8004068 <ucg_DrawString>

	LCD_ScreenSelectPosition(g_menuItemSelected);
 8000590:	4b04      	ldr	r3, [pc, #16]	@ (80005a4 <LCD_ScreenMenuConfig+0x8c>)
 8000592:	781b      	ldrb	r3, [r3, #0]
 8000594:	4618      	mov	r0, r3
 8000596:	f000 fa0d 	bl	80009b4 <LCD_ScreenSelectPosition>
}
 800059a:	bf00      	nop
 800059c:	46bd      	mov	sp, r7
 800059e:	bd80      	pop	{r7, pc}
 80005a0:	20000206 	.word	0x20000206
 80005a4:	2000001c 	.word	0x2000001c
 80005a8:	2000001b 	.word	0x2000001b
 80005ac:	080062d0 	.word	0x080062d0
 80005b0:	200000f4 	.word	0x200000f4
 80005b4:	080062dc 	.word	0x080062dc
 80005b8:	080062f8 	.word	0x080062f8
 80005bc:	08006304 	.word	0x08006304
 80005c0:	08006314 	.word	0x08006314
 80005c4:	08006320 	.word	0x08006320

080005c8 <LCD_ScreenDistanceValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenDistanceValue (void)
{
 80005c8:	b580      	push	{r7, lr}
 80005ca:	b082      	sub	sp, #8
 80005cc:	af02      	add	r7, sp, #8
	g_currentScreen = SCREEN_VALUE_DISTANCE;
 80005ce:	4b20      	ldr	r3, [pc, #128]	@ (8000650 <LCD_ScreenDistanceValue+0x88>)
 80005d0:	2202      	movs	r2, #2
 80005d2:	701a      	strb	r2, [r3, #0]
	g_currentSelect = g_distanceValueSelected;
 80005d4:	4b1f      	ldr	r3, [pc, #124]	@ (8000654 <LCD_ScreenDistanceValue+0x8c>)
 80005d6:	781a      	ldrb	r2, [r3, #0]
 80005d8:	4b1f      	ldr	r3, [pc, #124]	@ (8000658 <LCD_ScreenDistanceValue+0x90>)
 80005da:	701a      	strb	r2, [r3, #0]

	LCD_ClearScreen();
 80005dc:	f7ff fe9e 	bl	800031c <LCD_ClearScreen>
	ucg_DrawString(&g_ucg, 14, 15, 0, "Distance Value");
 80005e0:	4b1e      	ldr	r3, [pc, #120]	@ (800065c <LCD_ScreenDistanceValue+0x94>)
 80005e2:	9300      	str	r3, [sp, #0]
 80005e4:	2300      	movs	r3, #0
 80005e6:	220f      	movs	r2, #15
 80005e8:	210e      	movs	r1, #14
 80005ea:	481d      	ldr	r0, [pc, #116]	@ (8000660 <LCD_ScreenDistanceValue+0x98>)
 80005ec:	f003 fd3c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_1, ROW_0, 0, "-------------------------");
 80005f0:	4b1c      	ldr	r3, [pc, #112]	@ (8000664 <LCD_ScreenDistanceValue+0x9c>)
 80005f2:	9300      	str	r3, [sp, #0]
 80005f4:	2300      	movs	r3, #0
 80005f6:	2220      	movs	r2, #32
 80005f8:	2101      	movs	r1, #1
 80005fa:	4819      	ldr	r0, [pc, #100]	@ (8000660 <LCD_ScreenDistanceValue+0x98>)
 80005fc:	f003 fd34 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_1, 0, "1m");
 8000600:	4b19      	ldr	r3, [pc, #100]	@ (8000668 <LCD_ScreenDistanceValue+0xa0>)
 8000602:	9300      	str	r3, [sp, #0]
 8000604:	2300      	movs	r3, #0
 8000606:	2233      	movs	r2, #51	@ 0x33
 8000608:	2112      	movs	r1, #18
 800060a:	4815      	ldr	r0, [pc, #84]	@ (8000660 <LCD_ScreenDistanceValue+0x98>)
 800060c:	f003 fd2c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_2, 0, "2m");
 8000610:	4b16      	ldr	r3, [pc, #88]	@ (800066c <LCD_ScreenDistanceValue+0xa4>)
 8000612:	9300      	str	r3, [sp, #0]
 8000614:	2300      	movs	r3, #0
 8000616:	2249      	movs	r2, #73	@ 0x49
 8000618:	2112      	movs	r1, #18
 800061a:	4811      	ldr	r0, [pc, #68]	@ (8000660 <LCD_ScreenDistanceValue+0x98>)
 800061c:	f003 fd24 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_3, 0, "3m");
 8000620:	4b13      	ldr	r3, [pc, #76]	@ (8000670 <LCD_ScreenDistanceValue+0xa8>)
 8000622:	9300      	str	r3, [sp, #0]
 8000624:	2300      	movs	r3, #0
 8000626:	225f      	movs	r2, #95	@ 0x5f
 8000628:	2112      	movs	r1, #18
 800062a:	480d      	ldr	r0, [pc, #52]	@ (8000660 <LCD_ScreenDistanceValue+0x98>)
 800062c:	f003 fd1c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_4, 0, "4m");
 8000630:	4b10      	ldr	r3, [pc, #64]	@ (8000674 <LCD_ScreenDistanceValue+0xac>)
 8000632:	9300      	str	r3, [sp, #0]
 8000634:	2300      	movs	r3, #0
 8000636:	2275      	movs	r2, #117	@ 0x75
 8000638:	2112      	movs	r1, #18
 800063a:	4809      	ldr	r0, [pc, #36]	@ (8000660 <LCD_ScreenDistanceValue+0x98>)
 800063c:	f003 fd14 	bl	8004068 <ucg_DrawString>

	LCD_ScreenValueSetMarker(g_distanceValueSelected);
 8000640:	4b04      	ldr	r3, [pc, #16]	@ (8000654 <LCD_ScreenDistanceValue+0x8c>)
 8000642:	781b      	ldrb	r3, [r3, #0]
 8000644:	4618      	mov	r0, r3
 8000646:	f000 fb25 	bl	8000c94 <LCD_ScreenValueSetMarker>
}
 800064a:	bf00      	nop
 800064c:	46bd      	mov	sp, r7
 800064e:	bd80      	pop	{r7, pc}
 8000650:	20000206 	.word	0x20000206
 8000654:	2000001d 	.word	0x2000001d
 8000658:	2000001b 	.word	0x2000001b
 800065c:	0800632c 	.word	0x0800632c
 8000660:	200000f4 	.word	0x200000f4
 8000664:	080062dc 	.word	0x080062dc
 8000668:	0800633c 	.word	0x0800633c
 800066c:	08006340 	.word	0x08006340
 8000670:	08006344 	.word	0x08006344
 8000674:	08006348 	.word	0x08006348

08000678 <LCD_ScreenSensitivityValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenSensitivityValue (void)
{
 8000678:	b580      	push	{r7, lr}
 800067a:	b082      	sub	sp, #8
 800067c:	af02      	add	r7, sp, #8
	g_currentScreen = SCREEN_VALUE_SENSITIVITY;
 800067e:	4b20      	ldr	r3, [pc, #128]	@ (8000700 <LCD_ScreenSensitivityValue+0x88>)
 8000680:	2203      	movs	r2, #3
 8000682:	701a      	strb	r2, [r3, #0]
	g_currentSelect = g_sensitivityValueSelected;
 8000684:	4b1f      	ldr	r3, [pc, #124]	@ (8000704 <LCD_ScreenSensitivityValue+0x8c>)
 8000686:	781a      	ldrb	r2, [r3, #0]
 8000688:	4b1f      	ldr	r3, [pc, #124]	@ (8000708 <LCD_ScreenSensitivityValue+0x90>)
 800068a:	701a      	strb	r2, [r3, #0]

	LCD_ClearScreen();
 800068c:	f7ff fe46 	bl	800031c <LCD_ClearScreen>
	ucg_DrawString(&g_ucg, 9, 15, 0, "Sensitivity Value");
 8000690:	4b1e      	ldr	r3, [pc, #120]	@ (800070c <LCD_ScreenSensitivityValue+0x94>)
 8000692:	9300      	str	r3, [sp, #0]
 8000694:	2300      	movs	r3, #0
 8000696:	220f      	movs	r2, #15
 8000698:	2109      	movs	r1, #9
 800069a:	481d      	ldr	r0, [pc, #116]	@ (8000710 <LCD_ScreenSensitivityValue+0x98>)
 800069c:	f003 fce4 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_1, ROW_0, 0, "-------------------------");
 80006a0:	4b1c      	ldr	r3, [pc, #112]	@ (8000714 <LCD_ScreenSensitivityValue+0x9c>)
 80006a2:	9300      	str	r3, [sp, #0]
 80006a4:	2300      	movs	r3, #0
 80006a6:	2220      	movs	r2, #32
 80006a8:	2101      	movs	r1, #1
 80006aa:	4819      	ldr	r0, [pc, #100]	@ (8000710 <LCD_ScreenSensitivityValue+0x98>)
 80006ac:	f003 fcdc 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_1, 0, "20");
 80006b0:	4b19      	ldr	r3, [pc, #100]	@ (8000718 <LCD_ScreenSensitivityValue+0xa0>)
 80006b2:	9300      	str	r3, [sp, #0]
 80006b4:	2300      	movs	r3, #0
 80006b6:	2233      	movs	r2, #51	@ 0x33
 80006b8:	2112      	movs	r1, #18
 80006ba:	4815      	ldr	r0, [pc, #84]	@ (8000710 <LCD_ScreenSensitivityValue+0x98>)
 80006bc:	f003 fcd4 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_2, 0, "40");
 80006c0:	4b16      	ldr	r3, [pc, #88]	@ (800071c <LCD_ScreenSensitivityValue+0xa4>)
 80006c2:	9300      	str	r3, [sp, #0]
 80006c4:	2300      	movs	r3, #0
 80006c6:	2249      	movs	r2, #73	@ 0x49
 80006c8:	2112      	movs	r1, #18
 80006ca:	4811      	ldr	r0, [pc, #68]	@ (8000710 <LCD_ScreenSensitivityValue+0x98>)
 80006cc:	f003 fccc 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_3, 0, "60");
 80006d0:	4b13      	ldr	r3, [pc, #76]	@ (8000720 <LCD_ScreenSensitivityValue+0xa8>)
 80006d2:	9300      	str	r3, [sp, #0]
 80006d4:	2300      	movs	r3, #0
 80006d6:	225f      	movs	r2, #95	@ 0x5f
 80006d8:	2112      	movs	r1, #18
 80006da:	480d      	ldr	r0, [pc, #52]	@ (8000710 <LCD_ScreenSensitivityValue+0x98>)
 80006dc:	f003 fcc4 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_4, 0, "80");
 80006e0:	4b10      	ldr	r3, [pc, #64]	@ (8000724 <LCD_ScreenSensitivityValue+0xac>)
 80006e2:	9300      	str	r3, [sp, #0]
 80006e4:	2300      	movs	r3, #0
 80006e6:	2275      	movs	r2, #117	@ 0x75
 80006e8:	2112      	movs	r1, #18
 80006ea:	4809      	ldr	r0, [pc, #36]	@ (8000710 <LCD_ScreenSensitivityValue+0x98>)
 80006ec:	f003 fcbc 	bl	8004068 <ucg_DrawString>

	LCD_ScreenValueSetMarker(g_sensitivityValueSelected);
 80006f0:	4b04      	ldr	r3, [pc, #16]	@ (8000704 <LCD_ScreenSensitivityValue+0x8c>)
 80006f2:	781b      	ldrb	r3, [r3, #0]
 80006f4:	4618      	mov	r0, r3
 80006f6:	f000 facd 	bl	8000c94 <LCD_ScreenValueSetMarker>
}
 80006fa:	bf00      	nop
 80006fc:	46bd      	mov	sp, r7
 80006fe:	bd80      	pop	{r7, pc}
 8000700:	20000206 	.word	0x20000206
 8000704:	2000001e 	.word	0x2000001e
 8000708:	2000001b 	.word	0x2000001b
 800070c:	0800634c 	.word	0x0800634c
 8000710:	200000f4 	.word	0x200000f4
 8000714:	080062dc 	.word	0x080062dc
 8000718:	08006360 	.word	0x08006360
 800071c:	08006364 	.word	0x08006364
 8000720:	08006368 	.word	0x08006368
 8000724:	0800636c 	.word	0x0800636c

08000728 <LCD_ScreenLatencyValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenLatencyValue (void)
{
 8000728:	b580      	push	{r7, lr}
 800072a:	b082      	sub	sp, #8
 800072c:	af02      	add	r7, sp, #8
	g_currentScreen = SCREEN_VALUE_LATENCY;
 800072e:	4b20      	ldr	r3, [pc, #128]	@ (80007b0 <LCD_ScreenLatencyValue+0x88>)
 8000730:	2204      	movs	r2, #4
 8000732:	701a      	strb	r2, [r3, #0]
	g_currentSelect = g_latencyValueSelected;
 8000734:	4b1f      	ldr	r3, [pc, #124]	@ (80007b4 <LCD_ScreenLatencyValue+0x8c>)
 8000736:	781a      	ldrb	r2, [r3, #0]
 8000738:	4b1f      	ldr	r3, [pc, #124]	@ (80007b8 <LCD_ScreenLatencyValue+0x90>)
 800073a:	701a      	strb	r2, [r3, #0]

	LCD_ClearScreen();
 800073c:	f7ff fdee 	bl	800031c <LCD_ClearScreen>
	ucg_DrawString(&g_ucg, 16, 15, 0, "Latency Value");
 8000740:	4b1e      	ldr	r3, [pc, #120]	@ (80007bc <LCD_ScreenLatencyValue+0x94>)
 8000742:	9300      	str	r3, [sp, #0]
 8000744:	2300      	movs	r3, #0
 8000746:	220f      	movs	r2, #15
 8000748:	2110      	movs	r1, #16
 800074a:	481d      	ldr	r0, [pc, #116]	@ (80007c0 <LCD_ScreenLatencyValue+0x98>)
 800074c:	f003 fc8c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_1, ROW_0, 0, "-------------------------");
 8000750:	4b1c      	ldr	r3, [pc, #112]	@ (80007c4 <LCD_ScreenLatencyValue+0x9c>)
 8000752:	9300      	str	r3, [sp, #0]
 8000754:	2300      	movs	r3, #0
 8000756:	2220      	movs	r2, #32
 8000758:	2101      	movs	r1, #1
 800075a:	4819      	ldr	r0, [pc, #100]	@ (80007c0 <LCD_ScreenLatencyValue+0x98>)
 800075c:	f003 fc84 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_1, 0, "2s");
 8000760:	4b19      	ldr	r3, [pc, #100]	@ (80007c8 <LCD_ScreenLatencyValue+0xa0>)
 8000762:	9300      	str	r3, [sp, #0]
 8000764:	2300      	movs	r3, #0
 8000766:	2233      	movs	r2, #51	@ 0x33
 8000768:	2112      	movs	r1, #18
 800076a:	4815      	ldr	r0, [pc, #84]	@ (80007c0 <LCD_ScreenLatencyValue+0x98>)
 800076c:	f003 fc7c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_2, 0, "4s");
 8000770:	4b16      	ldr	r3, [pc, #88]	@ (80007cc <LCD_ScreenLatencyValue+0xa4>)
 8000772:	9300      	str	r3, [sp, #0]
 8000774:	2300      	movs	r3, #0
 8000776:	2249      	movs	r2, #73	@ 0x49
 8000778:	2112      	movs	r1, #18
 800077a:	4811      	ldr	r0, [pc, #68]	@ (80007c0 <LCD_ScreenLatencyValue+0x98>)
 800077c:	f003 fc74 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_3, 0, "6s");
 8000780:	4b13      	ldr	r3, [pc, #76]	@ (80007d0 <LCD_ScreenLatencyValue+0xa8>)
 8000782:	9300      	str	r3, [sp, #0]
 8000784:	2300      	movs	r3, #0
 8000786:	225f      	movs	r2, #95	@ 0x5f
 8000788:	2112      	movs	r1, #18
 800078a:	480d      	ldr	r0, [pc, #52]	@ (80007c0 <LCD_ScreenLatencyValue+0x98>)
 800078c:	f003 fc6c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_4, 0, "8s");
 8000790:	4b10      	ldr	r3, [pc, #64]	@ (80007d4 <LCD_ScreenLatencyValue+0xac>)
 8000792:	9300      	str	r3, [sp, #0]
 8000794:	2300      	movs	r3, #0
 8000796:	2275      	movs	r2, #117	@ 0x75
 8000798:	2112      	movs	r1, #18
 800079a:	4809      	ldr	r0, [pc, #36]	@ (80007c0 <LCD_ScreenLatencyValue+0x98>)
 800079c:	f003 fc64 	bl	8004068 <ucg_DrawString>

	LCD_ScreenValueSetMarker(g_latencyValueSelected);
 80007a0:	4b04      	ldr	r3, [pc, #16]	@ (80007b4 <LCD_ScreenLatencyValue+0x8c>)
 80007a2:	781b      	ldrb	r3, [r3, #0]
 80007a4:	4618      	mov	r0, r3
 80007a6:	f000 fa75 	bl	8000c94 <LCD_ScreenValueSetMarker>
}
 80007aa:	bf00      	nop
 80007ac:	46bd      	mov	sp, r7
 80007ae:	bd80      	pop	{r7, pc}
 80007b0:	20000206 	.word	0x20000206
 80007b4:	2000001f 	.word	0x2000001f
 80007b8:	2000001b 	.word	0x2000001b
 80007bc:	08006370 	.word	0x08006370
 80007c0:	200000f4 	.word	0x200000f4
 80007c4:	080062dc 	.word	0x080062dc
 80007c8:	08006380 	.word	0x08006380
 80007cc:	08006384 	.word	0x08006384
 80007d0:	08006388 	.word	0x08006388
 80007d4:	0800638c 	.word	0x0800638c

080007d8 <LCD_ScreenLightValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenLightValue (void)
{
 80007d8:	b580      	push	{r7, lr}
 80007da:	b082      	sub	sp, #8
 80007dc:	af02      	add	r7, sp, #8
	g_currentScreen = SCREEN_VALUE_LIGHT;
 80007de:	4b20      	ldr	r3, [pc, #128]	@ (8000860 <LCD_ScreenLightValue+0x88>)
 80007e0:	2205      	movs	r2, #5
 80007e2:	701a      	strb	r2, [r3, #0]
	g_currentSelect = g_lightValueSelected;
 80007e4:	4b1f      	ldr	r3, [pc, #124]	@ (8000864 <LCD_ScreenLightValue+0x8c>)
 80007e6:	781a      	ldrb	r2, [r3, #0]
 80007e8:	4b1f      	ldr	r3, [pc, #124]	@ (8000868 <LCD_ScreenLightValue+0x90>)
 80007ea:	701a      	strb	r2, [r3, #0]

	LCD_ClearScreen();
 80007ec:	f7ff fd96 	bl	800031c <LCD_ClearScreen>
	ucg_DrawString(&g_ucg, 25, 15, 0, "Light Value");
 80007f0:	4b1e      	ldr	r3, [pc, #120]	@ (800086c <LCD_ScreenLightValue+0x94>)
 80007f2:	9300      	str	r3, [sp, #0]
 80007f4:	2300      	movs	r3, #0
 80007f6:	220f      	movs	r2, #15
 80007f8:	2119      	movs	r1, #25
 80007fa:	481d      	ldr	r0, [pc, #116]	@ (8000870 <LCD_ScreenLightValue+0x98>)
 80007fc:	f003 fc34 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_1, ROW_0, 0, "-------------------------");
 8000800:	4b1c      	ldr	r3, [pc, #112]	@ (8000874 <LCD_ScreenLightValue+0x9c>)
 8000802:	9300      	str	r3, [sp, #0]
 8000804:	2300      	movs	r3, #0
 8000806:	2220      	movs	r2, #32
 8000808:	2101      	movs	r1, #1
 800080a:	4819      	ldr	r0, [pc, #100]	@ (8000870 <LCD_ScreenLightValue+0x98>)
 800080c:	f003 fc2c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_1, 0, "10 Lux");
 8000810:	4b19      	ldr	r3, [pc, #100]	@ (8000878 <LCD_ScreenLightValue+0xa0>)
 8000812:	9300      	str	r3, [sp, #0]
 8000814:	2300      	movs	r3, #0
 8000816:	2233      	movs	r2, #51	@ 0x33
 8000818:	2112      	movs	r1, #18
 800081a:	4815      	ldr	r0, [pc, #84]	@ (8000870 <LCD_ScreenLightValue+0x98>)
 800081c:	f003 fc24 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_2, 0, "200 Lux");
 8000820:	4b16      	ldr	r3, [pc, #88]	@ (800087c <LCD_ScreenLightValue+0xa4>)
 8000822:	9300      	str	r3, [sp, #0]
 8000824:	2300      	movs	r3, #0
 8000826:	2249      	movs	r2, #73	@ 0x49
 8000828:	2112      	movs	r1, #18
 800082a:	4811      	ldr	r0, [pc, #68]	@ (8000870 <LCD_ScreenLightValue+0x98>)
 800082c:	f003 fc1c 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_3, 0, "600 Lux");
 8000830:	4b13      	ldr	r3, [pc, #76]	@ (8000880 <LCD_ScreenLightValue+0xa8>)
 8000832:	9300      	str	r3, [sp, #0]
 8000834:	2300      	movs	r3, #0
 8000836:	225f      	movs	r2, #95	@ 0x5f
 8000838:	2112      	movs	r1, #18
 800083a:	480d      	ldr	r0, [pc, #52]	@ (8000870 <LCD_ScreenLightValue+0x98>)
 800083c:	f003 fc14 	bl	8004068 <ucg_DrawString>
	ucg_DrawString(&g_ucg, COLUMN_2, ROW_4, 0, "1000 Lux");
 8000840:	4b10      	ldr	r3, [pc, #64]	@ (8000884 <LCD_ScreenLightValue+0xac>)
 8000842:	9300      	str	r3, [sp, #0]
 8000844:	2300      	movs	r3, #0
 8000846:	2275      	movs	r2, #117	@ 0x75
 8000848:	2112      	movs	r1, #18
 800084a:	4809      	ldr	r0, [pc, #36]	@ (8000870 <LCD_ScreenLightValue+0x98>)
 800084c:	f003 fc0c 	bl	8004068 <ucg_DrawString>

	LCD_ScreenValueSetMarker(g_lightValueSelected);
 8000850:	4b04      	ldr	r3, [pc, #16]	@ (8000864 <LCD_ScreenLightValue+0x8c>)
 8000852:	781b      	ldrb	r3, [r3, #0]
 8000854:	4618      	mov	r0, r3
 8000856:	f000 fa1d 	bl	8000c94 <LCD_ScreenValueSetMarker>
}
 800085a:	bf00      	nop
 800085c:	46bd      	mov	sp, r7
 800085e:	bd80      	pop	{r7, pc}
 8000860:	20000206 	.word	0x20000206
 8000864:	20000020 	.word	0x20000020
 8000868:	2000001b 	.word	0x2000001b
 800086c:	08006390 	.word	0x08006390
 8000870:	200000f4 	.word	0x200000f4
 8000874:	080062dc 	.word	0x080062dc
 8000878:	0800639c 	.word	0x0800639c
 800087c:	080063a4 	.word	0x080063a4
 8000880:	080063ac 	.word	0x080063ac
 8000884:	080063b4 	.word	0x080063b4

08000888 <LCD_ScreenMoveUp>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenMoveUp (void)
{
 8000888:	b580      	push	{r7, lr}
 800088a:	af00      	add	r7, sp, #0
	if (g_currentScreen == SCREEN_HOME)
 800088c:	4b0f      	ldr	r3, [pc, #60]	@ (80008cc <LCD_ScreenMoveUp+0x44>)
 800088e:	781b      	ldrb	r3, [r3, #0]
 8000890:	2b00      	cmp	r3, #0
 8000892:	d018      	beq.n	80008c6 <LCD_ScreenMoveUp+0x3e>
	{
		return;
	}

    // Xóa lựa chọn ở vị trí cũ
	LCD_ScreenClearSelectPosition(g_currentSelect);
 8000894:	4b0e      	ldr	r3, [pc, #56]	@ (80008d0 <LCD_ScreenMoveUp+0x48>)
 8000896:	781b      	ldrb	r3, [r3, #0]
 8000898:	4618      	mov	r0, r3
 800089a:	f000 f8cd 	bl	8000a38 <LCD_ScreenClearSelectPosition>

    // Nếu đang ở giá trị đầu tiên và nhấn lên, chuyển sang giá trị cuối cùng
    if (g_currentSelect == VALUE_1)
 800089e:	4b0c      	ldr	r3, [pc, #48]	@ (80008d0 <LCD_ScreenMoveUp+0x48>)
 80008a0:	781b      	ldrb	r3, [r3, #0]
 80008a2:	2b01      	cmp	r3, #1
 80008a4:	d103      	bne.n	80008ae <LCD_ScreenMoveUp+0x26>
    {
    	g_currentSelect = VALUE_4;
 80008a6:	4b0a      	ldr	r3, [pc, #40]	@ (80008d0 <LCD_ScreenMoveUp+0x48>)
 80008a8:	2204      	movs	r2, #4
 80008aa:	701a      	strb	r2, [r3, #0]
 80008ac:	e005      	b.n	80008ba <LCD_ScreenMoveUp+0x32>
    }
    else
    {
    	g_currentSelect--;
 80008ae:	4b08      	ldr	r3, [pc, #32]	@ (80008d0 <LCD_ScreenMoveUp+0x48>)
 80008b0:	781b      	ldrb	r3, [r3, #0]
 80008b2:	3b01      	subs	r3, #1
 80008b4:	b2da      	uxtb	r2, r3
 80008b6:	4b06      	ldr	r3, [pc, #24]	@ (80008d0 <LCD_ScreenMoveUp+0x48>)
 80008b8:	701a      	strb	r2, [r3, #0]
    }

    // Đặt dấu lựa chọn tại vị trí mới
    LCD_ScreenSelectPosition(g_currentSelect);
 80008ba:	4b05      	ldr	r3, [pc, #20]	@ (80008d0 <LCD_ScreenMoveUp+0x48>)
 80008bc:	781b      	ldrb	r3, [r3, #0]
 80008be:	4618      	mov	r0, r3
 80008c0:	f000 f878 	bl	80009b4 <LCD_ScreenSelectPosition>
 80008c4:	e000      	b.n	80008c8 <LCD_ScreenMoveUp+0x40>
		return;
 80008c6:	bf00      	nop
}
 80008c8:	bd80      	pop	{r7, pc}
 80008ca:	bf00      	nop
 80008cc:	20000206 	.word	0x20000206
 80008d0:	2000001b 	.word	0x2000001b

080008d4 <LCD_ScreenNextAndSet>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenNextAndSet (void)
{
 80008d4:	b580      	push	{r7, lr}
 80008d6:	af00      	add	r7, sp, #0
	switch (g_currentScreen)
 80008d8:	4b30      	ldr	r3, [pc, #192]	@ (800099c <LCD_ScreenNextAndSet+0xc8>)
 80008da:	781b      	ldrb	r3, [r3, #0]
 80008dc:	2b05      	cmp	r3, #5
 80008de:	d859      	bhi.n	8000994 <LCD_ScreenNextAndSet+0xc0>
 80008e0:	a201      	add	r2, pc, #4	@ (adr r2, 80008e8 <LCD_ScreenNextAndSet+0x14>)
 80008e2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80008e6:	bf00      	nop
 80008e8:	08000995 	.word	0x08000995
 80008ec:	08000901 	.word	0x08000901
 80008f0:	0800093d 	.word	0x0800093d
 80008f4:	08000953 	.word	0x08000953
 80008f8:	08000969 	.word	0x08000969
 80008fc:	0800097f 	.word	0x0800097f
		case SCREEN_HOME:
			break;

		case SCREEN_MENU_CONFIG:
		{
			switch (g_currentSelect)
 8000900:	4b27      	ldr	r3, [pc, #156]	@ (80009a0 <LCD_ScreenNextAndSet+0xcc>)
 8000902:	781b      	ldrb	r3, [r3, #0]
 8000904:	3b01      	subs	r3, #1
 8000906:	2b03      	cmp	r3, #3
 8000908:	d816      	bhi.n	8000938 <LCD_ScreenNextAndSet+0x64>
 800090a:	a201      	add	r2, pc, #4	@ (adr r2, 8000910 <LCD_ScreenNextAndSet+0x3c>)
 800090c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000910:	08000921 	.word	0x08000921
 8000914:	08000927 	.word	0x08000927
 8000918:	0800092d 	.word	0x0800092d
 800091c:	08000933 	.word	0x08000933
			{
				case MENU_DISTANCE:
				{
					LCD_ScreenDistanceValue();
 8000920:	f7ff fe52 	bl	80005c8 <LCD_ScreenDistanceValue>
					break;
 8000924:	e009      	b.n	800093a <LCD_ScreenNextAndSet+0x66>
				}

				case MENU_SENSITIVITY:
				{
					LCD_ScreenSensitivityValue();
 8000926:	f7ff fea7 	bl	8000678 <LCD_ScreenSensitivityValue>
					break;
 800092a:	e006      	b.n	800093a <LCD_ScreenNextAndSet+0x66>
				}

				case MENU_LATENCY:
				{
					LCD_ScreenLatencyValue();
 800092c:	f7ff fefc 	bl	8000728 <LCD_ScreenLatencyValue>
					break;
 8000930:	e003      	b.n	800093a <LCD_ScreenNextAndSet+0x66>
				}

				case MENU_LIGHT:
				{
					LCD_ScreenLightValue();
 8000932:	f7ff ff51 	bl	80007d8 <LCD_ScreenLightValue>
					break;
 8000936:	e000      	b.n	800093a <LCD_ScreenNextAndSet+0x66>
				}

				default:
					break;
 8000938:	bf00      	nop
			}

			break;
 800093a:	e02c      	b.n	8000996 <LCD_ScreenNextAndSet+0xc2>
		}

		case SCREEN_VALUE_DISTANCE:
		{
			LCD_ScreenSetDistanceValue(g_distanceValueSelected);	// Distance Value dang la gia tri cu
 800093c:	4b19      	ldr	r3, [pc, #100]	@ (80009a4 <LCD_ScreenNextAndSet+0xd0>)
 800093e:	781b      	ldrb	r3, [r3, #0]
 8000940:	4618      	mov	r0, r3
 8000942:	f000 f93f 	bl	8000bc4 <LCD_ScreenSetDistanceValue>
			USART_SendDistanceValue(g_distanceValueSelected);
 8000946:	4b17      	ldr	r3, [pc, #92]	@ (80009a4 <LCD_ScreenNextAndSet+0xd0>)
 8000948:	781b      	ldrb	r3, [r3, #0]
 800094a:	4618      	mov	r0, r3
 800094c:	f000 fe18 	bl	8001580 <USART_SendDistanceValue>
			break;
 8000950:	e021      	b.n	8000996 <LCD_ScreenNextAndSet+0xc2>
		}

		case SCREEN_VALUE_SENSITIVITY:
		{
			LCD_ScreenSetSensitivityValue(g_sensitivityValueSelected);
 8000952:	4b15      	ldr	r3, [pc, #84]	@ (80009a8 <LCD_ScreenNextAndSet+0xd4>)
 8000954:	781b      	ldrb	r3, [r3, #0]
 8000956:	4618      	mov	r0, r3
 8000958:	f000 f94e 	bl	8000bf8 <LCD_ScreenSetSensitivityValue>
			USART_SendDistanceValue(g_sensitivityValueSelected);
 800095c:	4b12      	ldr	r3, [pc, #72]	@ (80009a8 <LCD_ScreenNextAndSet+0xd4>)
 800095e:	781b      	ldrb	r3, [r3, #0]
 8000960:	4618      	mov	r0, r3
 8000962:	f000 fe0d 	bl	8001580 <USART_SendDistanceValue>
			break;
 8000966:	e016      	b.n	8000996 <LCD_ScreenNextAndSet+0xc2>
		}

		case SCREEN_VALUE_LATENCY:
		{
			LCD_ScreenSetLatencyValue(g_latencyValueSelected);
 8000968:	4b10      	ldr	r3, [pc, #64]	@ (80009ac <LCD_ScreenNextAndSet+0xd8>)
 800096a:	781b      	ldrb	r3, [r3, #0]
 800096c:	4618      	mov	r0, r3
 800096e:	f000 f95d 	bl	8000c2c <LCD_ScreenSetLatencyValue>
			USART_SendDistanceValue(g_latencyValueSelected);
 8000972:	4b0e      	ldr	r3, [pc, #56]	@ (80009ac <LCD_ScreenNextAndSet+0xd8>)
 8000974:	781b      	ldrb	r3, [r3, #0]
 8000976:	4618      	mov	r0, r3
 8000978:	f000 fe02 	bl	8001580 <USART_SendDistanceValue>
			break;
 800097c:	e00b      	b.n	8000996 <LCD_ScreenNextAndSet+0xc2>
		}

		case SCREEN_VALUE_LIGHT:
		{
			LCD_ScreenSetLightValue(g_lightValueSelected);
 800097e:	4b0c      	ldr	r3, [pc, #48]	@ (80009b0 <LCD_ScreenNextAndSet+0xdc>)
 8000980:	781b      	ldrb	r3, [r3, #0]
 8000982:	4618      	mov	r0, r3
 8000984:	f000 f96c 	bl	8000c60 <LCD_ScreenSetLightValue>
			USART_SendDistanceValue(g_lightValueSelected);
 8000988:	4b09      	ldr	r3, [pc, #36]	@ (80009b0 <LCD_ScreenNextAndSet+0xdc>)
 800098a:	781b      	ldrb	r3, [r3, #0]
 800098c:	4618      	mov	r0, r3
 800098e:	f000 fdf7 	bl	8001580 <USART_SendDistanceValue>
			break;
 8000992:	e000      	b.n	8000996 <LCD_ScreenNextAndSet+0xc2>
		}

		default:
			break;
 8000994:	bf00      	nop
	}
}
 8000996:	bf00      	nop
 8000998:	bd80      	pop	{r7, pc}
 800099a:	bf00      	nop
 800099c:	20000206 	.word	0x20000206
 80009a0:	2000001b 	.word	0x2000001b
 80009a4:	2000001d 	.word	0x2000001d
 80009a8:	2000001e 	.word	0x2000001e
 80009ac:	2000001f 	.word	0x2000001f
 80009b0:	20000020 	.word	0x20000020

080009b4 <LCD_ScreenSelectPosition>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenSelectPosition (value_e value)
{
 80009b4:	b580      	push	{r7, lr}
 80009b6:	b084      	sub	sp, #16
 80009b8:	af02      	add	r7, sp, #8
 80009ba:	4603      	mov	r3, r0
 80009bc:	71fb      	strb	r3, [r7, #7]
	switch (value)
 80009be:	79fb      	ldrb	r3, [r7, #7]
 80009c0:	3b01      	subs	r3, #1
 80009c2:	2b03      	cmp	r3, #3
 80009c4:	d82e      	bhi.n	8000a24 <LCD_ScreenSelectPosition+0x70>
 80009c6:	a201      	add	r2, pc, #4	@ (adr r2, 80009cc <LCD_ScreenSelectPosition+0x18>)
 80009c8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80009cc:	080009dd 	.word	0x080009dd
 80009d0:	080009ef 	.word	0x080009ef
 80009d4:	08000a01 	.word	0x08000a01
 80009d8:	08000a13 	.word	0x08000a13
	{
		case VALUE_1:
			ucg_DrawString(&g_ucg, COLUMN_1, ROW_1, 0, g_symbolStr);
 80009dc:	4b14      	ldr	r3, [pc, #80]	@ (8000a30 <LCD_ScreenSelectPosition+0x7c>)
 80009de:	9300      	str	r3, [sp, #0]
 80009e0:	2300      	movs	r3, #0
 80009e2:	2233      	movs	r2, #51	@ 0x33
 80009e4:	2101      	movs	r1, #1
 80009e6:	4813      	ldr	r0, [pc, #76]	@ (8000a34 <LCD_ScreenSelectPosition+0x80>)
 80009e8:	f003 fb3e 	bl	8004068 <ucg_DrawString>
			break;
 80009ec:	e01b      	b.n	8000a26 <LCD_ScreenSelectPosition+0x72>

		case VALUE_2:
			ucg_DrawString(&g_ucg, COLUMN_1, ROW_2, 0, g_symbolStr);
 80009ee:	4b10      	ldr	r3, [pc, #64]	@ (8000a30 <LCD_ScreenSelectPosition+0x7c>)
 80009f0:	9300      	str	r3, [sp, #0]
 80009f2:	2300      	movs	r3, #0
 80009f4:	2249      	movs	r2, #73	@ 0x49
 80009f6:	2101      	movs	r1, #1
 80009f8:	480e      	ldr	r0, [pc, #56]	@ (8000a34 <LCD_ScreenSelectPosition+0x80>)
 80009fa:	f003 fb35 	bl	8004068 <ucg_DrawString>
			break;
 80009fe:	e012      	b.n	8000a26 <LCD_ScreenSelectPosition+0x72>

		case VALUE_3:
			ucg_DrawString(&g_ucg, COLUMN_1, ROW_3, 0, g_symbolStr);
 8000a00:	4b0b      	ldr	r3, [pc, #44]	@ (8000a30 <LCD_ScreenSelectPosition+0x7c>)
 8000a02:	9300      	str	r3, [sp, #0]
 8000a04:	2300      	movs	r3, #0
 8000a06:	225f      	movs	r2, #95	@ 0x5f
 8000a08:	2101      	movs	r1, #1
 8000a0a:	480a      	ldr	r0, [pc, #40]	@ (8000a34 <LCD_ScreenSelectPosition+0x80>)
 8000a0c:	f003 fb2c 	bl	8004068 <ucg_DrawString>
			break;
 8000a10:	e009      	b.n	8000a26 <LCD_ScreenSelectPosition+0x72>

		case VALUE_4:
			ucg_DrawString(&g_ucg, COLUMN_1, ROW_4, 0, g_symbolStr);
 8000a12:	4b07      	ldr	r3, [pc, #28]	@ (8000a30 <LCD_ScreenSelectPosition+0x7c>)
 8000a14:	9300      	str	r3, [sp, #0]
 8000a16:	2300      	movs	r3, #0
 8000a18:	2275      	movs	r2, #117	@ 0x75
 8000a1a:	2101      	movs	r1, #1
 8000a1c:	4805      	ldr	r0, [pc, #20]	@ (8000a34 <LCD_ScreenSelectPosition+0x80>)
 8000a1e:	f003 fb23 	bl	8004068 <ucg_DrawString>
			break;
 8000a22:	e000      	b.n	8000a26 <LCD_ScreenSelectPosition+0x72>

		default:
			break;
 8000a24:	bf00      	nop
	}
}
 8000a26:	bf00      	nop
 8000a28:	3708      	adds	r7, #8
 8000a2a:	46bd      	mov	sp, r7
 8000a2c:	bd80      	pop	{r7, pc}
 8000a2e:	bf00      	nop
 8000a30:	20000000 	.word	0x20000000
 8000a34:	200000f4 	.word	0x200000f4

08000a38 <LCD_ScreenClearSelectPosition>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenClearSelectPosition (value_e value)
{
 8000a38:	b580      	push	{r7, lr}
 8000a3a:	b084      	sub	sp, #16
 8000a3c:	af02      	add	r7, sp, #8
 8000a3e:	4603      	mov	r3, r0
 8000a40:	71fb      	strb	r3, [r7, #7]
	switch (value)
 8000a42:	79fb      	ldrb	r3, [r7, #7]
 8000a44:	3b01      	subs	r3, #1
 8000a46:	2b03      	cmp	r3, #3
 8000a48:	d82e      	bhi.n	8000aa8 <LCD_ScreenClearSelectPosition+0x70>
 8000a4a:	a201      	add	r2, pc, #4	@ (adr r2, 8000a50 <LCD_ScreenClearSelectPosition+0x18>)
 8000a4c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000a50:	08000a61 	.word	0x08000a61
 8000a54:	08000a73 	.word	0x08000a73
 8000a58:	08000a85 	.word	0x08000a85
 8000a5c:	08000a97 	.word	0x08000a97
	{
		case VALUE_1:
			ucg_DrawString(&g_ucg, COLUMN_1, ROW_1, 0, g_clearSymbolStr);
 8000a60:	4b14      	ldr	r3, [pc, #80]	@ (8000ab4 <LCD_ScreenClearSelectPosition+0x7c>)
 8000a62:	9300      	str	r3, [sp, #0]
 8000a64:	2300      	movs	r3, #0
 8000a66:	2233      	movs	r2, #51	@ 0x33
 8000a68:	2101      	movs	r1, #1
 8000a6a:	4813      	ldr	r0, [pc, #76]	@ (8000ab8 <LCD_ScreenClearSelectPosition+0x80>)
 8000a6c:	f003 fafc 	bl	8004068 <ucg_DrawString>
			break;
 8000a70:	e01b      	b.n	8000aaa <LCD_ScreenClearSelectPosition+0x72>

		case VALUE_2:
			ucg_DrawString(&g_ucg, COLUMN_1, ROW_2, 0, g_clearSymbolStr);
 8000a72:	4b10      	ldr	r3, [pc, #64]	@ (8000ab4 <LCD_ScreenClearSelectPosition+0x7c>)
 8000a74:	9300      	str	r3, [sp, #0]
 8000a76:	2300      	movs	r3, #0
 8000a78:	2249      	movs	r2, #73	@ 0x49
 8000a7a:	2101      	movs	r1, #1
 8000a7c:	480e      	ldr	r0, [pc, #56]	@ (8000ab8 <LCD_ScreenClearSelectPosition+0x80>)
 8000a7e:	f003 faf3 	bl	8004068 <ucg_DrawString>
			break;
 8000a82:	e012      	b.n	8000aaa <LCD_ScreenClearSelectPosition+0x72>

		case VALUE_3:
			ucg_DrawString(&g_ucg, COLUMN_1, ROW_3, 0, g_clearSymbolStr);
 8000a84:	4b0b      	ldr	r3, [pc, #44]	@ (8000ab4 <LCD_ScreenClearSelectPosition+0x7c>)
 8000a86:	9300      	str	r3, [sp, #0]
 8000a88:	2300      	movs	r3, #0
 8000a8a:	225f      	movs	r2, #95	@ 0x5f
 8000a8c:	2101      	movs	r1, #1
 8000a8e:	480a      	ldr	r0, [pc, #40]	@ (8000ab8 <LCD_ScreenClearSelectPosition+0x80>)
 8000a90:	f003 faea 	bl	8004068 <ucg_DrawString>
			break;
 8000a94:	e009      	b.n	8000aaa <LCD_ScreenClearSelectPosition+0x72>

		case VALUE_4:
			ucg_DrawString(&g_ucg, COLUMN_1, ROW_4, 0, g_clearSymbolStr);
 8000a96:	4b07      	ldr	r3, [pc, #28]	@ (8000ab4 <LCD_ScreenClearSelectPosition+0x7c>)
 8000a98:	9300      	str	r3, [sp, #0]
 8000a9a:	2300      	movs	r3, #0
 8000a9c:	2275      	movs	r2, #117	@ 0x75
 8000a9e:	2101      	movs	r1, #1
 8000aa0:	4805      	ldr	r0, [pc, #20]	@ (8000ab8 <LCD_ScreenClearSelectPosition+0x80>)
 8000aa2:	f003 fae1 	bl	8004068 <ucg_DrawString>
			break;
 8000aa6:	e000      	b.n	8000aaa <LCD_ScreenClearSelectPosition+0x72>

		default:
			break;
 8000aa8:	bf00      	nop
	}
}
 8000aaa:	bf00      	nop
 8000aac:	3708      	adds	r7, #8
 8000aae:	46bd      	mov	sp, r7
 8000ab0:	bd80      	pop	{r7, pc}
 8000ab2:	bf00      	nop
 8000ab4:	20000004 	.word	0x20000004
 8000ab8:	200000f4 	.word	0x200000f4

08000abc <LCD_ScreenSetValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenSetValue (value_e value)
{
 8000abc:	b580      	push	{r7, lr}
 8000abe:	b084      	sub	sp, #16
 8000ac0:	af02      	add	r7, sp, #8
 8000ac2:	4603      	mov	r3, r0
 8000ac4:	71fb      	strb	r3, [r7, #7]
	switch (value)
 8000ac6:	79fb      	ldrb	r3, [r7, #7]
 8000ac8:	3b01      	subs	r3, #1
 8000aca:	2b03      	cmp	r3, #3
 8000acc:	d82e      	bhi.n	8000b2c <LCD_ScreenSetValue+0x70>
 8000ace:	a201      	add	r2, pc, #4	@ (adr r2, 8000ad4 <LCD_ScreenSetValue+0x18>)
 8000ad0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000ad4:	08000ae5 	.word	0x08000ae5
 8000ad8:	08000af7 	.word	0x08000af7
 8000adc:	08000b09 	.word	0x08000b09
 8000ae0:	08000b1b 	.word	0x08000b1b
	{
		case VALUE_1:
			ucg_DrawString(&g_ucg, COLUMN_3, ROW_1, 0, g_setStr);
 8000ae4:	4b14      	ldr	r3, [pc, #80]	@ (8000b38 <LCD_ScreenSetValue+0x7c>)
 8000ae6:	9300      	str	r3, [sp, #0]
 8000ae8:	2300      	movs	r3, #0
 8000aea:	2233      	movs	r2, #51	@ 0x33
 8000aec:	2157      	movs	r1, #87	@ 0x57
 8000aee:	4813      	ldr	r0, [pc, #76]	@ (8000b3c <LCD_ScreenSetValue+0x80>)
 8000af0:	f003 faba 	bl	8004068 <ucg_DrawString>
			break;
 8000af4:	e01b      	b.n	8000b2e <LCD_ScreenSetValue+0x72>

		case VALUE_2:
			ucg_DrawString(&g_ucg, COLUMN_3, ROW_2, 0, g_setStr);
 8000af6:	4b10      	ldr	r3, [pc, #64]	@ (8000b38 <LCD_ScreenSetValue+0x7c>)
 8000af8:	9300      	str	r3, [sp, #0]
 8000afa:	2300      	movs	r3, #0
 8000afc:	2249      	movs	r2, #73	@ 0x49
 8000afe:	2157      	movs	r1, #87	@ 0x57
 8000b00:	480e      	ldr	r0, [pc, #56]	@ (8000b3c <LCD_ScreenSetValue+0x80>)
 8000b02:	f003 fab1 	bl	8004068 <ucg_DrawString>
			break;
 8000b06:	e012      	b.n	8000b2e <LCD_ScreenSetValue+0x72>

		case VALUE_3:
			ucg_DrawString(&g_ucg, COLUMN_3, ROW_3, 0, g_setStr);
 8000b08:	4b0b      	ldr	r3, [pc, #44]	@ (8000b38 <LCD_ScreenSetValue+0x7c>)
 8000b0a:	9300      	str	r3, [sp, #0]
 8000b0c:	2300      	movs	r3, #0
 8000b0e:	225f      	movs	r2, #95	@ 0x5f
 8000b10:	2157      	movs	r1, #87	@ 0x57
 8000b12:	480a      	ldr	r0, [pc, #40]	@ (8000b3c <LCD_ScreenSetValue+0x80>)
 8000b14:	f003 faa8 	bl	8004068 <ucg_DrawString>
			break;
 8000b18:	e009      	b.n	8000b2e <LCD_ScreenSetValue+0x72>

		case VALUE_4:
			ucg_DrawString(&g_ucg, COLUMN_3, ROW_4, 0, g_setStr);
 8000b1a:	4b07      	ldr	r3, [pc, #28]	@ (8000b38 <LCD_ScreenSetValue+0x7c>)
 8000b1c:	9300      	str	r3, [sp, #0]
 8000b1e:	2300      	movs	r3, #0
 8000b20:	2275      	movs	r2, #117	@ 0x75
 8000b22:	2157      	movs	r1, #87	@ 0x57
 8000b24:	4805      	ldr	r0, [pc, #20]	@ (8000b3c <LCD_ScreenSetValue+0x80>)
 8000b26:	f003 fa9f 	bl	8004068 <ucg_DrawString>
			break;
 8000b2a:	e000      	b.n	8000b2e <LCD_ScreenSetValue+0x72>

		default:
			break;
 8000b2c:	bf00      	nop
	}
}
 8000b2e:	bf00      	nop
 8000b30:	3708      	adds	r7, #8
 8000b32:	46bd      	mov	sp, r7
 8000b34:	bd80      	pop	{r7, pc}
 8000b36:	bf00      	nop
 8000b38:	20000008 	.word	0x20000008
 8000b3c:	200000f4 	.word	0x200000f4

08000b40 <LCD_ScreenClearSetItem>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenClearSetItem (value_e value)
{
 8000b40:	b580      	push	{r7, lr}
 8000b42:	b084      	sub	sp, #16
 8000b44:	af02      	add	r7, sp, #8
 8000b46:	4603      	mov	r3, r0
 8000b48:	71fb      	strb	r3, [r7, #7]
	switch (value)
 8000b4a:	79fb      	ldrb	r3, [r7, #7]
 8000b4c:	3b01      	subs	r3, #1
 8000b4e:	2b03      	cmp	r3, #3
 8000b50:	d82e      	bhi.n	8000bb0 <LCD_ScreenClearSetItem+0x70>
 8000b52:	a201      	add	r2, pc, #4	@ (adr r2, 8000b58 <LCD_ScreenClearSetItem+0x18>)
 8000b54:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000b58:	08000b69 	.word	0x08000b69
 8000b5c:	08000b7b 	.word	0x08000b7b
 8000b60:	08000b8d 	.word	0x08000b8d
 8000b64:	08000b9f 	.word	0x08000b9f
	{
		case VALUE_1:
			ucg_DrawString(&g_ucg, COLUMN_3, ROW_1, 0, g_clearSetStr);
 8000b68:	4b14      	ldr	r3, [pc, #80]	@ (8000bbc <LCD_ScreenClearSetItem+0x7c>)
 8000b6a:	9300      	str	r3, [sp, #0]
 8000b6c:	2300      	movs	r3, #0
 8000b6e:	2233      	movs	r2, #51	@ 0x33
 8000b70:	2157      	movs	r1, #87	@ 0x57
 8000b72:	4813      	ldr	r0, [pc, #76]	@ (8000bc0 <LCD_ScreenClearSetItem+0x80>)
 8000b74:	f003 fa78 	bl	8004068 <ucg_DrawString>
			break;
 8000b78:	e01b      	b.n	8000bb2 <LCD_ScreenClearSetItem+0x72>

		case VALUE_2:
			ucg_DrawString(&g_ucg, COLUMN_3, ROW_2, 0, g_clearSetStr);
 8000b7a:	4b10      	ldr	r3, [pc, #64]	@ (8000bbc <LCD_ScreenClearSetItem+0x7c>)
 8000b7c:	9300      	str	r3, [sp, #0]
 8000b7e:	2300      	movs	r3, #0
 8000b80:	2249      	movs	r2, #73	@ 0x49
 8000b82:	2157      	movs	r1, #87	@ 0x57
 8000b84:	480e      	ldr	r0, [pc, #56]	@ (8000bc0 <LCD_ScreenClearSetItem+0x80>)
 8000b86:	f003 fa6f 	bl	8004068 <ucg_DrawString>
			break;
 8000b8a:	e012      	b.n	8000bb2 <LCD_ScreenClearSetItem+0x72>

		case VALUE_3:
			ucg_DrawString(&g_ucg, COLUMN_3, ROW_3, 0, g_clearSetStr);
 8000b8c:	4b0b      	ldr	r3, [pc, #44]	@ (8000bbc <LCD_ScreenClearSetItem+0x7c>)
 8000b8e:	9300      	str	r3, [sp, #0]
 8000b90:	2300      	movs	r3, #0
 8000b92:	225f      	movs	r2, #95	@ 0x5f
 8000b94:	2157      	movs	r1, #87	@ 0x57
 8000b96:	480a      	ldr	r0, [pc, #40]	@ (8000bc0 <LCD_ScreenClearSetItem+0x80>)
 8000b98:	f003 fa66 	bl	8004068 <ucg_DrawString>
			break;
 8000b9c:	e009      	b.n	8000bb2 <LCD_ScreenClearSetItem+0x72>

		case VALUE_4:
			ucg_DrawString(&g_ucg, COLUMN_3, ROW_4, 0, g_clearSetStr);
 8000b9e:	4b07      	ldr	r3, [pc, #28]	@ (8000bbc <LCD_ScreenClearSetItem+0x7c>)
 8000ba0:	9300      	str	r3, [sp, #0]
 8000ba2:	2300      	movs	r3, #0
 8000ba4:	2275      	movs	r2, #117	@ 0x75
 8000ba6:	2157      	movs	r1, #87	@ 0x57
 8000ba8:	4805      	ldr	r0, [pc, #20]	@ (8000bc0 <LCD_ScreenClearSetItem+0x80>)
 8000baa:	f003 fa5d 	bl	8004068 <ucg_DrawString>
			break;
 8000bae:	e000      	b.n	8000bb2 <LCD_ScreenClearSetItem+0x72>

		default:
			break;
 8000bb0:	bf00      	nop
	}
}
 8000bb2:	bf00      	nop
 8000bb4:	3708      	adds	r7, #8
 8000bb6:	46bd      	mov	sp, r7
 8000bb8:	bd80      	pop	{r7, pc}
 8000bba:	bf00      	nop
 8000bbc:	20000010 	.word	0x20000010
 8000bc0:	200000f4 	.word	0x200000f4

08000bc4 <LCD_ScreenSetDistanceValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenSetDistanceValue (value_e value)
{
 8000bc4:	b580      	push	{r7, lr}
 8000bc6:	b082      	sub	sp, #8
 8000bc8:	af00      	add	r7, sp, #0
 8000bca:	4603      	mov	r3, r0
 8000bcc:	71fb      	strb	r3, [r7, #7]
	// Xoa OK o vi tri cu
	LCD_ScreenClearSetItem(value);
 8000bce:	79fb      	ldrb	r3, [r7, #7]
 8000bd0:	4618      	mov	r0, r3
 8000bd2:	f7ff ffb5 	bl	8000b40 <LCD_ScreenClearSetItem>

	// Luu gia tri khoang cach phat hien da duoc SET (gia tri moi)
	g_distanceValueSelected = g_currentSelect;
 8000bd6:	4b06      	ldr	r3, [pc, #24]	@ (8000bf0 <LCD_ScreenSetDistanceValue+0x2c>)
 8000bd8:	781a      	ldrb	r2, [r3, #0]
 8000bda:	4b06      	ldr	r3, [pc, #24]	@ (8000bf4 <LCD_ScreenSetDistanceValue+0x30>)
 8000bdc:	701a      	strb	r2, [r3, #0]

	// In Ok o vi tri moi
	LCD_ScreenSetValue(g_currentSelect);
 8000bde:	4b04      	ldr	r3, [pc, #16]	@ (8000bf0 <LCD_ScreenSetDistanceValue+0x2c>)
 8000be0:	781b      	ldrb	r3, [r3, #0]
 8000be2:	4618      	mov	r0, r3
 8000be4:	f7ff ff6a 	bl	8000abc <LCD_ScreenSetValue>
}
 8000be8:	bf00      	nop
 8000bea:	3708      	adds	r7, #8
 8000bec:	46bd      	mov	sp, r7
 8000bee:	bd80      	pop	{r7, pc}
 8000bf0:	2000001b 	.word	0x2000001b
 8000bf4:	2000001d 	.word	0x2000001d

08000bf8 <LCD_ScreenSetSensitivityValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenSetSensitivityValue (value_e value)
{
 8000bf8:	b580      	push	{r7, lr}
 8000bfa:	b082      	sub	sp, #8
 8000bfc:	af00      	add	r7, sp, #0
 8000bfe:	4603      	mov	r3, r0
 8000c00:	71fb      	strb	r3, [r7, #7]
	// Xoa OK o vi tri cu
	LCD_ScreenClearSetItem(value);
 8000c02:	79fb      	ldrb	r3, [r7, #7]
 8000c04:	4618      	mov	r0, r3
 8000c06:	f7ff ff9b 	bl	8000b40 <LCD_ScreenClearSetItem>

	// Luu gia tri do nhay da duoc SET
	g_sensitivityValueSelected = g_currentSelect;
 8000c0a:	4b06      	ldr	r3, [pc, #24]	@ (8000c24 <LCD_ScreenSetSensitivityValue+0x2c>)
 8000c0c:	781a      	ldrb	r2, [r3, #0]
 8000c0e:	4b06      	ldr	r3, [pc, #24]	@ (8000c28 <LCD_ScreenSetSensitivityValue+0x30>)
 8000c10:	701a      	strb	r2, [r3, #0]

	// In Ok o vi tri moi
	LCD_ScreenSetValue(g_currentSelect);
 8000c12:	4b04      	ldr	r3, [pc, #16]	@ (8000c24 <LCD_ScreenSetSensitivityValue+0x2c>)
 8000c14:	781b      	ldrb	r3, [r3, #0]
 8000c16:	4618      	mov	r0, r3
 8000c18:	f7ff ff50 	bl	8000abc <LCD_ScreenSetValue>
}
 8000c1c:	bf00      	nop
 8000c1e:	3708      	adds	r7, #8
 8000c20:	46bd      	mov	sp, r7
 8000c22:	bd80      	pop	{r7, pc}
 8000c24:	2000001b 	.word	0x2000001b
 8000c28:	2000001e 	.word	0x2000001e

08000c2c <LCD_ScreenSetLatencyValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenSetLatencyValue (value_e value)
{
 8000c2c:	b580      	push	{r7, lr}
 8000c2e:	b082      	sub	sp, #8
 8000c30:	af00      	add	r7, sp, #0
 8000c32:	4603      	mov	r3, r0
 8000c34:	71fb      	strb	r3, [r7, #7]
	// Xoa OK o vi tri cu
	LCD_ScreenClearSetItem(value);
 8000c36:	79fb      	ldrb	r3, [r7, #7]
 8000c38:	4618      	mov	r0, r3
 8000c3a:	f7ff ff81 	bl	8000b40 <LCD_ScreenClearSetItem>

	// Luu gia tri do tre da duoc SET
	g_latencyValueSelected = g_currentSelect;
 8000c3e:	4b06      	ldr	r3, [pc, #24]	@ (8000c58 <LCD_ScreenSetLatencyValue+0x2c>)
 8000c40:	781a      	ldrb	r2, [r3, #0]
 8000c42:	4b06      	ldr	r3, [pc, #24]	@ (8000c5c <LCD_ScreenSetLatencyValue+0x30>)
 8000c44:	701a      	strb	r2, [r3, #0]

	// In Ok o vi tri moi
	LCD_ScreenSetValue(g_currentSelect);
 8000c46:	4b04      	ldr	r3, [pc, #16]	@ (8000c58 <LCD_ScreenSetLatencyValue+0x2c>)
 8000c48:	781b      	ldrb	r3, [r3, #0]
 8000c4a:	4618      	mov	r0, r3
 8000c4c:	f7ff ff36 	bl	8000abc <LCD_ScreenSetValue>
}
 8000c50:	bf00      	nop
 8000c52:	3708      	adds	r7, #8
 8000c54:	46bd      	mov	sp, r7
 8000c56:	bd80      	pop	{r7, pc}
 8000c58:	2000001b 	.word	0x2000001b
 8000c5c:	2000001f 	.word	0x2000001f

08000c60 <LCD_ScreenSetLightValue>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenSetLightValue (value_e value)
{
 8000c60:	b580      	push	{r7, lr}
 8000c62:	b082      	sub	sp, #8
 8000c64:	af00      	add	r7, sp, #0
 8000c66:	4603      	mov	r3, r0
 8000c68:	71fb      	strb	r3, [r7, #7]
	// Xoa OK o vi tri cu
	LCD_ScreenClearSetItem(value);
 8000c6a:	79fb      	ldrb	r3, [r7, #7]
 8000c6c:	4618      	mov	r0, r3
 8000c6e:	f7ff ff67 	bl	8000b40 <LCD_ScreenClearSetItem>

	// Luu gia tri anh sang da duoc SET
	g_lightValueSelected = g_currentSelect;
 8000c72:	4b06      	ldr	r3, [pc, #24]	@ (8000c8c <LCD_ScreenSetLightValue+0x2c>)
 8000c74:	781a      	ldrb	r2, [r3, #0]
 8000c76:	4b06      	ldr	r3, [pc, #24]	@ (8000c90 <LCD_ScreenSetLightValue+0x30>)
 8000c78:	701a      	strb	r2, [r3, #0]

	// In Ok o vi tri moi
	LCD_ScreenSetValue(g_currentSelect);
 8000c7a:	4b04      	ldr	r3, [pc, #16]	@ (8000c8c <LCD_ScreenSetLightValue+0x2c>)
 8000c7c:	781b      	ldrb	r3, [r3, #0]
 8000c7e:	4618      	mov	r0, r3
 8000c80:	f7ff ff1c 	bl	8000abc <LCD_ScreenSetValue>
}
 8000c84:	bf00      	nop
 8000c86:	3708      	adds	r7, #8
 8000c88:	46bd      	mov	sp, r7
 8000c8a:	bd80      	pop	{r7, pc}
 8000c8c:	2000001b 	.word	0x2000001b
 8000c90:	20000020 	.word	0x20000020

08000c94 <LCD_ScreenValueSetMarker>:
 * @retval:		None
 *
 * @note:		None
 */
void LCD_ScreenValueSetMarker (value_e value)
{
 8000c94:	b580      	push	{r7, lr}
 8000c96:	b082      	sub	sp, #8
 8000c98:	af00      	add	r7, sp, #0
 8000c9a:	4603      	mov	r3, r0
 8000c9c:	71fb      	strb	r3, [r7, #7]
	switch (value)
 8000c9e:	79fb      	ldrb	r3, [r7, #7]
 8000ca0:	3b01      	subs	r3, #1
 8000ca2:	2b03      	cmp	r3, #3
 8000ca4:	d826      	bhi.n	8000cf4 <LCD_ScreenValueSetMarker+0x60>
 8000ca6:	a201      	add	r2, pc, #4	@ (adr r2, 8000cac <LCD_ScreenValueSetMarker+0x18>)
 8000ca8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000cac:	08000cbd 	.word	0x08000cbd
 8000cb0:	08000ccb 	.word	0x08000ccb
 8000cb4:	08000cd9 	.word	0x08000cd9
 8000cb8:	08000ce7 	.word	0x08000ce7
	{
		case VALUE_1:
		{
	        LCD_ScreenSelectPosition(VALUE_1);
 8000cbc:	2001      	movs	r0, #1
 8000cbe:	f7ff fe79 	bl	80009b4 <LCD_ScreenSelectPosition>
	        LCD_ScreenSetValue(VALUE_1);
 8000cc2:	2001      	movs	r0, #1
 8000cc4:	f7ff fefa 	bl	8000abc <LCD_ScreenSetValue>
	        break;
 8000cc8:	e015      	b.n	8000cf6 <LCD_ScreenValueSetMarker+0x62>
		}

		case VALUE_2:
		{
	        LCD_ScreenSelectPosition(VALUE_2);
 8000cca:	2002      	movs	r0, #2
 8000ccc:	f7ff fe72 	bl	80009b4 <LCD_ScreenSelectPosition>
	        LCD_ScreenSetValue(VALUE_2);
 8000cd0:	2002      	movs	r0, #2
 8000cd2:	f7ff fef3 	bl	8000abc <LCD_ScreenSetValue>
	        break;
 8000cd6:	e00e      	b.n	8000cf6 <LCD_ScreenValueSetMarker+0x62>
		}

		case VALUE_3:
		{
	        LCD_ScreenSelectPosition(VALUE_3);
 8000cd8:	2003      	movs	r0, #3
 8000cda:	f7ff fe6b 	bl	80009b4 <LCD_ScreenSelectPosition>
	        LCD_ScreenSetValue(VALUE_3);
 8000cde:	2003      	movs	r0, #3
 8000ce0:	f7ff feec 	bl	8000abc <LCD_ScreenSetValue>
	        break;
 8000ce4:	e007      	b.n	8000cf6 <LCD_ScreenValueSetMarker+0x62>
		}

		case VALUE_4:
		{
	        LCD_ScreenSelectPosition(VALUE_4);
 8000ce6:	2004      	movs	r0, #4
 8000ce8:	f7ff fe64 	bl	80009b4 <LCD_ScreenSelectPosition>
	        LCD_ScreenSetValue(VALUE_4);
 8000cec:	2004      	movs	r0, #4
 8000cee:	f7ff fee5 	bl	8000abc <LCD_ScreenSetValue>
	        break;
 8000cf2:	e000      	b.n	8000cf6 <LCD_ScreenValueSetMarker+0x62>
		}

		default:
			break;
 8000cf4:	bf00      	nop
	}
}
 8000cf6:	bf00      	nop
 8000cf8:	3708      	adds	r7, #8
 8000cfa:	46bd      	mov	sp, r7
 8000cfc:	bd80      	pop	{r7, pc}
 8000cfe:	bf00      	nop

08000d00 <LCD_ResetItemSelect>:
 * @retval:		None
 *
 * @note:		None
 */
uint8_t LCD_ResetItemSelect (void)
{
 8000d00:	b480      	push	{r7}
 8000d02:	af00      	add	r7, sp, #0
	return g_menuItemSelected = VALUE_1;
 8000d04:	4b04      	ldr	r3, [pc, #16]	@ (8000d18 <LCD_ResetItemSelect+0x18>)
 8000d06:	2201      	movs	r2, #1
 8000d08:	701a      	strb	r2, [r3, #0]
 8000d0a:	2301      	movs	r3, #1
}
 8000d0c:	4618      	mov	r0, r3
 8000d0e:	46bd      	mov	sp, r7
 8000d10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000d14:	4770      	bx	lr
 8000d16:	bf00      	nop
 8000d18:	2000001c 	.word	0x2000001c

08000d1c <main>:
 * @retval:		None
 *
 * @note:		None
 */
int main ()
{
 8000d1c:	b580      	push	{r7, lr}
 8000d1e:	af00      	add	r7, sp, #0
	Main_AppInitManager();
 8000d20:	f000 f80e 	bl	8000d40 <Main_AppInitManager>

	// Initializing the main program to the previous state of the device before power-off
	Main_SetStateApp(STATE_APP_STARTUP);
 8000d24:	2000      	movs	r0, #0
 8000d26:	f000 f84d 	bl	8000dc4 <Main_SetStateApp>

	// Adding initialization events when the system starts operating to the Queue
	EventSchedulerAdd(EVENT_APP_INIT);
 8000d2a:	2001      	movs	r0, #1
 8000d2c:	f001 fd24 	bl	8002778 <EventSchedulerAdd>

	while (1)
	{
		processTimerScheduler();
 8000d30:	f001 fe80 	bl	8002a34 <processTimerScheduler>
		processEventScheduler();
 8000d34:	f001 fd36 	bl	80027a4 <processEventScheduler>
		processSerialHandle();
 8000d38:	f000 fa78 	bl	800122c <processSerialHandle>
	{
 8000d3c:	bf00      	nop
 8000d3e:	e7f7      	b.n	8000d30 <main+0x14>

08000d40 <Main_AppInitManager>:
 * @retval:		None
 *
 * @note:		None
 */
void Main_AppInitManager (void)
{
 8000d40:	b580      	push	{r7, lr}
 8000d42:	af00      	add	r7, sp, #0
	SystemCoreClockUpdate();
 8000d44:	f000 fd34 	bl	80017b0 <SystemCoreClockUpdate>
	TimerInit();
 8000d48:	f001 fd94 	bl	8002874 <TimerInit>

	// Initializing the buffer to store the event list of the program
	EventSchedulerInit(Main_AppStateManager);
 8000d4c:	4807      	ldr	r0, [pc, #28]	@ (8000d6c <Main_AppInitManager+0x2c>)
 8000d4e:	f001 fcf7 	bl	8002740 <EventSchedulerInit>

	EventButton_Init();
 8000d52:	f001 fc23 	bl	800259c <EventButton_Init>
	Button_Init();
 8000d56:	f001 fa37 	bl	80021c8 <Button_Init>
	USART6_FifoAndUsartInit();
 8000d5a:	f000 f9df 	bl	800111c <USART6_FifoAndUsartInit>
	USART6_HandleEventCallback(Main_Usart2RxHandle);
 8000d5e:	4804      	ldr	r0, [pc, #16]	@ (8000d70 <Main_AppInitManager+0x30>)
 8000d60:	f000 fa54 	bl	800120c <USART6_HandleEventCallback>
	LCD_Init();
 8000d64:	f7ff fa8c 	bl	8000280 <LCD_Init>
}
 8000d68:	bf00      	nop
 8000d6a:	bd80      	pop	{r7, pc}
 8000d6c:	08000d75 	.word	0x08000d75
 8000d70:	08000f61 	.word	0x08000f61

08000d74 <Main_AppStateManager>:
 * @retval:		None
 *
 * @note:		None
 */
void Main_AppStateManager (uint8_t event)
{
 8000d74:	b580      	push	{r7, lr}
 8000d76:	b082      	sub	sp, #8
 8000d78:	af00      	add	r7, sp, #0
 8000d7a:	4603      	mov	r3, r0
 8000d7c:	71fb      	strb	r3, [r7, #7]
	switch (Main_GetStateApp())
 8000d7e:	f000 f831 	bl	8000de4 <Main_GetStateApp>
 8000d82:	4603      	mov	r3, r0
 8000d84:	2b02      	cmp	r3, #2
 8000d86:	d014      	beq.n	8000db2 <Main_AppStateManager+0x3e>
 8000d88:	2b02      	cmp	r3, #2
 8000d8a:	dc14      	bgt.n	8000db6 <Main_AppStateManager+0x42>
 8000d8c:	2b00      	cmp	r3, #0
 8000d8e:	d002      	beq.n	8000d96 <Main_AppStateManager+0x22>
 8000d90:	2b01      	cmp	r3, #1
 8000d92:	d009      	beq.n	8000da8 <Main_AppStateManager+0x34>

		case STATE_APP_RESET:
			break;

		default:
			break;
 8000d94:	e00f      	b.n	8000db6 <Main_AppStateManager+0x42>
			if (event == EVENT_APP_INIT)
 8000d96:	79fb      	ldrb	r3, [r7, #7]
 8000d98:	2b01      	cmp	r3, #1
 8000d9a:	d10e      	bne.n	8000dba <Main_AppStateManager+0x46>
				LCD_LoadOnStartup();
 8000d9c:	f7ff fa98 	bl	80002d0 <LCD_LoadOnStartup>
				Main_SetStateApp(STATE_APP_IDLE);
 8000da0:	2001      	movs	r0, #1
 8000da2:	f000 f80f 	bl	8000dc4 <Main_SetStateApp>
			break;
 8000da6:	e008      	b.n	8000dba <Main_AppStateManager+0x46>
			Main_DeviceStateMachine(event);
 8000da8:	79fb      	ldrb	r3, [r7, #7]
 8000daa:	4618      	mov	r0, r3
 8000dac:	f000 f826 	bl	8000dfc <Main_DeviceStateMachine>
			break;
 8000db0:	e004      	b.n	8000dbc <Main_AppStateManager+0x48>
			break;
 8000db2:	bf00      	nop
 8000db4:	e002      	b.n	8000dbc <Main_AppStateManager+0x48>
			break;
 8000db6:	bf00      	nop
 8000db8:	e000      	b.n	8000dbc <Main_AppStateManager+0x48>
			break;
 8000dba:	bf00      	nop
	}
}
 8000dbc:	bf00      	nop
 8000dbe:	3708      	adds	r7, #8
 8000dc0:	46bd      	mov	sp, r7
 8000dc2:	bd80      	pop	{r7, pc}

08000dc4 <Main_SetStateApp>:
 * @retval:		None
 *
 * @note:		None
 */
void Main_SetStateApp (state_app_e state)
{
 8000dc4:	b480      	push	{r7}
 8000dc6:	b083      	sub	sp, #12
 8000dc8:	af00      	add	r7, sp, #0
 8000dca:	4603      	mov	r3, r0
 8000dcc:	71fb      	strb	r3, [r7, #7]
	g_eCurrentState = state;
 8000dce:	4a04      	ldr	r2, [pc, #16]	@ (8000de0 <Main_SetStateApp+0x1c>)
 8000dd0:	79fb      	ldrb	r3, [r7, #7]
 8000dd2:	7013      	strb	r3, [r2, #0]
}
 8000dd4:	bf00      	nop
 8000dd6:	370c      	adds	r7, #12
 8000dd8:	46bd      	mov	sp, r7
 8000dda:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dde:	4770      	bx	lr
 8000de0:	20000207 	.word	0x20000207

08000de4 <Main_GetStateApp>:
 * @retval:		g_eCurrentState - The current state of the program
 *
 * @note:		None
 */
state_app_e Main_GetStateApp (void)
{
 8000de4:	b480      	push	{r7}
 8000de6:	af00      	add	r7, sp, #0
	return g_eCurrentState;
 8000de8:	4b03      	ldr	r3, [pc, #12]	@ (8000df8 <Main_GetStateApp+0x14>)
 8000dea:	781b      	ldrb	r3, [r3, #0]
}
 8000dec:	4618      	mov	r0, r3
 8000dee:	46bd      	mov	sp, r7
 8000df0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000df4:	4770      	bx	lr
 8000df6:	bf00      	nop
 8000df8:	20000207 	.word	0x20000207

08000dfc <Main_DeviceStateMachine>:
 *
 * @note:		None
 */

void Main_DeviceStateMachine (uint8_t event)
{
 8000dfc:	b580      	push	{r7, lr}
 8000dfe:	b082      	sub	sp, #8
 8000e00:	af00      	add	r7, sp, #0
 8000e02:	4603      	mov	r3, r0
 8000e04:	71fb      	strb	r3, [r7, #7]
	static uint8_t nwkCreateDeleteToggle = 0;
	static uint8_t nwkOpenCloseToggle = 0;
	static uint8_t ledOnOffToggle = 0;

	switch (event)
 8000e06:	79fb      	ldrb	r3, [r7, #7]
 8000e08:	3b01      	subs	r3, #1
 8000e0a:	2b21      	cmp	r3, #33	@ 0x21
 8000e0c:	f200 809c 	bhi.w	8000f48 <Main_DeviceStateMachine+0x14c>
 8000e10:	a201      	add	r2, pc, #4	@ (adr r2, 8000e18 <Main_DeviceStateMachine+0x1c>)
 8000e12:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000e16:	bf00      	nop
 8000e18:	08000edd 	.word	0x08000edd
 8000e1c:	08000eeb 	.word	0x08000eeb
 8000e20:	08000ea1 	.word	0x08000ea1
 8000e24:	08000f1b 	.word	0x08000f1b
 8000e28:	08000ee3 	.word	0x08000ee3
 8000e2c:	08000f49 	.word	0x08000f49
 8000e30:	08000f49 	.word	0x08000f49
 8000e34:	08000f49 	.word	0x08000f49
 8000e38:	08000f49 	.word	0x08000f49
 8000e3c:	08000f49 	.word	0x08000f49
 8000e40:	08000f49 	.word	0x08000f49
 8000e44:	08000f49 	.word	0x08000f49
 8000e48:	08000f49 	.word	0x08000f49
 8000e4c:	08000f49 	.word	0x08000f49
 8000e50:	08000f49 	.word	0x08000f49
 8000e54:	08000f49 	.word	0x08000f49
 8000e58:	08000f49 	.word	0x08000f49
 8000e5c:	08000f49 	.word	0x08000f49
 8000e60:	08000f49 	.word	0x08000f49
 8000e64:	08000f49 	.word	0x08000f49
 8000e68:	08000ea7 	.word	0x08000ea7
 8000e6c:	08000f49 	.word	0x08000f49
 8000e70:	08000f49 	.word	0x08000f49
 8000e74:	08000f49 	.word	0x08000f49
 8000e78:	08000f49 	.word	0x08000f49
 8000e7c:	08000f49 	.word	0x08000f49
 8000e80:	08000f49 	.word	0x08000f49
 8000e84:	08000f49 	.word	0x08000f49
 8000e88:	08000f49 	.word	0x08000f49
 8000e8c:	08000f49 	.word	0x08000f49
 8000e90:	08000f49 	.word	0x08000f49
 8000e94:	08000ef3 	.word	0x08000ef3
 8000e98:	08000eb1 	.word	0x08000eb1
 8000e9c:	08000f21 	.word	0x08000f21
	{
		case EVENT_OF_BUTTON_3_PRESS_LOGIC:
		{
			LCD_ScreenHome();
 8000ea0:	f7ff fafa 	bl	8000498 <LCD_ScreenHome>
//			if (g_curScreen != SCREEN_HOME)
//			{
//				LCD_ScreenHome();
//			}

			break;
 8000ea4:	e051      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		case EVENT_OF_BUTTON_3_PRESS_2_TIMES:
		{
			LCD_ResetItemSelect();
 8000ea6:	f7ff ff2b 	bl	8000d00 <LCD_ResetItemSelect>
			LCD_ScreenMenuConfig();
 8000eaa:	f7ff fb35 	bl	8000518 <LCD_ScreenMenuConfig>
			break;
 8000eae:	e04c      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		case EVENT_OF_BUTTON_3_HOLD_1S:
		{
			ledOnOffToggle = !ledOnOffToggle;
 8000eb0:	4b28      	ldr	r3, [pc, #160]	@ (8000f54 <Main_DeviceStateMachine+0x158>)
 8000eb2:	781b      	ldrb	r3, [r3, #0]
 8000eb4:	2b00      	cmp	r3, #0
 8000eb6:	bf0c      	ite	eq
 8000eb8:	2301      	moveq	r3, #1
 8000eba:	2300      	movne	r3, #0
 8000ebc:	b2db      	uxtb	r3, r3
 8000ebe:	461a      	mov	r2, r3
 8000ec0:	4b24      	ldr	r3, [pc, #144]	@ (8000f54 <Main_DeviceStateMachine+0x158>)
 8000ec2:	701a      	strb	r2, [r3, #0]

			if (ledOnOffToggle)
 8000ec4:	4b23      	ldr	r3, [pc, #140]	@ (8000f54 <Main_DeviceStateMachine+0x158>)
 8000ec6:	781b      	ldrb	r3, [r3, #0]
 8000ec8:	2b00      	cmp	r3, #0
 8000eca:	d003      	beq.n	8000ed4 <Main_DeviceStateMachine+0xd8>
			{
				// Gui ban tin On LED cho ZC
				USART_SendLedState(1);
 8000ecc:	2001      	movs	r0, #1
 8000ece:	f000 fb6b 	bl	80015a8 <USART_SendLedState>
			{
				// Gui ban tin Off LED cho ZC
				USART_SendLedState(0);
			}

			break;
 8000ed2:	e03a      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
				USART_SendLedState(0);
 8000ed4:	2000      	movs	r0, #0
 8000ed6:	f000 fb67 	bl	80015a8 <USART_SendLedState>
			break;
 8000eda:	e036      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		case EVENT_OF_BUTTON_1_PRESS_LOGIC:
		{
			LCD_ScreenMoveUp();
 8000edc:	f7ff fcd4 	bl	8000888 <LCD_ScreenMoveUp>
			break;
 8000ee0:	e033      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		case EVENT_OF_BUTTON_5_PRESS_LOGIC:
		{
			LCD_DisplayDetectionState(1);
 8000ee2:	2001      	movs	r0, #1
 8000ee4:	f7ff fa90 	bl	8000408 <LCD_DisplayDetectionState>
//			LCD_ScreenMoveDown();
			break;
 8000ee8:	e02f      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		case EVENT_OF_BUTTON_2_PRESS_LOGIC:
		{
			LCD_DisplayDetectionState(0);
 8000eea:	2000      	movs	r0, #0
 8000eec:	f7ff fa8c 	bl	8000408 <LCD_DisplayDetectionState>
//			LCD_ScreenBack();
			break;
 8000ef0:	e02b      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		case EVENT_OF_BUTTON_2_HOLD_1S:
		{
			nwkCreateDeleteToggle = !nwkCreateDeleteToggle;
 8000ef2:	4b19      	ldr	r3, [pc, #100]	@ (8000f58 <Main_DeviceStateMachine+0x15c>)
 8000ef4:	781b      	ldrb	r3, [r3, #0]
 8000ef6:	2b00      	cmp	r3, #0
 8000ef8:	bf0c      	ite	eq
 8000efa:	2301      	moveq	r3, #1
 8000efc:	2300      	movne	r3, #0
 8000efe:	b2db      	uxtb	r3, r3
 8000f00:	461a      	mov	r2, r3
 8000f02:	4b15      	ldr	r3, [pc, #84]	@ (8000f58 <Main_DeviceStateMachine+0x15c>)
 8000f04:	701a      	strb	r2, [r3, #0]

			if (nwkCreateDeleteToggle)
 8000f06:	4b14      	ldr	r3, [pc, #80]	@ (8000f58 <Main_DeviceStateMachine+0x15c>)
 8000f08:	781b      	ldrb	r3, [r3, #0]
 8000f0a:	2b00      	cmp	r3, #0
 8000f0c:	d002      	beq.n	8000f14 <Main_DeviceStateMachine+0x118>
			{
				// Gui ban tin tao mang cho ZC
				USART_SendCreateNetwork();
 8000f0e:	f000 faf7 	bl	8001500 <USART_SendCreateNetwork>
			{
				// Gui ban tin xoa mang cho ZC
				USART_SendDeleteNetwork();
			}

			break;
 8000f12:	e01a      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
				USART_SendDeleteNetwork();
 8000f14:	f000 fb04 	bl	8001520 <USART_SendDeleteNetwork>
			break;
 8000f18:	e017      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		case EVENT_OF_BUTTON_4_PRESS_LOGIC:
		{
			LCD_ScreenNextAndSet();
 8000f1a:	f7ff fcdb 	bl	80008d4 <LCD_ScreenNextAndSet>
			break;
 8000f1e:	e014      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		case EVENT_OF_BUTTON_4_HOLD_1S:
		{
			nwkOpenCloseToggle = !nwkOpenCloseToggle;
 8000f20:	4b0e      	ldr	r3, [pc, #56]	@ (8000f5c <Main_DeviceStateMachine+0x160>)
 8000f22:	781b      	ldrb	r3, [r3, #0]
 8000f24:	2b00      	cmp	r3, #0
 8000f26:	bf0c      	ite	eq
 8000f28:	2301      	moveq	r3, #1
 8000f2a:	2300      	movne	r3, #0
 8000f2c:	b2db      	uxtb	r3, r3
 8000f2e:	461a      	mov	r2, r3
 8000f30:	4b0a      	ldr	r3, [pc, #40]	@ (8000f5c <Main_DeviceStateMachine+0x160>)
 8000f32:	701a      	strb	r2, [r3, #0]

			if (nwkOpenCloseToggle)
 8000f34:	4b09      	ldr	r3, [pc, #36]	@ (8000f5c <Main_DeviceStateMachine+0x160>)
 8000f36:	781b      	ldrb	r3, [r3, #0]
 8000f38:	2b00      	cmp	r3, #0
 8000f3a:	d002      	beq.n	8000f42 <Main_DeviceStateMachine+0x146>
			{
				// Gui ban tin mo mang cho ZC
				USART_SendOpenNetwork();
 8000f3c:	f000 fb00 	bl	8001540 <USART_SendOpenNetwork>
			{
				// Gui ban tin dong mang cho ZC
				USART_SendCloseNetwork();
			}

			break;
 8000f40:	e003      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
				USART_SendCloseNetwork();
 8000f42:	f000 fb0d 	bl	8001560 <USART_SendCloseNetwork>
			break;
 8000f46:	e000      	b.n	8000f4a <Main_DeviceStateMachine+0x14e>
		}

		default:
			break;
 8000f48:	bf00      	nop
	}
}
 8000f4a:	bf00      	nop
 8000f4c:	3708      	adds	r7, #8
 8000f4e:	46bd      	mov	sp, r7
 8000f50:	bd80      	pop	{r7, pc}
 8000f52:	bf00      	nop
 8000f54:	20000208 	.word	0x20000208
 8000f58:	20000209 	.word	0x20000209
 8000f5c:	2000020a 	.word	0x2000020a

08000f60 <Main_Usart2RxHandle>:
 * @retval:		None
 *
 * @note:		Receive control messages from the Web Server (ESP32)
 */
void Main_Usart2RxHandle (USART_STATE_e UsartStateRx)
{
 8000f60:	b580      	push	{r7, lr}
 8000f62:	b082      	sub	sp, #8
 8000f64:	af00      	add	r7, sp, #0
 8000f66:	4603      	mov	r3, r0
 8000f68:	71fb      	strb	r3, [r7, #7]
	if (UsartStateRx != USART_STATE_IDLE)
 8000f6a:	79fb      	ldrb	r3, [r7, #7]
 8000f6c:	2b00      	cmp	r3, #0
 8000f6e:	d024      	beq.n	8000fba <Main_Usart2RxHandle+0x5a>
	{
		switch (UsartStateRx)
 8000f70:	79fb      	ldrb	r3, [r7, #7]
 8000f72:	3b01      	subs	r3, #1
 8000f74:	2b04      	cmp	r3, #4
 8000f76:	d81f      	bhi.n	8000fb8 <Main_Usart2RxHandle+0x58>
 8000f78:	a201      	add	r2, pc, #4	@ (adr r2, 8000f80 <Main_Usart2RxHandle+0x20>)
 8000f7a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000f7e:	bf00      	nop
 8000f80:	08000f95 	.word	0x08000f95
 8000f84:	08000f9d 	.word	0x08000f9d
 8000f88:	08000fa9 	.word	0x08000fa9
 8000f8c:	08000fb1 	.word	0x08000fb1
 8000f90:	08000fb1 	.word	0x08000fb1
		{
			case USART_STATE_EMPTY:
			{
				printf("USART_STATE_EMPTY\n");
 8000f94:	480b      	ldr	r0, [pc, #44]	@ (8000fc4 <Main_Usart2RxHandle+0x64>)
 8000f96:	f004 fa4d 	bl	8005434 <puts>
				break;
 8000f9a:	e00e      	b.n	8000fba <Main_Usart2RxHandle+0x5a>
			}

			case USART_STATE_DATA_RECEIVED:
			{
				printf("USART_STATE_DATA_RECEIVED\n");
 8000f9c:	480a      	ldr	r0, [pc, #40]	@ (8000fc8 <Main_Usart2RxHandle+0x68>)
 8000f9e:	f004 fa49 	bl	8005434 <puts>
				USART_ReceivedData();
 8000fa2:	f000 fb17 	bl	80015d4 <USART_ReceivedData>
				break;
 8000fa6:	e008      	b.n	8000fba <Main_Usart2RxHandle+0x5a>
			}

			case USART_STATE_DATA_ERROR:
			{
				printf("USART_STATE_DATA_ERROR\n");
 8000fa8:	4808      	ldr	r0, [pc, #32]	@ (8000fcc <Main_Usart2RxHandle+0x6c>)
 8000faa:	f004 fa43 	bl	8005434 <puts>
				break;
 8000fae:	e004      	b.n	8000fba <Main_Usart2RxHandle+0x5a>
			}

			case USART_STATE_ERROR:
			case USART_STATE_RX_TIMEOUT:
			{
				printf("USART_STATE_ERROR_OR_RX_TIMEOUT\n");
 8000fb0:	4807      	ldr	r0, [pc, #28]	@ (8000fd0 <Main_Usart2RxHandle+0x70>)
 8000fb2:	f004 fa3f 	bl	8005434 <puts>
				break;
 8000fb6:	e000      	b.n	8000fba <Main_Usart2RxHandle+0x5a>
			}

			default:
				break;
 8000fb8:	bf00      	nop
		}
	}
}
 8000fba:	bf00      	nop
 8000fbc:	3708      	adds	r7, #8
 8000fbe:	46bd      	mov	sp, r7
 8000fc0:	bd80      	pop	{r7, pc}
 8000fc2:	bf00      	nop
 8000fc4:	080063c0 	.word	0x080063c0
 8000fc8:	080063d4 	.word	0x080063d4
 8000fcc:	080063f0 	.word	0x080063f0
 8000fd0:	08006408 	.word	0x08006408

08000fd4 <_read>:
  _kill(status, -1);
  while (1) {}    /* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000fd4:	b580      	push	{r7, lr}
 8000fd6:	b086      	sub	sp, #24
 8000fd8:	af00      	add	r7, sp, #0
 8000fda:	60f8      	str	r0, [r7, #12]
 8000fdc:	60b9      	str	r1, [r7, #8]
 8000fde:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000fe0:	2300      	movs	r3, #0
 8000fe2:	617b      	str	r3, [r7, #20]
 8000fe4:	e00a      	b.n	8000ffc <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8000fe6:	f3af 8000 	nop.w
 8000fea:	4601      	mov	r1, r0
 8000fec:	68bb      	ldr	r3, [r7, #8]
 8000fee:	1c5a      	adds	r2, r3, #1
 8000ff0:	60ba      	str	r2, [r7, #8]
 8000ff2:	b2ca      	uxtb	r2, r1
 8000ff4:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8000ff6:	697b      	ldr	r3, [r7, #20]
 8000ff8:	3301      	adds	r3, #1
 8000ffa:	617b      	str	r3, [r7, #20]
 8000ffc:	697a      	ldr	r2, [r7, #20]
 8000ffe:	687b      	ldr	r3, [r7, #4]
 8001000:	429a      	cmp	r2, r3
 8001002:	dbf0      	blt.n	8000fe6 <_read+0x12>
  }

  return len;
 8001004:	687b      	ldr	r3, [r7, #4]
}
 8001006:	4618      	mov	r0, r3
 8001008:	3718      	adds	r7, #24
 800100a:	46bd      	mov	sp, r7
 800100c:	bd80      	pop	{r7, pc}

0800100e <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 800100e:	b580      	push	{r7, lr}
 8001010:	b086      	sub	sp, #24
 8001012:	af00      	add	r7, sp, #0
 8001014:	60f8      	str	r0, [r7, #12]
 8001016:	60b9      	str	r1, [r7, #8]
 8001018:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800101a:	2300      	movs	r3, #0
 800101c:	617b      	str	r3, [r7, #20]
 800101e:	e009      	b.n	8001034 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8001020:	68bb      	ldr	r3, [r7, #8]
 8001022:	1c5a      	adds	r2, r3, #1
 8001024:	60ba      	str	r2, [r7, #8]
 8001026:	781b      	ldrb	r3, [r3, #0]
 8001028:	4618      	mov	r0, r3
 800102a:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 800102e:	697b      	ldr	r3, [r7, #20]
 8001030:	3301      	adds	r3, #1
 8001032:	617b      	str	r3, [r7, #20]
 8001034:	697a      	ldr	r2, [r7, #20]
 8001036:	687b      	ldr	r3, [r7, #4]
 8001038:	429a      	cmp	r2, r3
 800103a:	dbf1      	blt.n	8001020 <_write+0x12>
  }
  return len;
 800103c:	687b      	ldr	r3, [r7, #4]
}
 800103e:	4618      	mov	r0, r3
 8001040:	3718      	adds	r7, #24
 8001042:	46bd      	mov	sp, r7
 8001044:	bd80      	pop	{r7, pc}

08001046 <_close>:

int _close(int file)
{
 8001046:	b480      	push	{r7}
 8001048:	b083      	sub	sp, #12
 800104a:	af00      	add	r7, sp, #0
 800104c:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 800104e:	f04f 33ff 	mov.w	r3, #4294967295
}
 8001052:	4618      	mov	r0, r3
 8001054:	370c      	adds	r7, #12
 8001056:	46bd      	mov	sp, r7
 8001058:	f85d 7b04 	ldr.w	r7, [sp], #4
 800105c:	4770      	bx	lr

0800105e <_fstat>:


int _fstat(int file, struct stat *st)
{
 800105e:	b480      	push	{r7}
 8001060:	b083      	sub	sp, #12
 8001062:	af00      	add	r7, sp, #0
 8001064:	6078      	str	r0, [r7, #4]
 8001066:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8001068:	683b      	ldr	r3, [r7, #0]
 800106a:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 800106e:	605a      	str	r2, [r3, #4]
  return 0;
 8001070:	2300      	movs	r3, #0
}
 8001072:	4618      	mov	r0, r3
 8001074:	370c      	adds	r7, #12
 8001076:	46bd      	mov	sp, r7
 8001078:	f85d 7b04 	ldr.w	r7, [sp], #4
 800107c:	4770      	bx	lr

0800107e <_isatty>:

int _isatty(int file)
{
 800107e:	b480      	push	{r7}
 8001080:	b083      	sub	sp, #12
 8001082:	af00      	add	r7, sp, #0
 8001084:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 8001086:	2301      	movs	r3, #1
}
 8001088:	4618      	mov	r0, r3
 800108a:	370c      	adds	r7, #12
 800108c:	46bd      	mov	sp, r7
 800108e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001092:	4770      	bx	lr

08001094 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8001094:	b480      	push	{r7}
 8001096:	b085      	sub	sp, #20
 8001098:	af00      	add	r7, sp, #0
 800109a:	60f8      	str	r0, [r7, #12]
 800109c:	60b9      	str	r1, [r7, #8]
 800109e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80010a0:	2300      	movs	r3, #0
}
 80010a2:	4618      	mov	r0, r3
 80010a4:	3714      	adds	r7, #20
 80010a6:	46bd      	mov	sp, r7
 80010a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80010ac:	4770      	bx	lr
	...

080010b0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80010b0:	b580      	push	{r7, lr}
 80010b2:	b086      	sub	sp, #24
 80010b4:	af00      	add	r7, sp, #0
 80010b6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80010b8:	4a14      	ldr	r2, [pc, #80]	@ (800110c <_sbrk+0x5c>)
 80010ba:	4b15      	ldr	r3, [pc, #84]	@ (8001110 <_sbrk+0x60>)
 80010bc:	1ad3      	subs	r3, r2, r3
 80010be:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80010c0:	697b      	ldr	r3, [r7, #20]
 80010c2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80010c4:	4b13      	ldr	r3, [pc, #76]	@ (8001114 <_sbrk+0x64>)
 80010c6:	681b      	ldr	r3, [r3, #0]
 80010c8:	2b00      	cmp	r3, #0
 80010ca:	d102      	bne.n	80010d2 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80010cc:	4b11      	ldr	r3, [pc, #68]	@ (8001114 <_sbrk+0x64>)
 80010ce:	4a12      	ldr	r2, [pc, #72]	@ (8001118 <_sbrk+0x68>)
 80010d0:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80010d2:	4b10      	ldr	r3, [pc, #64]	@ (8001114 <_sbrk+0x64>)
 80010d4:	681a      	ldr	r2, [r3, #0]
 80010d6:	687b      	ldr	r3, [r7, #4]
 80010d8:	4413      	add	r3, r2
 80010da:	693a      	ldr	r2, [r7, #16]
 80010dc:	429a      	cmp	r2, r3
 80010de:	d207      	bcs.n	80010f0 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80010e0:	f004 faf6 	bl	80056d0 <__errno>
 80010e4:	4603      	mov	r3, r0
 80010e6:	220c      	movs	r2, #12
 80010e8:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80010ea:	f04f 33ff 	mov.w	r3, #4294967295
 80010ee:	e009      	b.n	8001104 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80010f0:	4b08      	ldr	r3, [pc, #32]	@ (8001114 <_sbrk+0x64>)
 80010f2:	681b      	ldr	r3, [r3, #0]
 80010f4:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80010f6:	4b07      	ldr	r3, [pc, #28]	@ (8001114 <_sbrk+0x64>)
 80010f8:	681a      	ldr	r2, [r3, #0]
 80010fa:	687b      	ldr	r3, [r7, #4]
 80010fc:	4413      	add	r3, r2
 80010fe:	4a05      	ldr	r2, [pc, #20]	@ (8001114 <_sbrk+0x64>)
 8001100:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 8001102:	68fb      	ldr	r3, [r7, #12]
}
 8001104:	4618      	mov	r0, r3
 8001106:	3718      	adds	r7, #24
 8001108:	46bd      	mov	sp, r7
 800110a:	bd80      	pop	{r7, pc}
 800110c:	20018000 	.word	0x20018000
 8001110:	00000400 	.word	0x00000400
 8001114:	2000020c 	.word	0x2000020c
 8001118:	200019c0 	.word	0x200019c0

0800111c <USART6_FifoAndUsartInit>:
 * @retval:		None
 *
 * @note:		None
 */
void USART6_FifoAndUsartInit (void)
{
 800111c:	b580      	push	{r7, lr}
 800111e:	af00      	add	r7, sp, #0
	bufInit(g_strRxBufData, &g_serialQueueRx, sizeof(g_strRxBufData[0]), SIZE_QUEUE_DATA_RX);
 8001120:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001124:	2201      	movs	r2, #1
 8001126:	4904      	ldr	r1, [pc, #16]	@ (8001138 <USART6_FifoAndUsartInit+0x1c>)
 8001128:	4804      	ldr	r0, [pc, #16]	@ (800113c <USART6_FifoAndUsartInit+0x20>)
 800112a:	f003 fa55 	bl	80045d8 <bufInit>
	USART6_Init();
 800112e:	f000 f807 	bl	8001140 <USART6_Init>
}
 8001132:	bf00      	nop
 8001134:	bd80      	pop	{r7, pc}
 8001136:	bf00      	nop
 8001138:	20000518 	.word	0x20000518
 800113c:	20000218 	.word	0x20000218

08001140 <USART6_Init>:
 * @retval:		None
 *
 * @note:		None
 */
void USART6_Init (void)
{
 8001140:	b580      	push	{r7, lr}
 8001142:	b088      	sub	sp, #32
 8001144:	af00      	add	r7, sp, #0
	USART_InitTypeDef	USART_InitStruct;
	NVIC_InitTypeDef	NVIC_InitStruct;

	/* Initialize GPIO with alternate function in Open-drain mode--------------------------*/
	// Clock supply for GPIO---------------------------------------------------------------
	RCC_AHB1PeriphClockCmd(USART6_GPIO_RCC, ENABLE);
 8001146:	2101      	movs	r1, #1
 8001148:	2001      	movs	r0, #1
 800114a:	f000 fe25 	bl	8001d98 <RCC_AHB1PeriphClockCmd>

	// Configure alternate function for GPIO pin-------------------------------------------
	GPIO_InitStruct.GPIO_Mode = GPIO_Mode_AF;
 800114e:	2302      	movs	r3, #2
 8001150:	773b      	strb	r3, [r7, #28]
	GPIO_InitStruct.GPIO_Speed = GPIO_Speed_50MHz;
 8001152:	2302      	movs	r3, #2
 8001154:	777b      	strb	r3, [r7, #29]
	GPIO_InitStruct.GPIO_OType = GPIO_OType_PP;
 8001156:	2300      	movs	r3, #0
 8001158:	77bb      	strb	r3, [r7, #30]
	GPIO_InitStruct.GPIO_PuPd = GPIO_PuPd_UP;
 800115a:	2301      	movs	r3, #1
 800115c:	77fb      	strb	r3, [r7, #31]

	GPIO_InitStruct.GPIO_Pin = USART6_TX_GPIO_PIN;
 800115e:	2340      	movs	r3, #64	@ 0x40
 8001160:	61bb      	str	r3, [r7, #24]
	GPIO_Init(USART6_TX_GPIO_PORT, &GPIO_InitStruct);
 8001162:	f107 0318 	add.w	r3, r7, #24
 8001166:	4619      	mov	r1, r3
 8001168:	4825      	ldr	r0, [pc, #148]	@ (8001200 <USART6_Init+0xc0>)
 800116a:	f000 fc63 	bl	8001a34 <GPIO_Init>

	GPIO_InitStruct.GPIO_Pin = USART6_RX_GPIO_PIN;
 800116e:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001172:	61bb      	str	r3, [r7, #24]
	GPIO_Init(USART6_RX_GPIO_PORT, &GPIO_InitStruct);
 8001174:	f107 0318 	add.w	r3, r7, #24
 8001178:	4619      	mov	r1, r3
 800117a:	4822      	ldr	r0, [pc, #136]	@ (8001204 <USART6_Init+0xc4>)
 800117c:	f000 fc5a 	bl	8001a34 <GPIO_Init>

	// Mapping Pin AF----------------------------------------------------------------------
	GPIO_PinAFConfig(USART6_TX_GPIO_PORT, GPIO_PinSource6, GPIO_AF_USART6);
 8001180:	2208      	movs	r2, #8
 8001182:	2106      	movs	r1, #6
 8001184:	481e      	ldr	r0, [pc, #120]	@ (8001200 <USART6_Init+0xc0>)
 8001186:	f000 fd15 	bl	8001bb4 <GPIO_PinAFConfig>
	GPIO_PinAFConfig(USART6_RX_GPIO_PORT, GPIO_PinSource12, GPIO_AF_USART6);
 800118a:	2208      	movs	r2, #8
 800118c:	210c      	movs	r1, #12
 800118e:	481d      	ldr	r0, [pc, #116]	@ (8001204 <USART6_Init+0xc4>)
 8001190:	f000 fd10 	bl	8001bb4 <GPIO_PinAFConfig>

	/* Configure USART6--------------------------------------------------------------------*/
	// Clock supply for USART6-------------------------------------------------------------
	RCC_APB2PeriphClockCmd(USART6_RCC, ENABLE);
 8001194:	2101      	movs	r1, #1
 8001196:	2020      	movs	r0, #32
 8001198:	f000 fe1e 	bl	8001dd8 <RCC_APB2PeriphClockCmd>

	// Configure USART6--------------------------------------------------------------------
	USART_InitStruct.USART_BaudRate = USART_BAUDRATE;
 800119c:	f44f 337a 	mov.w	r3, #256000	@ 0x3e800
 80011a0:	60bb      	str	r3, [r7, #8]
	USART_InitStruct.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 80011a2:	2300      	movs	r3, #0
 80011a4:	82bb      	strh	r3, [r7, #20]
	USART_InitStruct.USART_Mode = USART_Mode_Tx | USART_Mode_Rx;
 80011a6:	230c      	movs	r3, #12
 80011a8:	827b      	strh	r3, [r7, #18]
	USART_InitStruct.USART_Parity = USART_Parity_No;
 80011aa:	2300      	movs	r3, #0
 80011ac:	823b      	strh	r3, [r7, #16]
	USART_InitStruct.USART_StopBits = USART_StopBits_1;
 80011ae:	2300      	movs	r3, #0
 80011b0:	81fb      	strh	r3, [r7, #14]
	USART_InitStruct.USART_WordLength = USART_WordLength_8b;
 80011b2:	2300      	movs	r3, #0
 80011b4:	81bb      	strh	r3, [r7, #12]

	USART_Init(USART6, &USART_InitStruct);
 80011b6:	f107 0308 	add.w	r3, r7, #8
 80011ba:	4619      	mov	r1, r3
 80011bc:	4812      	ldr	r0, [pc, #72]	@ (8001208 <USART6_Init+0xc8>)
 80011be:	f000 fe2b 	bl	8001e18 <USART_Init>

	USART_Cmd(USART6, ENABLE);
 80011c2:	2101      	movs	r1, #1
 80011c4:	4810      	ldr	r0, [pc, #64]	@ (8001208 <USART6_Init+0xc8>)
 80011c6:	f000 fee1 	bl	8001f8c <USART_Cmd>

	/* Configure interrupts for USART------------------------------------------------------*/
	// Clock supply for NVIC---------------------------------------------------------------
	USART_ITConfig(USART6, USART_IT_RXNE, ENABLE);
 80011ca:	2201      	movs	r2, #1
 80011cc:	f240 5125 	movw	r1, #1317	@ 0x525
 80011d0:	480d      	ldr	r0, [pc, #52]	@ (8001208 <USART6_Init+0xc8>)
 80011d2:	f000 ff1d 	bl	8002010 <USART_ITConfig>

	// NVIC Configuration------------------------------------------------------------------
	NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);
 80011d6:	f44f 60a0 	mov.w	r0, #1280	@ 0x500
 80011da:	f000 fbb5 	bl	8001948 <NVIC_PriorityGroupConfig>

	// Configure NVIC----------------------------------------------------------------------
	NVIC_InitStruct.NVIC_IRQChannel = USART6_IRQn;
 80011de:	2347      	movs	r3, #71	@ 0x47
 80011e0:	713b      	strb	r3, [r7, #4]
	NVIC_InitStruct.NVIC_IRQChannelCmd = ENABLE;
 80011e2:	2301      	movs	r3, #1
 80011e4:	71fb      	strb	r3, [r7, #7]
	NVIC_InitStruct.NVIC_IRQChannelPreemptionPriority = 0;
 80011e6:	2300      	movs	r3, #0
 80011e8:	717b      	strb	r3, [r7, #5]
	NVIC_InitStruct.NVIC_IRQChannelSubPriority = 0;
 80011ea:	2300      	movs	r3, #0
 80011ec:	71bb      	strb	r3, [r7, #6]

	NVIC_Init(&NVIC_InitStruct);
 80011ee:	1d3b      	adds	r3, r7, #4
 80011f0:	4618      	mov	r0, r3
 80011f2:	f000 fbbd 	bl	8001970 <NVIC_Init>
}
 80011f6:	bf00      	nop
 80011f8:	3720      	adds	r7, #32
 80011fa:	46bd      	mov	sp, r7
 80011fc:	bd80      	pop	{r7, pc}
 80011fe:	bf00      	nop
 8001200:	40020800 	.word	0x40020800
 8001204:	40020000 	.word	0x40020000
 8001208:	40011400 	.word	0x40011400

0800120c <USART6_HandleEventCallback>:
 *
 * @note:		None
 *
 */
void USART6_HandleEventCallback (pUsartStateCallback callback)
{
 800120c:	b480      	push	{r7}
 800120e:	b083      	sub	sp, #12
 8001210:	af00      	add	r7, sp, #0
 8001212:	6078      	str	r0, [r7, #4]
	USART6StateCallback = callback;
 8001214:	4a04      	ldr	r2, [pc, #16]	@ (8001228 <USART6_HandleEventCallback+0x1c>)
 8001216:	687b      	ldr	r3, [r7, #4]
 8001218:	6013      	str	r3, [r2, #0]
}
 800121a:	bf00      	nop
 800121c:	370c      	adds	r7, #12
 800121e:	46bd      	mov	sp, r7
 8001220:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001224:	4770      	bx	lr
 8001226:	bf00      	nop
 8001228:	20000210 	.word	0x20000210

0800122c <processSerialHandle>:
 * @retval:		None
 *
 * @note:		None
 */
void processSerialHandle (void)
{
 800122c:	b580      	push	{r7, lr}
 800122e:	b082      	sub	sp, #8
 8001230:	af00      	add	r7, sp, #0
	USART_STATE_e	RxState = PollRxBuff();
 8001232:	f000 f817 	bl	8001264 <PollRxBuff>
 8001236:	4603      	mov	r3, r0
 8001238:	71fb      	strb	r3, [r7, #7]

	if (RxState == USART_STATE_DATA_RECEIVED || RxState == USART_STATE_ERROR)
 800123a:	79fb      	ldrb	r3, [r7, #7]
 800123c:	2b02      	cmp	r3, #2
 800123e:	d002      	beq.n	8001246 <processSerialHandle+0x1a>
 8001240:	79fb      	ldrb	r3, [r7, #7]
 8001242:	2b04      	cmp	r3, #4
 8001244:	d108      	bne.n	8001258 <processSerialHandle+0x2c>
	{
		if (USART6StateCallback != NULL)
 8001246:	4b06      	ldr	r3, [pc, #24]	@ (8001260 <processSerialHandle+0x34>)
 8001248:	681b      	ldr	r3, [r3, #0]
 800124a:	2b00      	cmp	r3, #0
 800124c:	d004      	beq.n	8001258 <processSerialHandle+0x2c>
		{
			USART6StateCallback(RxState);
 800124e:	4b04      	ldr	r3, [pc, #16]	@ (8001260 <processSerialHandle+0x34>)
 8001250:	681b      	ldr	r3, [r3, #0]
 8001252:	79fa      	ldrb	r2, [r7, #7]
 8001254:	4610      	mov	r0, r2
 8001256:	4798      	blx	r3
		}
	}
}
 8001258:	bf00      	nop
 800125a:	3708      	adds	r7, #8
 800125c:	46bd      	mov	sp, r7
 800125e:	bd80      	pop	{r7, pc}
 8001260:	20000210 	.word	0x20000210

08001264 <PollRxBuff>:
 * @retval:		byUartState - USART state
 *
 * @note:		None
 */
uint8_t PollRxBuff (void)
{
 8001264:	b580      	push	{r7, lr}
 8001266:	b082      	sub	sp, #8
 8001268:	af00      	add	r7, sp, #0
	// Variable to store value after retrieved from Queue
	uint8_t byRxData;

	uint8_t byUartState = (uint8_t) USART_STATE_IDLE;
 800126a:	2300      	movs	r3, #0
 800126c:	71fb      	strb	r3, [r7, #7]
	uint8_t RxBufState = RX_STATE_START_BYTE;
 800126e:	2300      	movs	r3, #0
 8001270:	71bb      	strb	r3, [r7, #6]
	uint8_t byCheckXorRxBuf = 0;
 8001272:	2300      	movs	r3, #0
 8001274:	717b      	strb	r3, [r7, #5]

	while ((bufNumItems(&g_serialQueueRx) != 0) && (byUartState == USART_STATE_IDLE))
 8001276:	e04b      	b.n	8001310 <PollRxBuff+0xac>
	{
		bufDeDat(&g_serialQueueRx, &byRxData);			// Retrieve data from the queue (FIFO)
 8001278:	1d3b      	adds	r3, r7, #4
 800127a:	4619      	mov	r1, r3
 800127c:	482b      	ldr	r0, [pc, #172]	@ (800132c <PollRxBuff+0xc8>)
 800127e:	f003 fa5f 	bl	8004740 <bufDeDat>

		switch (RxBufState)
 8001282:	79bb      	ldrb	r3, [r7, #6]
 8001284:	2b02      	cmp	r3, #2
 8001286:	d033      	beq.n	80012f0 <PollRxBuff+0x8c>
 8001288:	2b02      	cmp	r3, #2
 800128a:	dc3d      	bgt.n	8001308 <PollRxBuff+0xa4>
 800128c:	2b00      	cmp	r3, #0
 800128e:	d002      	beq.n	8001296 <PollRxBuff+0x32>
 8001290:	2b01      	cmp	r3, #1
 8001292:	d00e      	beq.n	80012b2 <PollRxBuff+0x4e>
 8001294:	e038      	b.n	8001308 <PollRxBuff+0xa4>
		{
			case RX_STATE_START_BYTE:
			{
				if (byRxData == FRAME_START)
 8001296:	793b      	ldrb	r3, [r7, #4]
 8001298:	2bb1      	cmp	r3, #177	@ 0xb1
 800129a:	d107      	bne.n	80012ac <PollRxBuff+0x48>
				{
					g_IndexRxBuf = 0;
 800129c:	4b24      	ldr	r3, [pc, #144]	@ (8001330 <PollRxBuff+0xcc>)
 800129e:	2200      	movs	r2, #0
 80012a0:	701a      	strb	r2, [r3, #0]
					byCheckXorRxBuf = CXOR_INIT_VAL;
 80012a2:	23ff      	movs	r3, #255	@ 0xff
 80012a4:	717b      	strb	r3, [r7, #5]
					RxBufState = RX_STATE_DATA_BYTES;
 80012a6:	2301      	movs	r3, #1
 80012a8:	71bb      	strb	r3, [r7, #6]
				}
				else
				{
					byUartState = USART_STATE_EMPTY;	// Buffer EMPTY
				}
			} break;
 80012aa:	e031      	b.n	8001310 <PollRxBuff+0xac>
					byUartState = USART_STATE_EMPTY;	// Buffer EMPTY
 80012ac:	2301      	movs	r3, #1
 80012ae:	71fb      	strb	r3, [r7, #7]
			} break;
 80012b0:	e02e      	b.n	8001310 <PollRxBuff+0xac>
			case RX_STATE_DATA_BYTES:
			{
				if (g_IndexRxBuf < RX_BUFFER_SIZE)
				{
					// Retrieve the bytes in the transmission frame
					g_strRxBuffer[g_IndexRxBuf] = byRxData;
 80012b2:	7939      	ldrb	r1, [r7, #4]
 80012b4:	4b1e      	ldr	r3, [pc, #120]	@ (8001330 <PollRxBuff+0xcc>)
 80012b6:	781b      	ldrb	r3, [r3, #0]
 80012b8:	461a      	mov	r2, r3
 80012ba:	4b1e      	ldr	r3, [pc, #120]	@ (8001334 <PollRxBuff+0xd0>)
 80012bc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]

					if (g_IndexRxBuf > 0)
 80012c0:	4b1b      	ldr	r3, [pc, #108]	@ (8001330 <PollRxBuff+0xcc>)
 80012c2:	781b      	ldrb	r3, [r3, #0]
 80012c4:	2b00      	cmp	r3, #0
 80012c6:	d003      	beq.n	80012d0 <PollRxBuff+0x6c>
					{
						byCheckXorRxBuf ^= byRxData;		// Calculator CXOR
 80012c8:	793a      	ldrb	r2, [r7, #4]
 80012ca:	797b      	ldrb	r3, [r7, #5]
 80012cc:	4053      	eors	r3, r2
 80012ce:	717b      	strb	r3, [r7, #5]
					}

					g_IndexRxBuf++;
 80012d0:	4b17      	ldr	r3, [pc, #92]	@ (8001330 <PollRxBuff+0xcc>)
 80012d2:	781b      	ldrb	r3, [r3, #0]
 80012d4:	3301      	adds	r3, #1
 80012d6:	b2da      	uxtb	r2, r3
 80012d8:	4b15      	ldr	r3, [pc, #84]	@ (8001330 <PollRxBuff+0xcc>)
 80012da:	701a      	strb	r2, [r3, #0]

					if (g_IndexRxBuf == *g_strRxBuffer)
 80012dc:	4b14      	ldr	r3, [pc, #80]	@ (8001330 <PollRxBuff+0xcc>)
 80012de:	781b      	ldrb	r3, [r3, #0]
 80012e0:	461a      	mov	r2, r3
 80012e2:	4b14      	ldr	r3, [pc, #80]	@ (8001334 <PollRxBuff+0xd0>)
 80012e4:	881b      	ldrh	r3, [r3, #0]
 80012e6:	429a      	cmp	r2, r3
 80012e8:	d111      	bne.n	800130e <PollRxBuff+0xaa>
					{
						RxBufState = RX_STATE_CXOR_BYTE;
 80012ea:	2302      	movs	r3, #2
 80012ec:	71bb      	strb	r3, [r7, #6]
				else
				{
					RxBufState = RX_STATE_START_BYTE;
					byUartState = USART_STATE_DATA_ERROR;
				}
			} break;
 80012ee:	e00e      	b.n	800130e <PollRxBuff+0xaa>

			case RX_STATE_CXOR_BYTE:
			{
				if (byRxData == byCheckXorRxBuf)
 80012f0:	793b      	ldrb	r3, [r7, #4]
 80012f2:	797a      	ldrb	r2, [r7, #5]
 80012f4:	429a      	cmp	r2, r3
 80012f6:	d102      	bne.n	80012fe <PollRxBuff+0x9a>
				{
					byUartState = USART_STATE_DATA_RECEIVED;
 80012f8:	2302      	movs	r3, #2
 80012fa:	71fb      	strb	r3, [r7, #7]
 80012fc:	e001      	b.n	8001302 <PollRxBuff+0x9e>
				}
				else
				{
					byUartState = USART_STATE_ERROR;
 80012fe:	2304      	movs	r3, #4
 8001300:	71fb      	strb	r3, [r7, #7]
				}

				RxBufState = RX_STATE_START_BYTE;
 8001302:	2300      	movs	r3, #0
 8001304:	71bb      	strb	r3, [r7, #6]
			} break;
 8001306:	e003      	b.n	8001310 <PollRxBuff+0xac>

			default:
				RxBufState = RX_STATE_START_BYTE;
 8001308:	2300      	movs	r3, #0
 800130a:	71bb      	strb	r3, [r7, #6]
				break;
 800130c:	e000      	b.n	8001310 <PollRxBuff+0xac>
			} break;
 800130e:	bf00      	nop
	while ((bufNumItems(&g_serialQueueRx) != 0) && (byUartState == USART_STATE_IDLE))
 8001310:	4806      	ldr	r0, [pc, #24]	@ (800132c <PollRxBuff+0xc8>)
 8001312:	f003 f97c 	bl	800460e <bufNumItems>
 8001316:	4603      	mov	r3, r0
 8001318:	2b00      	cmp	r3, #0
 800131a:	d002      	beq.n	8001322 <PollRxBuff+0xbe>
 800131c:	79fb      	ldrb	r3, [r7, #7]
 800131e:	2b00      	cmp	r3, #0
 8001320:	d0aa      	beq.n	8001278 <PollRxBuff+0x14>
		}
	}

	return byUartState;
 8001322:	79fb      	ldrb	r3, [r7, #7]
}
 8001324:	4618      	mov	r0, r3
 8001326:	3708      	adds	r7, #8
 8001328:	46bd      	mov	sp, r7
 800132a:	bd80      	pop	{r7, pc}
 800132c:	20000518 	.word	0x20000518
 8001330:	20000214 	.word	0x20000214
 8001334:	20000318 	.word	0x20000318

08001338 <USART_GetFrame>:
 * @retval:		g_strRxBuffer
 *
 * @note:		None
 */
uint8_t* USART_GetFrame (void)
{
 8001338:	b480      	push	{r7}
 800133a:	af00      	add	r7, sp, #0
	return g_strRxBuffer;
 800133c:	4b02      	ldr	r3, [pc, #8]	@ (8001348 <USART_GetFrame+0x10>)
}
 800133e:	4618      	mov	r0, r3
 8001340:	46bd      	mov	sp, r7
 8001342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001346:	4770      	bx	lr
 8001348:	20000318 	.word	0x20000318

0800134c <USART_SendPacket>:
					   uint8_t byEndpoint,		\
					   uint8_t byCmdId, 		\
					   uint8_t byCmdType,		\
					   uint8_t *pPayload,		\
					   uint8_t byLengthPayload)
{
 800134c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8001350:	b087      	sub	sp, #28
 8001352:	af00      	add	r7, sp, #0
 8001354:	4606      	mov	r6, r0
 8001356:	4608      	mov	r0, r1
 8001358:	4611      	mov	r1, r2
 800135a:	461a      	mov	r2, r3
 800135c:	4633      	mov	r3, r6
 800135e:	80fb      	strh	r3, [r7, #6]
 8001360:	4603      	mov	r3, r0
 8001362:	717b      	strb	r3, [r7, #5]
 8001364:	460b      	mov	r3, r1
 8001366:	713b      	strb	r3, [r7, #4]
 8001368:	4613      	mov	r3, r2
 800136a:	70fb      	strb	r3, [r7, #3]
 800136c:	466b      	mov	r3, sp
 800136e:	461e      	mov	r6, r3
	uint8_t index = 0;
 8001370:	2300      	movs	r3, #0
 8001372:	75fb      	strb	r3, [r7, #23]
	uint8_t byLength = byLengthPayload + 7;		// nodeid, endpoint, id, type, seq, cxor
 8001374:	f897 303c 	ldrb.w	r3, [r7, #60]	@ 0x3c
 8001378:	3307      	adds	r3, #7
 800137a:	74bb      	strb	r3, [r7, #18]
	static uint8_t bySequence = CMD_SEQUENCE;
	uint8_t byCXOR = CXOR_INIT_VAL;
 800137c:	23ff      	movs	r3, #255	@ 0xff
 800137e:	75bb      	strb	r3, [r7, #22]
	uint8_t Frame[byLength + 2];
 8001380:	7cbb      	ldrb	r3, [r7, #18]
 8001382:	1c99      	adds	r1, r3, #2
 8001384:	1e4b      	subs	r3, r1, #1
 8001386:	60fb      	str	r3, [r7, #12]
 8001388:	460a      	mov	r2, r1
 800138a:	2300      	movs	r3, #0
 800138c:	4690      	mov	r8, r2
 800138e:	4699      	mov	r9, r3
 8001390:	f04f 0200 	mov.w	r2, #0
 8001394:	f04f 0300 	mov.w	r3, #0
 8001398:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800139c:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80013a0:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80013a4:	460a      	mov	r2, r1
 80013a6:	2300      	movs	r3, #0
 80013a8:	4614      	mov	r4, r2
 80013aa:	461d      	mov	r5, r3
 80013ac:	f04f 0200 	mov.w	r2, #0
 80013b0:	f04f 0300 	mov.w	r3, #0
 80013b4:	00eb      	lsls	r3, r5, #3
 80013b6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80013ba:	00e2      	lsls	r2, r4, #3
 80013bc:	460b      	mov	r3, r1
 80013be:	3307      	adds	r3, #7
 80013c0:	08db      	lsrs	r3, r3, #3
 80013c2:	00db      	lsls	r3, r3, #3
 80013c4:	ebad 0d03 	sub.w	sp, sp, r3
 80013c8:	466b      	mov	r3, sp
 80013ca:	3300      	adds	r3, #0
 80013cc:	60bb      	str	r3, [r7, #8]

	Frame[index++] = FRAME_START;
 80013ce:	7dfb      	ldrb	r3, [r7, #23]
 80013d0:	1c5a      	adds	r2, r3, #1
 80013d2:	75fa      	strb	r2, [r7, #23]
 80013d4:	461a      	mov	r2, r3
 80013d6:	68bb      	ldr	r3, [r7, #8]
 80013d8:	21b1      	movs	r1, #177	@ 0xb1
 80013da:	5499      	strb	r1, [r3, r2]
	Frame[index++] = byLength;
 80013dc:	7dfb      	ldrb	r3, [r7, #23]
 80013de:	1c5a      	adds	r2, r3, #1
 80013e0:	75fa      	strb	r2, [r7, #23]
 80013e2:	4619      	mov	r1, r3
 80013e4:	68bb      	ldr	r3, [r7, #8]
 80013e6:	7cba      	ldrb	r2, [r7, #18]
 80013e8:	545a      	strb	r2, [r3, r1]
	Frame[index++] = (byNodeId >> 8) & 0xFF;
 80013ea:	88fb      	ldrh	r3, [r7, #6]
 80013ec:	0a1b      	lsrs	r3, r3, #8
 80013ee:	b299      	uxth	r1, r3
 80013f0:	7dfb      	ldrb	r3, [r7, #23]
 80013f2:	1c5a      	adds	r2, r3, #1
 80013f4:	75fa      	strb	r2, [r7, #23]
 80013f6:	461a      	mov	r2, r3
 80013f8:	b2c9      	uxtb	r1, r1
 80013fa:	68bb      	ldr	r3, [r7, #8]
 80013fc:	5499      	strb	r1, [r3, r2]
	Frame[index++] = byNodeId & 0xFF;
 80013fe:	7dfb      	ldrb	r3, [r7, #23]
 8001400:	1c5a      	adds	r2, r3, #1
 8001402:	75fa      	strb	r2, [r7, #23]
 8001404:	461a      	mov	r2, r3
 8001406:	88fb      	ldrh	r3, [r7, #6]
 8001408:	b2d9      	uxtb	r1, r3
 800140a:	68bb      	ldr	r3, [r7, #8]
 800140c:	5499      	strb	r1, [r3, r2]
	Frame[index++] = byEndpoint;
 800140e:	7dfb      	ldrb	r3, [r7, #23]
 8001410:	1c5a      	adds	r2, r3, #1
 8001412:	75fa      	strb	r2, [r7, #23]
 8001414:	4619      	mov	r1, r3
 8001416:	68bb      	ldr	r3, [r7, #8]
 8001418:	797a      	ldrb	r2, [r7, #5]
 800141a:	545a      	strb	r2, [r3, r1]
	Frame[index++] = byCmdId;
 800141c:	7dfb      	ldrb	r3, [r7, #23]
 800141e:	1c5a      	adds	r2, r3, #1
 8001420:	75fa      	strb	r2, [r7, #23]
 8001422:	4619      	mov	r1, r3
 8001424:	68bb      	ldr	r3, [r7, #8]
 8001426:	793a      	ldrb	r2, [r7, #4]
 8001428:	545a      	strb	r2, [r3, r1]
	Frame[index++] = byCmdType;
 800142a:	7dfb      	ldrb	r3, [r7, #23]
 800142c:	1c5a      	adds	r2, r3, #1
 800142e:	75fa      	strb	r2, [r7, #23]
 8001430:	4619      	mov	r1, r3
 8001432:	68bb      	ldr	r3, [r7, #8]
 8001434:	78fa      	ldrb	r2, [r7, #3]
 8001436:	545a      	strb	r2, [r3, r1]

	for (uint8_t i = 0; i < byLengthPayload; i++)
 8001438:	2300      	movs	r3, #0
 800143a:	757b      	strb	r3, [r7, #21]
 800143c:	e00c      	b.n	8001458 <USART_SendPacket+0x10c>
	{
		Frame[index++] = pPayload[i];
 800143e:	7d7b      	ldrb	r3, [r7, #21]
 8001440:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 8001442:	441a      	add	r2, r3
 8001444:	7dfb      	ldrb	r3, [r7, #23]
 8001446:	1c59      	adds	r1, r3, #1
 8001448:	75f9      	strb	r1, [r7, #23]
 800144a:	4619      	mov	r1, r3
 800144c:	7812      	ldrb	r2, [r2, #0]
 800144e:	68bb      	ldr	r3, [r7, #8]
 8001450:	545a      	strb	r2, [r3, r1]
	for (uint8_t i = 0; i < byLengthPayload; i++)
 8001452:	7d7b      	ldrb	r3, [r7, #21]
 8001454:	3301      	adds	r3, #1
 8001456:	757b      	strb	r3, [r7, #21]
 8001458:	7d7a      	ldrb	r2, [r7, #21]
 800145a:	f897 303c 	ldrb.w	r3, [r7, #60]	@ 0x3c
 800145e:	429a      	cmp	r2, r3
 8001460:	d3ed      	bcc.n	800143e <USART_SendPacket+0xf2>
	}

	Frame[index++] = bySequence++;
 8001462:	4b25      	ldr	r3, [pc, #148]	@ (80014f8 <USART_SendPacket+0x1ac>)
 8001464:	781b      	ldrb	r3, [r3, #0]
 8001466:	1c5a      	adds	r2, r3, #1
 8001468:	b2d1      	uxtb	r1, r2
 800146a:	4a23      	ldr	r2, [pc, #140]	@ (80014f8 <USART_SendPacket+0x1ac>)
 800146c:	7011      	strb	r1, [r2, #0]
 800146e:	7dfa      	ldrb	r2, [r7, #23]
 8001470:	1c51      	adds	r1, r2, #1
 8001472:	75f9      	strb	r1, [r7, #23]
 8001474:	4611      	mov	r1, r2
 8001476:	68ba      	ldr	r2, [r7, #8]
 8001478:	5453      	strb	r3, [r2, r1]

	for (uint8_t j = 2; j < index; j++)
 800147a:	2302      	movs	r3, #2
 800147c:	753b      	strb	r3, [r7, #20]
 800147e:	e008      	b.n	8001492 <USART_SendPacket+0x146>
	{
		byCXOR ^= Frame[j];
 8001480:	7d3b      	ldrb	r3, [r7, #20]
 8001482:	68ba      	ldr	r2, [r7, #8]
 8001484:	5cd2      	ldrb	r2, [r2, r3]
 8001486:	7dbb      	ldrb	r3, [r7, #22]
 8001488:	4053      	eors	r3, r2
 800148a:	75bb      	strb	r3, [r7, #22]
	for (uint8_t j = 2; j < index; j++)
 800148c:	7d3b      	ldrb	r3, [r7, #20]
 800148e:	3301      	adds	r3, #1
 8001490:	753b      	strb	r3, [r7, #20]
 8001492:	7d3a      	ldrb	r2, [r7, #20]
 8001494:	7dfb      	ldrb	r3, [r7, #23]
 8001496:	429a      	cmp	r2, r3
 8001498:	d3f2      	bcc.n	8001480 <USART_SendPacket+0x134>
	}
	Frame[index++] = byCXOR;
 800149a:	7dfb      	ldrb	r3, [r7, #23]
 800149c:	1c5a      	adds	r2, r3, #1
 800149e:	75fa      	strb	r2, [r7, #23]
 80014a0:	4619      	mov	r1, r3
 80014a2:	68bb      	ldr	r3, [r7, #8]
 80014a4:	7dba      	ldrb	r2, [r7, #22]
 80014a6:	545a      	strb	r2, [r3, r1]

	for (uint8_t k = 0; k < index; k++)
 80014a8:	2300      	movs	r3, #0
 80014aa:	74fb      	strb	r3, [r7, #19]
 80014ac:	e019      	b.n	80014e2 <USART_SendPacket+0x196>
	{
		while(USART_GetFlagStatus(USART6, USART_FLAG_TXE) == RESET);
 80014ae:	bf00      	nop
 80014b0:	2180      	movs	r1, #128	@ 0x80
 80014b2:	4812      	ldr	r0, [pc, #72]	@ (80014fc <USART_SendPacket+0x1b0>)
 80014b4:	f000 fdf4 	bl	80020a0 <USART_GetFlagStatus>
 80014b8:	4603      	mov	r3, r0
 80014ba:	2b00      	cmp	r3, #0
 80014bc:	d0f8      	beq.n	80014b0 <USART_SendPacket+0x164>
		USART_SendData(USART6, Frame[k]);
 80014be:	7cfb      	ldrb	r3, [r7, #19]
 80014c0:	68ba      	ldr	r2, [r7, #8]
 80014c2:	5cd3      	ldrb	r3, [r2, r3]
 80014c4:	4619      	mov	r1, r3
 80014c6:	480d      	ldr	r0, [pc, #52]	@ (80014fc <USART_SendPacket+0x1b0>)
 80014c8:	f000 fd80 	bl	8001fcc <USART_SendData>
		while(USART_GetFlagStatus(USART6, USART_FLAG_TC) == RESET);
 80014cc:	bf00      	nop
 80014ce:	2140      	movs	r1, #64	@ 0x40
 80014d0:	480a      	ldr	r0, [pc, #40]	@ (80014fc <USART_SendPacket+0x1b0>)
 80014d2:	f000 fde5 	bl	80020a0 <USART_GetFlagStatus>
 80014d6:	4603      	mov	r3, r0
 80014d8:	2b00      	cmp	r3, #0
 80014da:	d0f8      	beq.n	80014ce <USART_SendPacket+0x182>
	for (uint8_t k = 0; k < index; k++)
 80014dc:	7cfb      	ldrb	r3, [r7, #19]
 80014de:	3301      	adds	r3, #1
 80014e0:	74fb      	strb	r3, [r7, #19]
 80014e2:	7cfa      	ldrb	r2, [r7, #19]
 80014e4:	7dfb      	ldrb	r3, [r7, #23]
 80014e6:	429a      	cmp	r2, r3
 80014e8:	d3e1      	bcc.n	80014ae <USART_SendPacket+0x162>
 80014ea:	46b5      	mov	sp, r6
	}
}
 80014ec:	bf00      	nop
 80014ee:	371c      	adds	r7, #28
 80014f0:	46bd      	mov	sp, r7
 80014f2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80014f6:	bf00      	nop
 80014f8:	20000528 	.word	0x20000528
 80014fc:	40011400 	.word	0x40011400

08001500 <USART_SendCreateNetwork>:
 * @retval:		None
 *
 * @note:		None
 */
void USART_SendCreateNetwork (void)
{
 8001500:	b580      	push	{r7, lr}
 8001502:	b082      	sub	sp, #8
 8001504:	af02      	add	r7, sp, #8
	USART_SendPacket(NODE_ID_CONTROLLER,
 8001506:	2300      	movs	r3, #0
 8001508:	9301      	str	r3, [sp, #4]
 800150a:	2300      	movs	r3, #0
 800150c:	9300      	str	r3, [sp, #0]
 800150e:	2302      	movs	r3, #2
 8001510:	2201      	movs	r2, #1
 8001512:	2101      	movs	r1, #1
 8001514:	2000      	movs	r0, #0
 8001516:	f7ff ff19 	bl	800134c <USART_SendPacket>
					 0x01,
					 CMD_ID_NETWORK_CREATING,
					 CMD_TYPE_SET,
					 NULL,
					 0);
}
 800151a:	bf00      	nop
 800151c:	46bd      	mov	sp, r7
 800151e:	bd80      	pop	{r7, pc}

08001520 <USART_SendDeleteNetwork>:
 * @retval:		None
 *
 * @note:		None
 */
void USART_SendDeleteNetwork (void)
{
 8001520:	b580      	push	{r7, lr}
 8001522:	b082      	sub	sp, #8
 8001524:	af02      	add	r7, sp, #8
	USART_SendPacket(NODE_ID_CONTROLLER,
 8001526:	2300      	movs	r3, #0
 8001528:	9301      	str	r3, [sp, #4]
 800152a:	2300      	movs	r3, #0
 800152c:	9300      	str	r3, [sp, #0]
 800152e:	2302      	movs	r3, #2
 8001530:	2204      	movs	r2, #4
 8001532:	2101      	movs	r1, #1
 8001534:	2000      	movs	r0, #0
 8001536:	f7ff ff09 	bl	800134c <USART_SendPacket>
					 0x01,
					 CMD_ID_NETWORK_DELETE,
					 CMD_TYPE_SET,
					 NULL,
					 0);
}
 800153a:	bf00      	nop
 800153c:	46bd      	mov	sp, r7
 800153e:	bd80      	pop	{r7, pc}

08001540 <USART_SendOpenNetwork>:
 * @retval:		None
 *
 * @note:		None
 */
void USART_SendOpenNetwork (void)
{
 8001540:	b580      	push	{r7, lr}
 8001542:	b082      	sub	sp, #8
 8001544:	af02      	add	r7, sp, #8
	USART_SendPacket(NODE_ID_CONTROLLER,
 8001546:	2300      	movs	r3, #0
 8001548:	9301      	str	r3, [sp, #4]
 800154a:	2300      	movs	r3, #0
 800154c:	9300      	str	r3, [sp, #0]
 800154e:	2302      	movs	r3, #2
 8001550:	2202      	movs	r2, #2
 8001552:	2101      	movs	r1, #1
 8001554:	2000      	movs	r0, #0
 8001556:	f7ff fef9 	bl	800134c <USART_SendPacket>
					 0x01,
					 CMD_ID_NETWORK_OPENING,
					 CMD_TYPE_SET,
					 NULL,
					 0);
}
 800155a:	bf00      	nop
 800155c:	46bd      	mov	sp, r7
 800155e:	bd80      	pop	{r7, pc}

08001560 <USART_SendCloseNetwork>:
 * @retval:		None
 *
 * @note:		None
 */
void USART_SendCloseNetwork (void)
{
 8001560:	b580      	push	{r7, lr}
 8001562:	b082      	sub	sp, #8
 8001564:	af02      	add	r7, sp, #8
	USART_SendPacket(NODE_ID_CONTROLLER,
 8001566:	2300      	movs	r3, #0
 8001568:	9301      	str	r3, [sp, #4]
 800156a:	2300      	movs	r3, #0
 800156c:	9300      	str	r3, [sp, #0]
 800156e:	2302      	movs	r3, #2
 8001570:	2203      	movs	r2, #3
 8001572:	2101      	movs	r1, #1
 8001574:	2000      	movs	r0, #0
 8001576:	f7ff fee9 	bl	800134c <USART_SendPacket>
					 0x01,
					 CMD_ID_NETWORK_CLOSING,
					 CMD_TYPE_SET,
					 NULL,
					 0);
}
 800157a:	bf00      	nop
 800157c:	46bd      	mov	sp, r7
 800157e:	bd80      	pop	{r7, pc}

08001580 <USART_SendDistanceValue>:
 * @retval:		None
 *
 * @note:		None
 */
void USART_SendDistanceValue (uint8_t value)
{
 8001580:	b580      	push	{r7, lr}
 8001582:	b084      	sub	sp, #16
 8001584:	af02      	add	r7, sp, #8
 8001586:	4603      	mov	r3, r0
 8001588:	71fb      	strb	r3, [r7, #7]
	USART_SendPacket(NODE_ID_CONTROLLER,
 800158a:	79fb      	ldrb	r3, [r7, #7]
 800158c:	461a      	mov	r2, r3
 800158e:	2301      	movs	r3, #1
 8001590:	9301      	str	r3, [sp, #4]
 8001592:	9200      	str	r2, [sp, #0]
 8001594:	2302      	movs	r3, #2
 8001596:	2206      	movs	r2, #6
 8001598:	2101      	movs	r1, #1
 800159a:	2000      	movs	r0, #0
 800159c:	f7ff fed6 	bl	800134c <USART_SendPacket>
					 0x01,
					 CMD_ID_DISTANCE,
					 CMD_TYPE_SET,
					 (uint8_t*)value,
					 1);
}
 80015a0:	bf00      	nop
 80015a2:	3708      	adds	r7, #8
 80015a4:	46bd      	mov	sp, r7
 80015a6:	bd80      	pop	{r7, pc}

080015a8 <USART_SendLedState>:
 * @retval:		None
 *
 * @note:		None
 */
void USART_SendLedState (uint8_t state)
{
 80015a8:	b580      	push	{r7, lr}
 80015aa:	b084      	sub	sp, #16
 80015ac:	af02      	add	r7, sp, #8
 80015ae:	4603      	mov	r3, r0
 80015b0:	71fb      	strb	r3, [r7, #7]
//	uint8_t payload[1] = {state};

	USART_SendPacket(NODE_ID_NOT_USE,
 80015b2:	79fb      	ldrb	r3, [r7, #7]
 80015b4:	461a      	mov	r2, r3
 80015b6:	2301      	movs	r3, #1
 80015b8:	9301      	str	r3, [sp, #4]
 80015ba:	9200      	str	r2, [sp, #0]
 80015bc:	2302      	movs	r3, #2
 80015be:	2281      	movs	r2, #129	@ 0x81
 80015c0:	21fe      	movs	r1, #254	@ 0xfe
 80015c2:	f64f 70ee 	movw	r0, #65518	@ 0xffee
 80015c6:	f7ff fec1 	bl	800134c <USART_SendPacket>
					 ENDPOINT_NOT_USE,
					 CMD_ID_LED,
					 CMD_TYPE_SET,
					 (uint8_t*)state,	// payload
					 1);
}
 80015ca:	bf00      	nop
 80015cc:	3708      	adds	r7, #8
 80015ce:	46bd      	mov	sp, r7
 80015d0:	bd80      	pop	{r7, pc}
	...

080015d4 <USART_ReceivedData>:
 * @retval:		None
 *
 * @note:		None
 */
void USART_ReceivedData (void)
{
 80015d4:	b580      	push	{r7, lr}
 80015d6:	b082      	sub	sp, #8
 80015d8:	af00      	add	r7, sp, #0
	uint8_t *frame = USART_GetFrame();
 80015da:	f7ff fead 	bl	8001338 <USART_GetFrame>
 80015de:	6078      	str	r0, [r7, #4]

	switch (CMD_ID)
 80015e0:	687b      	ldr	r3, [r7, #4]
 80015e2:	3305      	adds	r3, #5
 80015e4:	781b      	ldrb	r3, [r3, #0]
 80015e6:	3b81      	subs	r3, #129	@ 0x81
 80015e8:	2b04      	cmp	r3, #4
 80015ea:	d871      	bhi.n	80016d0 <USART_ReceivedData+0xfc>
 80015ec:	a201      	add	r2, pc, #4	@ (adr r2, 80015f4 <USART_ReceivedData+0x20>)
 80015ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80015f2:	bf00      	nop
 80015f4:	08001697 	.word	0x08001697
 80015f8:	08001609 	.word	0x08001609
 80015fc:	08001621 	.word	0x08001621
 8001600:	08001639 	.word	0x08001639
 8001604:	08001651 	.word	0x08001651
	{
		case CMD_ID_TEMP_SENSOR:
		{
			if (CMD_TYPE == CMD_TYPE_RES)
 8001608:	687b      	ldr	r3, [r7, #4]
 800160a:	3306      	adds	r3, #6
 800160c:	781b      	ldrb	r3, [r3, #0]
 800160e:	2b01      	cmp	r3, #1
 8001610:	d160      	bne.n	80016d4 <USART_ReceivedData+0x100>
			{
				LCD_DisplayTempValue(CMD_DATA_TEMP);
 8001612:	687b      	ldr	r3, [r7, #4]
 8001614:	3307      	adds	r3, #7
 8001616:	781b      	ldrb	r3, [r3, #0]
 8001618:	4618      	mov	r0, r3
 800161a:	f7fe fe8f 	bl	800033c <LCD_DisplayTempValue>
			}

			break;
 800161e:	e059      	b.n	80016d4 <USART_ReceivedData+0x100>
		}

		case CMD_ID_HUMI_SENSOR:
		{
			if (CMD_TYPE == CMD_TYPE_RES)
 8001620:	687b      	ldr	r3, [r7, #4]
 8001622:	3306      	adds	r3, #6
 8001624:	781b      	ldrb	r3, [r3, #0]
 8001626:	2b01      	cmp	r3, #1
 8001628:	d156      	bne.n	80016d8 <USART_ReceivedData+0x104>
			{
				LCD_DisplayHumiValue(CMD_DATA_HUMI);
 800162a:	687b      	ldr	r3, [r7, #4]
 800162c:	3307      	adds	r3, #7
 800162e:	781b      	ldrb	r3, [r3, #0]
 8001630:	4618      	mov	r0, r3
 8001632:	f7fe fea5 	bl	8000380 <LCD_DisplayHumiValue>
			}

			break;
 8001636:	e04f      	b.n	80016d8 <USART_ReceivedData+0x104>
		}

		case CMD_ID_LIGHT_SENSOR:
		{
			if (CMD_TYPE == CMD_TYPE_RES)
 8001638:	687b      	ldr	r3, [r7, #4]
 800163a:	3306      	adds	r3, #6
 800163c:	781b      	ldrb	r3, [r3, #0]
 800163e:	2b01      	cmp	r3, #1
 8001640:	d14c      	bne.n	80016dc <USART_ReceivedData+0x108>
			{
				LCD_DisplayLightValue(CMD_DATA_LIGHT);
 8001642:	687b      	ldr	r3, [r7, #4]
 8001644:	3307      	adds	r3, #7
 8001646:	781b      	ldrb	r3, [r3, #0]
 8001648:	4618      	mov	r0, r3
 800164a:	f7fe febb 	bl	80003c4 <LCD_DisplayLightValue>
			}

			break;
 800164e:	e045      	b.n	80016dc <USART_ReceivedData+0x108>
		}

		case CMD_ID_DETEC:
		{
			if (CMD_TYPE == CMD_TYPE_RES && CMD_DATA_DETEC == CMD_DATA_MOTION)
 8001650:	687b      	ldr	r3, [r7, #4]
 8001652:	3306      	adds	r3, #6
 8001654:	781b      	ldrb	r3, [r3, #0]
 8001656:	2b01      	cmp	r3, #1
 8001658:	d10c      	bne.n	8001674 <USART_ReceivedData+0xa0>
 800165a:	687b      	ldr	r3, [r7, #4]
 800165c:	3307      	adds	r3, #7
 800165e:	781b      	ldrb	r3, [r3, #0]
 8001660:	2b01      	cmp	r3, #1
 8001662:	d107      	bne.n	8001674 <USART_ReceivedData+0xa0>
			{
				LCD_DisplayDetectionState(CMD_DATA_MOTION);
 8001664:	2001      	movs	r0, #1
 8001666:	f7fe fecf 	bl	8000408 <LCD_DisplayDetectionState>
				LCD_DisplayLedState(CMD_DATA_LED_ON);
 800166a:	2001      	movs	r0, #1
 800166c:	f7fe fef0 	bl	8000450 <LCD_DisplayLedState>
			{
 8001670:	bf00      	nop
			{
				LCD_DisplayDetectionState(CMD_DATA_UNMOTION);
				LCD_DisplayLedState(CMD_DATA_LED_OFF);
			}

			break;
 8001672:	e035      	b.n	80016e0 <USART_ReceivedData+0x10c>
			else if (CMD_TYPE == CMD_TYPE_RES && CMD_DATA_DETEC == CMD_DATA_UNMOTION)
 8001674:	687b      	ldr	r3, [r7, #4]
 8001676:	3306      	adds	r3, #6
 8001678:	781b      	ldrb	r3, [r3, #0]
 800167a:	2b01      	cmp	r3, #1
 800167c:	d130      	bne.n	80016e0 <USART_ReceivedData+0x10c>
 800167e:	687b      	ldr	r3, [r7, #4]
 8001680:	3307      	adds	r3, #7
 8001682:	781b      	ldrb	r3, [r3, #0]
 8001684:	2b00      	cmp	r3, #0
 8001686:	d12b      	bne.n	80016e0 <USART_ReceivedData+0x10c>
				LCD_DisplayDetectionState(CMD_DATA_UNMOTION);
 8001688:	2000      	movs	r0, #0
 800168a:	f7fe febd 	bl	8000408 <LCD_DisplayDetectionState>
				LCD_DisplayLedState(CMD_DATA_LED_OFF);
 800168e:	2000      	movs	r0, #0
 8001690:	f7fe fede 	bl	8000450 <LCD_DisplayLedState>
			break;
 8001694:	e024      	b.n	80016e0 <USART_ReceivedData+0x10c>
		}

		case CMD_ID_LED:
		{
			if (CMD_TYPE == CMD_TYPE_RES && CMD_DATA_LED == CMD_DATA_LED_ON)
 8001696:	687b      	ldr	r3, [r7, #4]
 8001698:	3306      	adds	r3, #6
 800169a:	781b      	ldrb	r3, [r3, #0]
 800169c:	2b01      	cmp	r3, #1
 800169e:	d109      	bne.n	80016b4 <USART_ReceivedData+0xe0>
 80016a0:	687b      	ldr	r3, [r7, #4]
 80016a2:	3307      	adds	r3, #7
 80016a4:	781b      	ldrb	r3, [r3, #0]
 80016a6:	2b01      	cmp	r3, #1
 80016a8:	d104      	bne.n	80016b4 <USART_ReceivedData+0xe0>
			{
				LCD_DisplayLedState(CMD_DATA_LED_ON);
 80016aa:	2001      	movs	r0, #1
 80016ac:	f7fe fed0 	bl	8000450 <LCD_DisplayLedState>
			{
 80016b0:	bf00      	nop
			else if (CMD_TYPE == CMD_TYPE_RES && CMD_DATA_LED == CMD_DATA_LED_OFF)
			{
				LCD_DisplayLedState(CMD_DATA_LED_OFF);
			}

			break;
 80016b2:	e017      	b.n	80016e4 <USART_ReceivedData+0x110>
			else if (CMD_TYPE == CMD_TYPE_RES && CMD_DATA_LED == CMD_DATA_LED_OFF)
 80016b4:	687b      	ldr	r3, [r7, #4]
 80016b6:	3306      	adds	r3, #6
 80016b8:	781b      	ldrb	r3, [r3, #0]
 80016ba:	2b01      	cmp	r3, #1
 80016bc:	d112      	bne.n	80016e4 <USART_ReceivedData+0x110>
 80016be:	687b      	ldr	r3, [r7, #4]
 80016c0:	3307      	adds	r3, #7
 80016c2:	781b      	ldrb	r3, [r3, #0]
 80016c4:	2b00      	cmp	r3, #0
 80016c6:	d10d      	bne.n	80016e4 <USART_ReceivedData+0x110>
				LCD_DisplayLedState(CMD_DATA_LED_OFF);
 80016c8:	2000      	movs	r0, #0
 80016ca:	f7fe fec1 	bl	8000450 <LCD_DisplayLedState>
			break;
 80016ce:	e009      	b.n	80016e4 <USART_ReceivedData+0x110>
		}

		default:
			break;
 80016d0:	bf00      	nop
 80016d2:	e008      	b.n	80016e6 <USART_ReceivedData+0x112>
			break;
 80016d4:	bf00      	nop
 80016d6:	e006      	b.n	80016e6 <USART_ReceivedData+0x112>
			break;
 80016d8:	bf00      	nop
 80016da:	e004      	b.n	80016e6 <USART_ReceivedData+0x112>
			break;
 80016dc:	bf00      	nop
 80016de:	e002      	b.n	80016e6 <USART_ReceivedData+0x112>
			break;
 80016e0:	bf00      	nop
 80016e2:	e000      	b.n	80016e6 <USART_ReceivedData+0x112>
			break;
 80016e4:	bf00      	nop
	}
}
 80016e6:	bf00      	nop
 80016e8:	3708      	adds	r7, #8
 80016ea:	46bd      	mov	sp, r7
 80016ec:	bd80      	pop	{r7, pc}
 80016ee:	bf00      	nop

080016f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80016f0:	480d      	ldr	r0, [pc, #52]	@ (8001728 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80016f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80016f4:	f000 f826 	bl	8001744 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80016f8:	480c      	ldr	r0, [pc, #48]	@ (800172c <LoopForever+0x6>)
  ldr r1, =_edata
 80016fa:	490d      	ldr	r1, [pc, #52]	@ (8001730 <LoopForever+0xa>)
  ldr r2, =_sidata
 80016fc:	4a0d      	ldr	r2, [pc, #52]	@ (8001734 <LoopForever+0xe>)
  movs r3, #0
 80016fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8001700:	e002      	b.n	8001708 <LoopCopyDataInit>

08001702 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8001702:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8001704:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8001706:	3304      	adds	r3, #4

08001708 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8001708:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800170a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800170c:	d3f9      	bcc.n	8001702 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800170e:	4a0a      	ldr	r2, [pc, #40]	@ (8001738 <LoopForever+0x12>)
  ldr r4, =_ebss
 8001710:	4c0a      	ldr	r4, [pc, #40]	@ (800173c <LoopForever+0x16>)
  movs r3, #0
 8001712:	2300      	movs	r3, #0
  b LoopFillZerobss
 8001714:	e001      	b.n	800171a <LoopFillZerobss>

08001716 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8001716:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8001718:	3204      	adds	r2, #4

0800171a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800171a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800171c:	d3fb      	bcc.n	8001716 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800171e:	f003 ffdd 	bl	80056dc <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8001722:	f7ff fafb 	bl	8000d1c <main>

08001726 <LoopForever>:

LoopForever:
  b LoopForever
 8001726:	e7fe      	b.n	8001726 <LoopForever>
  ldr   r0, =_estack
 8001728:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800172c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8001730:	200000d8 	.word	0x200000d8
  ldr r2, =_sidata
 8001734:	080074d4 	.word	0x080074d4
  ldr r2, =_sbss
 8001738:	200000d8 	.word	0x200000d8
  ldr r4, =_ebss
 800173c:	200019c0 	.word	0x200019c0

08001740 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8001740:	e7fe      	b.n	8001740 <ADC_IRQHandler>
	...

08001744 <SystemInit>:
 8001744:	b580      	push	{r7, lr}
 8001746:	af00      	add	r7, sp, #0
 8001748:	4b16      	ldr	r3, [pc, #88]	@ (80017a4 <SystemInit+0x60>)
 800174a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800174e:	4a15      	ldr	r2, [pc, #84]	@ (80017a4 <SystemInit+0x60>)
 8001750:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8001754:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8001758:	4b13      	ldr	r3, [pc, #76]	@ (80017a8 <SystemInit+0x64>)
 800175a:	681b      	ldr	r3, [r3, #0]
 800175c:	4a12      	ldr	r2, [pc, #72]	@ (80017a8 <SystemInit+0x64>)
 800175e:	f043 0301 	orr.w	r3, r3, #1
 8001762:	6013      	str	r3, [r2, #0]
 8001764:	4b10      	ldr	r3, [pc, #64]	@ (80017a8 <SystemInit+0x64>)
 8001766:	2200      	movs	r2, #0
 8001768:	609a      	str	r2, [r3, #8]
 800176a:	4b0f      	ldr	r3, [pc, #60]	@ (80017a8 <SystemInit+0x64>)
 800176c:	681b      	ldr	r3, [r3, #0]
 800176e:	4a0e      	ldr	r2, [pc, #56]	@ (80017a8 <SystemInit+0x64>)
 8001770:	f023 7384 	bic.w	r3, r3, #17301504	@ 0x1080000
 8001774:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8001778:	6013      	str	r3, [r2, #0]
 800177a:	4b0b      	ldr	r3, [pc, #44]	@ (80017a8 <SystemInit+0x64>)
 800177c:	4a0b      	ldr	r2, [pc, #44]	@ (80017ac <SystemInit+0x68>)
 800177e:	605a      	str	r2, [r3, #4]
 8001780:	4b09      	ldr	r3, [pc, #36]	@ (80017a8 <SystemInit+0x64>)
 8001782:	681b      	ldr	r3, [r3, #0]
 8001784:	4a08      	ldr	r2, [pc, #32]	@ (80017a8 <SystemInit+0x64>)
 8001786:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800178a:	6013      	str	r3, [r2, #0]
 800178c:	4b06      	ldr	r3, [pc, #24]	@ (80017a8 <SystemInit+0x64>)
 800178e:	2200      	movs	r2, #0
 8001790:	60da      	str	r2, [r3, #12]
 8001792:	f000 f889 	bl	80018a8 <SetSysClock>
 8001796:	4b03      	ldr	r3, [pc, #12]	@ (80017a4 <SystemInit+0x60>)
 8001798:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800179c:	609a      	str	r2, [r3, #8]
 800179e:	bf00      	nop
 80017a0:	bd80      	pop	{r7, pc}
 80017a2:	bf00      	nop
 80017a4:	e000ed00 	.word	0xe000ed00
 80017a8:	40023800 	.word	0x40023800
 80017ac:	24003010 	.word	0x24003010

080017b0 <SystemCoreClockUpdate>:
 80017b0:	b480      	push	{r7}
 80017b2:	b087      	sub	sp, #28
 80017b4:	af00      	add	r7, sp, #0
 80017b6:	2300      	movs	r3, #0
 80017b8:	613b      	str	r3, [r7, #16]
 80017ba:	2300      	movs	r3, #0
 80017bc:	617b      	str	r3, [r7, #20]
 80017be:	2302      	movs	r3, #2
 80017c0:	60fb      	str	r3, [r7, #12]
 80017c2:	2300      	movs	r3, #0
 80017c4:	60bb      	str	r3, [r7, #8]
 80017c6:	2302      	movs	r3, #2
 80017c8:	607b      	str	r3, [r7, #4]
 80017ca:	4b32      	ldr	r3, [pc, #200]	@ (8001894 <SystemCoreClockUpdate+0xe4>)
 80017cc:	689b      	ldr	r3, [r3, #8]
 80017ce:	f003 030c 	and.w	r3, r3, #12
 80017d2:	613b      	str	r3, [r7, #16]
 80017d4:	693b      	ldr	r3, [r7, #16]
 80017d6:	2b04      	cmp	r3, #4
 80017d8:	d007      	beq.n	80017ea <SystemCoreClockUpdate+0x3a>
 80017da:	2b08      	cmp	r3, #8
 80017dc:	d009      	beq.n	80017f2 <SystemCoreClockUpdate+0x42>
 80017de:	2b00      	cmp	r3, #0
 80017e0:	d13d      	bne.n	800185e <SystemCoreClockUpdate+0xae>
 80017e2:	4b2d      	ldr	r3, [pc, #180]	@ (8001898 <SystemCoreClockUpdate+0xe8>)
 80017e4:	4a2d      	ldr	r2, [pc, #180]	@ (800189c <SystemCoreClockUpdate+0xec>)
 80017e6:	601a      	str	r2, [r3, #0]
 80017e8:	e03d      	b.n	8001866 <SystemCoreClockUpdate+0xb6>
 80017ea:	4b2b      	ldr	r3, [pc, #172]	@ (8001898 <SystemCoreClockUpdate+0xe8>)
 80017ec:	4a2c      	ldr	r2, [pc, #176]	@ (80018a0 <SystemCoreClockUpdate+0xf0>)
 80017ee:	601a      	str	r2, [r3, #0]
 80017f0:	e039      	b.n	8001866 <SystemCoreClockUpdate+0xb6>
 80017f2:	4b28      	ldr	r3, [pc, #160]	@ (8001894 <SystemCoreClockUpdate+0xe4>)
 80017f4:	685b      	ldr	r3, [r3, #4]
 80017f6:	0d9b      	lsrs	r3, r3, #22
 80017f8:	f003 0301 	and.w	r3, r3, #1
 80017fc:	60bb      	str	r3, [r7, #8]
 80017fe:	4b25      	ldr	r3, [pc, #148]	@ (8001894 <SystemCoreClockUpdate+0xe4>)
 8001800:	685b      	ldr	r3, [r3, #4]
 8001802:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8001806:	607b      	str	r3, [r7, #4]
 8001808:	68bb      	ldr	r3, [r7, #8]
 800180a:	2b00      	cmp	r3, #0
 800180c:	d00c      	beq.n	8001828 <SystemCoreClockUpdate+0x78>
 800180e:	4a24      	ldr	r2, [pc, #144]	@ (80018a0 <SystemCoreClockUpdate+0xf0>)
 8001810:	687b      	ldr	r3, [r7, #4]
 8001812:	fbb2 f3f3 	udiv	r3, r2, r3
 8001816:	4a1f      	ldr	r2, [pc, #124]	@ (8001894 <SystemCoreClockUpdate+0xe4>)
 8001818:	6852      	ldr	r2, [r2, #4]
 800181a:	0992      	lsrs	r2, r2, #6
 800181c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001820:	fb02 f303 	mul.w	r3, r2, r3
 8001824:	617b      	str	r3, [r7, #20]
 8001826:	e00b      	b.n	8001840 <SystemCoreClockUpdate+0x90>
 8001828:	4a1c      	ldr	r2, [pc, #112]	@ (800189c <SystemCoreClockUpdate+0xec>)
 800182a:	687b      	ldr	r3, [r7, #4]
 800182c:	fbb2 f3f3 	udiv	r3, r2, r3
 8001830:	4a18      	ldr	r2, [pc, #96]	@ (8001894 <SystemCoreClockUpdate+0xe4>)
 8001832:	6852      	ldr	r2, [r2, #4]
 8001834:	0992      	lsrs	r2, r2, #6
 8001836:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800183a:	fb02 f303 	mul.w	r3, r2, r3
 800183e:	617b      	str	r3, [r7, #20]
 8001840:	4b14      	ldr	r3, [pc, #80]	@ (8001894 <SystemCoreClockUpdate+0xe4>)
 8001842:	685b      	ldr	r3, [r3, #4]
 8001844:	0c1b      	lsrs	r3, r3, #16
 8001846:	f003 0303 	and.w	r3, r3, #3
 800184a:	3301      	adds	r3, #1
 800184c:	005b      	lsls	r3, r3, #1
 800184e:	60fb      	str	r3, [r7, #12]
 8001850:	697a      	ldr	r2, [r7, #20]
 8001852:	68fb      	ldr	r3, [r7, #12]
 8001854:	fbb2 f3f3 	udiv	r3, r2, r3
 8001858:	4a0f      	ldr	r2, [pc, #60]	@ (8001898 <SystemCoreClockUpdate+0xe8>)
 800185a:	6013      	str	r3, [r2, #0]
 800185c:	e003      	b.n	8001866 <SystemCoreClockUpdate+0xb6>
 800185e:	4b0e      	ldr	r3, [pc, #56]	@ (8001898 <SystemCoreClockUpdate+0xe8>)
 8001860:	4a0e      	ldr	r2, [pc, #56]	@ (800189c <SystemCoreClockUpdate+0xec>)
 8001862:	601a      	str	r2, [r3, #0]
 8001864:	bf00      	nop
 8001866:	4b0b      	ldr	r3, [pc, #44]	@ (8001894 <SystemCoreClockUpdate+0xe4>)
 8001868:	689b      	ldr	r3, [r3, #8]
 800186a:	091b      	lsrs	r3, r3, #4
 800186c:	f003 030f 	and.w	r3, r3, #15
 8001870:	4a0c      	ldr	r2, [pc, #48]	@ (80018a4 <SystemCoreClockUpdate+0xf4>)
 8001872:	5cd3      	ldrb	r3, [r2, r3]
 8001874:	b2db      	uxtb	r3, r3
 8001876:	613b      	str	r3, [r7, #16]
 8001878:	4b07      	ldr	r3, [pc, #28]	@ (8001898 <SystemCoreClockUpdate+0xe8>)
 800187a:	681a      	ldr	r2, [r3, #0]
 800187c:	693b      	ldr	r3, [r7, #16]
 800187e:	fa22 f303 	lsr.w	r3, r2, r3
 8001882:	4a05      	ldr	r2, [pc, #20]	@ (8001898 <SystemCoreClockUpdate+0xe8>)
 8001884:	6013      	str	r3, [r2, #0]
 8001886:	bf00      	nop
 8001888:	371c      	adds	r7, #28
 800188a:	46bd      	mov	sp, r7
 800188c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001890:	4770      	bx	lr
 8001892:	bf00      	nop
 8001894:	40023800 	.word	0x40023800
 8001898:	20000024 	.word	0x20000024
 800189c:	00f42400 	.word	0x00f42400
 80018a0:	017d7840 	.word	0x017d7840
 80018a4:	20000028 	.word	0x20000028

080018a8 <SetSysClock>:
 80018a8:	b480      	push	{r7}
 80018aa:	af00      	add	r7, sp, #0
 80018ac:	4b22      	ldr	r3, [pc, #136]	@ (8001938 <SetSysClock+0x90>)
 80018ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80018b0:	4a21      	ldr	r2, [pc, #132]	@ (8001938 <SetSysClock+0x90>)
 80018b2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80018b6:	6413      	str	r3, [r2, #64]	@ 0x40
 80018b8:	4b20      	ldr	r3, [pc, #128]	@ (800193c <SetSysClock+0x94>)
 80018ba:	681b      	ldr	r3, [r3, #0]
 80018bc:	4a1f      	ldr	r2, [pc, #124]	@ (800193c <SetSysClock+0x94>)
 80018be:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80018c2:	6013      	str	r3, [r2, #0]
 80018c4:	4b1c      	ldr	r3, [pc, #112]	@ (8001938 <SetSysClock+0x90>)
 80018c6:	4a1c      	ldr	r2, [pc, #112]	@ (8001938 <SetSysClock+0x90>)
 80018c8:	689b      	ldr	r3, [r3, #8]
 80018ca:	6093      	str	r3, [r2, #8]
 80018cc:	4b1a      	ldr	r3, [pc, #104]	@ (8001938 <SetSysClock+0x90>)
 80018ce:	4a1a      	ldr	r2, [pc, #104]	@ (8001938 <SetSysClock+0x90>)
 80018d0:	689b      	ldr	r3, [r3, #8]
 80018d2:	6093      	str	r3, [r2, #8]
 80018d4:	4b18      	ldr	r3, [pc, #96]	@ (8001938 <SetSysClock+0x90>)
 80018d6:	689b      	ldr	r3, [r3, #8]
 80018d8:	4a17      	ldr	r2, [pc, #92]	@ (8001938 <SetSysClock+0x90>)
 80018da:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80018de:	6093      	str	r3, [r2, #8]
 80018e0:	4b15      	ldr	r3, [pc, #84]	@ (8001938 <SetSysClock+0x90>)
 80018e2:	4a17      	ldr	r2, [pc, #92]	@ (8001940 <SetSysClock+0x98>)
 80018e4:	605a      	str	r2, [r3, #4]
 80018e6:	4b14      	ldr	r3, [pc, #80]	@ (8001938 <SetSysClock+0x90>)
 80018e8:	681b      	ldr	r3, [r3, #0]
 80018ea:	4a13      	ldr	r2, [pc, #76]	@ (8001938 <SetSysClock+0x90>)
 80018ec:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80018f0:	6013      	str	r3, [r2, #0]
 80018f2:	bf00      	nop
 80018f4:	4b10      	ldr	r3, [pc, #64]	@ (8001938 <SetSysClock+0x90>)
 80018f6:	681b      	ldr	r3, [r3, #0]
 80018f8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80018fc:	2b00      	cmp	r3, #0
 80018fe:	d0f9      	beq.n	80018f4 <SetSysClock+0x4c>
 8001900:	4b10      	ldr	r3, [pc, #64]	@ (8001944 <SetSysClock+0x9c>)
 8001902:	f240 6202 	movw	r2, #1538	@ 0x602
 8001906:	601a      	str	r2, [r3, #0]
 8001908:	4b0b      	ldr	r3, [pc, #44]	@ (8001938 <SetSysClock+0x90>)
 800190a:	689b      	ldr	r3, [r3, #8]
 800190c:	4a0a      	ldr	r2, [pc, #40]	@ (8001938 <SetSysClock+0x90>)
 800190e:	f023 0303 	bic.w	r3, r3, #3
 8001912:	6093      	str	r3, [r2, #8]
 8001914:	4b08      	ldr	r3, [pc, #32]	@ (8001938 <SetSysClock+0x90>)
 8001916:	689b      	ldr	r3, [r3, #8]
 8001918:	4a07      	ldr	r2, [pc, #28]	@ (8001938 <SetSysClock+0x90>)
 800191a:	f043 0302 	orr.w	r3, r3, #2
 800191e:	6093      	str	r3, [r2, #8]
 8001920:	bf00      	nop
 8001922:	4b05      	ldr	r3, [pc, #20]	@ (8001938 <SetSysClock+0x90>)
 8001924:	689b      	ldr	r3, [r3, #8]
 8001926:	f003 030c 	and.w	r3, r3, #12
 800192a:	2b08      	cmp	r3, #8
 800192c:	d1f9      	bne.n	8001922 <SetSysClock+0x7a>
 800192e:	bf00      	nop
 8001930:	46bd      	mov	sp, r7
 8001932:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001936:	4770      	bx	lr
 8001938:	40023800 	.word	0x40023800
 800193c:	40007000 	.word	0x40007000
 8001940:	08015410 	.word	0x08015410
 8001944:	40023c00 	.word	0x40023c00

08001948 <NVIC_PriorityGroupConfig>:
 8001948:	b480      	push	{r7}
 800194a:	b083      	sub	sp, #12
 800194c:	af00      	add	r7, sp, #0
 800194e:	6078      	str	r0, [r7, #4]
 8001950:	4a06      	ldr	r2, [pc, #24]	@ (800196c <NVIC_PriorityGroupConfig+0x24>)
 8001952:	687b      	ldr	r3, [r7, #4]
 8001954:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8001958:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800195c:	60d3      	str	r3, [r2, #12]
 800195e:	bf00      	nop
 8001960:	370c      	adds	r7, #12
 8001962:	46bd      	mov	sp, r7
 8001964:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001968:	4770      	bx	lr
 800196a:	bf00      	nop
 800196c:	e000ed00 	.word	0xe000ed00

08001970 <NVIC_Init>:
 8001970:	b480      	push	{r7}
 8001972:	b085      	sub	sp, #20
 8001974:	af00      	add	r7, sp, #0
 8001976:	6078      	str	r0, [r7, #4]
 8001978:	2300      	movs	r3, #0
 800197a:	73fb      	strb	r3, [r7, #15]
 800197c:	2300      	movs	r3, #0
 800197e:	73bb      	strb	r3, [r7, #14]
 8001980:	230f      	movs	r3, #15
 8001982:	737b      	strb	r3, [r7, #13]
 8001984:	687b      	ldr	r3, [r7, #4]
 8001986:	78db      	ldrb	r3, [r3, #3]
 8001988:	2b00      	cmp	r3, #0
 800198a:	d039      	beq.n	8001a00 <NVIC_Init+0x90>
 800198c:	4b27      	ldr	r3, [pc, #156]	@ (8001a2c <NVIC_Init+0xbc>)
 800198e:	68db      	ldr	r3, [r3, #12]
 8001990:	43db      	mvns	r3, r3
 8001992:	0a1b      	lsrs	r3, r3, #8
 8001994:	b2db      	uxtb	r3, r3
 8001996:	f003 0307 	and.w	r3, r3, #7
 800199a:	73fb      	strb	r3, [r7, #15]
 800199c:	7bfb      	ldrb	r3, [r7, #15]
 800199e:	f1c3 0304 	rsb	r3, r3, #4
 80019a2:	73bb      	strb	r3, [r7, #14]
 80019a4:	7b7a      	ldrb	r2, [r7, #13]
 80019a6:	7bfb      	ldrb	r3, [r7, #15]
 80019a8:	fa42 f303 	asr.w	r3, r2, r3
 80019ac:	737b      	strb	r3, [r7, #13]
 80019ae:	687b      	ldr	r3, [r7, #4]
 80019b0:	785b      	ldrb	r3, [r3, #1]
 80019b2:	461a      	mov	r2, r3
 80019b4:	7bbb      	ldrb	r3, [r7, #14]
 80019b6:	fa02 f303 	lsl.w	r3, r2, r3
 80019ba:	73fb      	strb	r3, [r7, #15]
 80019bc:	687b      	ldr	r3, [r7, #4]
 80019be:	789a      	ldrb	r2, [r3, #2]
 80019c0:	7b7b      	ldrb	r3, [r7, #13]
 80019c2:	4013      	ands	r3, r2
 80019c4:	b2da      	uxtb	r2, r3
 80019c6:	7bfb      	ldrb	r3, [r7, #15]
 80019c8:	4313      	orrs	r3, r2
 80019ca:	73fb      	strb	r3, [r7, #15]
 80019cc:	7bfb      	ldrb	r3, [r7, #15]
 80019ce:	011b      	lsls	r3, r3, #4
 80019d0:	73fb      	strb	r3, [r7, #15]
 80019d2:	4a17      	ldr	r2, [pc, #92]	@ (8001a30 <NVIC_Init+0xc0>)
 80019d4:	687b      	ldr	r3, [r7, #4]
 80019d6:	781b      	ldrb	r3, [r3, #0]
 80019d8:	4413      	add	r3, r2
 80019da:	7bfa      	ldrb	r2, [r7, #15]
 80019dc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80019e0:	687b      	ldr	r3, [r7, #4]
 80019e2:	781b      	ldrb	r3, [r3, #0]
 80019e4:	f003 031f 	and.w	r3, r3, #31
 80019e8:	4911      	ldr	r1, [pc, #68]	@ (8001a30 <NVIC_Init+0xc0>)
 80019ea:	687a      	ldr	r2, [r7, #4]
 80019ec:	7812      	ldrb	r2, [r2, #0]
 80019ee:	0952      	lsrs	r2, r2, #5
 80019f0:	b2d2      	uxtb	r2, r2
 80019f2:	4610      	mov	r0, r2
 80019f4:	2201      	movs	r2, #1
 80019f6:	fa02 f303 	lsl.w	r3, r2, r3
 80019fa:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 80019fe:	e00f      	b.n	8001a20 <NVIC_Init+0xb0>
 8001a00:	687b      	ldr	r3, [r7, #4]
 8001a02:	781b      	ldrb	r3, [r3, #0]
 8001a04:	f003 031f 	and.w	r3, r3, #31
 8001a08:	4909      	ldr	r1, [pc, #36]	@ (8001a30 <NVIC_Init+0xc0>)
 8001a0a:	687a      	ldr	r2, [r7, #4]
 8001a0c:	7812      	ldrb	r2, [r2, #0]
 8001a0e:	0952      	lsrs	r2, r2, #5
 8001a10:	b2d2      	uxtb	r2, r2
 8001a12:	4610      	mov	r0, r2
 8001a14:	2201      	movs	r2, #1
 8001a16:	409a      	lsls	r2, r3
 8001a18:	f100 0320 	add.w	r3, r0, #32
 8001a1c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8001a20:	bf00      	nop
 8001a22:	3714      	adds	r7, #20
 8001a24:	46bd      	mov	sp, r7
 8001a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001a2a:	4770      	bx	lr
 8001a2c:	e000ed00 	.word	0xe000ed00
 8001a30:	e000e100 	.word	0xe000e100

08001a34 <GPIO_Init>:
 8001a34:	b480      	push	{r7}
 8001a36:	b087      	sub	sp, #28
 8001a38:	af00      	add	r7, sp, #0
 8001a3a:	6078      	str	r0, [r7, #4]
 8001a3c:	6039      	str	r1, [r7, #0]
 8001a3e:	2300      	movs	r3, #0
 8001a40:	617b      	str	r3, [r7, #20]
 8001a42:	2300      	movs	r3, #0
 8001a44:	613b      	str	r3, [r7, #16]
 8001a46:	2300      	movs	r3, #0
 8001a48:	60fb      	str	r3, [r7, #12]
 8001a4a:	2300      	movs	r3, #0
 8001a4c:	617b      	str	r3, [r7, #20]
 8001a4e:	e076      	b.n	8001b3e <GPIO_Init+0x10a>
 8001a50:	2201      	movs	r2, #1
 8001a52:	697b      	ldr	r3, [r7, #20]
 8001a54:	fa02 f303 	lsl.w	r3, r2, r3
 8001a58:	613b      	str	r3, [r7, #16]
 8001a5a:	683b      	ldr	r3, [r7, #0]
 8001a5c:	681b      	ldr	r3, [r3, #0]
 8001a5e:	693a      	ldr	r2, [r7, #16]
 8001a60:	4013      	ands	r3, r2
 8001a62:	60fb      	str	r3, [r7, #12]
 8001a64:	68fa      	ldr	r2, [r7, #12]
 8001a66:	693b      	ldr	r3, [r7, #16]
 8001a68:	429a      	cmp	r2, r3
 8001a6a:	d165      	bne.n	8001b38 <GPIO_Init+0x104>
 8001a6c:	687b      	ldr	r3, [r7, #4]
 8001a6e:	681a      	ldr	r2, [r3, #0]
 8001a70:	697b      	ldr	r3, [r7, #20]
 8001a72:	005b      	lsls	r3, r3, #1
 8001a74:	2103      	movs	r1, #3
 8001a76:	fa01 f303 	lsl.w	r3, r1, r3
 8001a7a:	43db      	mvns	r3, r3
 8001a7c:	401a      	ands	r2, r3
 8001a7e:	687b      	ldr	r3, [r7, #4]
 8001a80:	601a      	str	r2, [r3, #0]
 8001a82:	687b      	ldr	r3, [r7, #4]
 8001a84:	681a      	ldr	r2, [r3, #0]
 8001a86:	683b      	ldr	r3, [r7, #0]
 8001a88:	791b      	ldrb	r3, [r3, #4]
 8001a8a:	4619      	mov	r1, r3
 8001a8c:	697b      	ldr	r3, [r7, #20]
 8001a8e:	005b      	lsls	r3, r3, #1
 8001a90:	fa01 f303 	lsl.w	r3, r1, r3
 8001a94:	431a      	orrs	r2, r3
 8001a96:	687b      	ldr	r3, [r7, #4]
 8001a98:	601a      	str	r2, [r3, #0]
 8001a9a:	683b      	ldr	r3, [r7, #0]
 8001a9c:	791b      	ldrb	r3, [r3, #4]
 8001a9e:	2b01      	cmp	r3, #1
 8001aa0:	d003      	beq.n	8001aaa <GPIO_Init+0x76>
 8001aa2:	683b      	ldr	r3, [r7, #0]
 8001aa4:	791b      	ldrb	r3, [r3, #4]
 8001aa6:	2b02      	cmp	r3, #2
 8001aa8:	d12e      	bne.n	8001b08 <GPIO_Init+0xd4>
 8001aaa:	687b      	ldr	r3, [r7, #4]
 8001aac:	689a      	ldr	r2, [r3, #8]
 8001aae:	697b      	ldr	r3, [r7, #20]
 8001ab0:	005b      	lsls	r3, r3, #1
 8001ab2:	2103      	movs	r1, #3
 8001ab4:	fa01 f303 	lsl.w	r3, r1, r3
 8001ab8:	43db      	mvns	r3, r3
 8001aba:	401a      	ands	r2, r3
 8001abc:	687b      	ldr	r3, [r7, #4]
 8001abe:	609a      	str	r2, [r3, #8]
 8001ac0:	687b      	ldr	r3, [r7, #4]
 8001ac2:	689a      	ldr	r2, [r3, #8]
 8001ac4:	683b      	ldr	r3, [r7, #0]
 8001ac6:	795b      	ldrb	r3, [r3, #5]
 8001ac8:	4619      	mov	r1, r3
 8001aca:	697b      	ldr	r3, [r7, #20]
 8001acc:	005b      	lsls	r3, r3, #1
 8001ace:	fa01 f303 	lsl.w	r3, r1, r3
 8001ad2:	431a      	orrs	r2, r3
 8001ad4:	687b      	ldr	r3, [r7, #4]
 8001ad6:	609a      	str	r2, [r3, #8]
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	685a      	ldr	r2, [r3, #4]
 8001adc:	697b      	ldr	r3, [r7, #20]
 8001ade:	b29b      	uxth	r3, r3
 8001ae0:	4619      	mov	r1, r3
 8001ae2:	2301      	movs	r3, #1
 8001ae4:	408b      	lsls	r3, r1
 8001ae6:	43db      	mvns	r3, r3
 8001ae8:	401a      	ands	r2, r3
 8001aea:	687b      	ldr	r3, [r7, #4]
 8001aec:	605a      	str	r2, [r3, #4]
 8001aee:	687b      	ldr	r3, [r7, #4]
 8001af0:	685b      	ldr	r3, [r3, #4]
 8001af2:	683a      	ldr	r2, [r7, #0]
 8001af4:	7992      	ldrb	r2, [r2, #6]
 8001af6:	4611      	mov	r1, r2
 8001af8:	697a      	ldr	r2, [r7, #20]
 8001afa:	b292      	uxth	r2, r2
 8001afc:	fa01 f202 	lsl.w	r2, r1, r2
 8001b00:	b292      	uxth	r2, r2
 8001b02:	431a      	orrs	r2, r3
 8001b04:	687b      	ldr	r3, [r7, #4]
 8001b06:	605a      	str	r2, [r3, #4]
 8001b08:	687b      	ldr	r3, [r7, #4]
 8001b0a:	68da      	ldr	r2, [r3, #12]
 8001b0c:	697b      	ldr	r3, [r7, #20]
 8001b0e:	b29b      	uxth	r3, r3
 8001b10:	005b      	lsls	r3, r3, #1
 8001b12:	2103      	movs	r1, #3
 8001b14:	fa01 f303 	lsl.w	r3, r1, r3
 8001b18:	43db      	mvns	r3, r3
 8001b1a:	401a      	ands	r2, r3
 8001b1c:	687b      	ldr	r3, [r7, #4]
 8001b1e:	60da      	str	r2, [r3, #12]
 8001b20:	687b      	ldr	r3, [r7, #4]
 8001b22:	68da      	ldr	r2, [r3, #12]
 8001b24:	683b      	ldr	r3, [r7, #0]
 8001b26:	79db      	ldrb	r3, [r3, #7]
 8001b28:	4619      	mov	r1, r3
 8001b2a:	697b      	ldr	r3, [r7, #20]
 8001b2c:	005b      	lsls	r3, r3, #1
 8001b2e:	fa01 f303 	lsl.w	r3, r1, r3
 8001b32:	431a      	orrs	r2, r3
 8001b34:	687b      	ldr	r3, [r7, #4]
 8001b36:	60da      	str	r2, [r3, #12]
 8001b38:	697b      	ldr	r3, [r7, #20]
 8001b3a:	3301      	adds	r3, #1
 8001b3c:	617b      	str	r3, [r7, #20]
 8001b3e:	697b      	ldr	r3, [r7, #20]
 8001b40:	2b0f      	cmp	r3, #15
 8001b42:	d985      	bls.n	8001a50 <GPIO_Init+0x1c>
 8001b44:	bf00      	nop
 8001b46:	371c      	adds	r7, #28
 8001b48:	46bd      	mov	sp, r7
 8001b4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b4e:	4770      	bx	lr

08001b50 <GPIO_ReadInputDataBit>:
 8001b50:	b480      	push	{r7}
 8001b52:	b085      	sub	sp, #20
 8001b54:	af00      	add	r7, sp, #0
 8001b56:	6078      	str	r0, [r7, #4]
 8001b58:	460b      	mov	r3, r1
 8001b5a:	807b      	strh	r3, [r7, #2]
 8001b5c:	2300      	movs	r3, #0
 8001b5e:	73fb      	strb	r3, [r7, #15]
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	691a      	ldr	r2, [r3, #16]
 8001b64:	887b      	ldrh	r3, [r7, #2]
 8001b66:	4013      	ands	r3, r2
 8001b68:	2b00      	cmp	r3, #0
 8001b6a:	d002      	beq.n	8001b72 <GPIO_ReadInputDataBit+0x22>
 8001b6c:	2301      	movs	r3, #1
 8001b6e:	73fb      	strb	r3, [r7, #15]
 8001b70:	e001      	b.n	8001b76 <GPIO_ReadInputDataBit+0x26>
 8001b72:	2300      	movs	r3, #0
 8001b74:	73fb      	strb	r3, [r7, #15]
 8001b76:	7bfb      	ldrb	r3, [r7, #15]
 8001b78:	4618      	mov	r0, r3
 8001b7a:	3714      	adds	r7, #20
 8001b7c:	46bd      	mov	sp, r7
 8001b7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b82:	4770      	bx	lr

08001b84 <GPIO_WriteBit>:
 8001b84:	b480      	push	{r7}
 8001b86:	b083      	sub	sp, #12
 8001b88:	af00      	add	r7, sp, #0
 8001b8a:	6078      	str	r0, [r7, #4]
 8001b8c:	460b      	mov	r3, r1
 8001b8e:	807b      	strh	r3, [r7, #2]
 8001b90:	4613      	mov	r3, r2
 8001b92:	707b      	strb	r3, [r7, #1]
 8001b94:	787b      	ldrb	r3, [r7, #1]
 8001b96:	2b00      	cmp	r3, #0
 8001b98:	d003      	beq.n	8001ba2 <GPIO_WriteBit+0x1e>
 8001b9a:	687b      	ldr	r3, [r7, #4]
 8001b9c:	887a      	ldrh	r2, [r7, #2]
 8001b9e:	831a      	strh	r2, [r3, #24]
 8001ba0:	e002      	b.n	8001ba8 <GPIO_WriteBit+0x24>
 8001ba2:	687b      	ldr	r3, [r7, #4]
 8001ba4:	887a      	ldrh	r2, [r7, #2]
 8001ba6:	835a      	strh	r2, [r3, #26]
 8001ba8:	bf00      	nop
 8001baa:	370c      	adds	r7, #12
 8001bac:	46bd      	mov	sp, r7
 8001bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001bb2:	4770      	bx	lr

08001bb4 <GPIO_PinAFConfig>:
 8001bb4:	b480      	push	{r7}
 8001bb6:	b085      	sub	sp, #20
 8001bb8:	af00      	add	r7, sp, #0
 8001bba:	6078      	str	r0, [r7, #4]
 8001bbc:	460b      	mov	r3, r1
 8001bbe:	807b      	strh	r3, [r7, #2]
 8001bc0:	4613      	mov	r3, r2
 8001bc2:	707b      	strb	r3, [r7, #1]
 8001bc4:	2300      	movs	r3, #0
 8001bc6:	60fb      	str	r3, [r7, #12]
 8001bc8:	2300      	movs	r3, #0
 8001bca:	60bb      	str	r3, [r7, #8]
 8001bcc:	787a      	ldrb	r2, [r7, #1]
 8001bce:	887b      	ldrh	r3, [r7, #2]
 8001bd0:	f003 0307 	and.w	r3, r3, #7
 8001bd4:	009b      	lsls	r3, r3, #2
 8001bd6:	fa02 f303 	lsl.w	r3, r2, r3
 8001bda:	60fb      	str	r3, [r7, #12]
 8001bdc:	887b      	ldrh	r3, [r7, #2]
 8001bde:	08db      	lsrs	r3, r3, #3
 8001be0:	b29b      	uxth	r3, r3
 8001be2:	461a      	mov	r2, r3
 8001be4:	687b      	ldr	r3, [r7, #4]
 8001be6:	3208      	adds	r2, #8
 8001be8:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8001bec:	887b      	ldrh	r3, [r7, #2]
 8001bee:	f003 0307 	and.w	r3, r3, #7
 8001bf2:	009b      	lsls	r3, r3, #2
 8001bf4:	210f      	movs	r1, #15
 8001bf6:	fa01 f303 	lsl.w	r3, r1, r3
 8001bfa:	43db      	mvns	r3, r3
 8001bfc:	8879      	ldrh	r1, [r7, #2]
 8001bfe:	08c9      	lsrs	r1, r1, #3
 8001c00:	b289      	uxth	r1, r1
 8001c02:	4608      	mov	r0, r1
 8001c04:	ea02 0103 	and.w	r1, r2, r3
 8001c08:	687b      	ldr	r3, [r7, #4]
 8001c0a:	f100 0208 	add.w	r2, r0, #8
 8001c0e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001c12:	887b      	ldrh	r3, [r7, #2]
 8001c14:	08db      	lsrs	r3, r3, #3
 8001c16:	b29b      	uxth	r3, r3
 8001c18:	461a      	mov	r2, r3
 8001c1a:	687b      	ldr	r3, [r7, #4]
 8001c1c:	3208      	adds	r2, #8
 8001c1e:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8001c22:	68fa      	ldr	r2, [r7, #12]
 8001c24:	4313      	orrs	r3, r2
 8001c26:	60bb      	str	r3, [r7, #8]
 8001c28:	887b      	ldrh	r3, [r7, #2]
 8001c2a:	08db      	lsrs	r3, r3, #3
 8001c2c:	b29b      	uxth	r3, r3
 8001c2e:	461a      	mov	r2, r3
 8001c30:	687b      	ldr	r3, [r7, #4]
 8001c32:	3208      	adds	r2, #8
 8001c34:	68b9      	ldr	r1, [r7, #8]
 8001c36:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8001c3a:	bf00      	nop
 8001c3c:	3714      	adds	r7, #20
 8001c3e:	46bd      	mov	sp, r7
 8001c40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001c44:	4770      	bx	lr
	...

08001c48 <RCC_GetClocksFreq>:
 8001c48:	b480      	push	{r7}
 8001c4a:	b089      	sub	sp, #36	@ 0x24
 8001c4c:	af00      	add	r7, sp, #0
 8001c4e:	6078      	str	r0, [r7, #4]
 8001c50:	2300      	movs	r3, #0
 8001c52:	61bb      	str	r3, [r7, #24]
 8001c54:	2300      	movs	r3, #0
 8001c56:	617b      	str	r3, [r7, #20]
 8001c58:	2300      	movs	r3, #0
 8001c5a:	61fb      	str	r3, [r7, #28]
 8001c5c:	2302      	movs	r3, #2
 8001c5e:	613b      	str	r3, [r7, #16]
 8001c60:	2300      	movs	r3, #0
 8001c62:	60fb      	str	r3, [r7, #12]
 8001c64:	2302      	movs	r3, #2
 8001c66:	60bb      	str	r3, [r7, #8]
 8001c68:	4b47      	ldr	r3, [pc, #284]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001c6a:	689b      	ldr	r3, [r3, #8]
 8001c6c:	f003 030c 	and.w	r3, r3, #12
 8001c70:	61bb      	str	r3, [r7, #24]
 8001c72:	69bb      	ldr	r3, [r7, #24]
 8001c74:	2b04      	cmp	r3, #4
 8001c76:	d007      	beq.n	8001c88 <RCC_GetClocksFreq+0x40>
 8001c78:	2b08      	cmp	r3, #8
 8001c7a:	d009      	beq.n	8001c90 <RCC_GetClocksFreq+0x48>
 8001c7c:	2b00      	cmp	r3, #0
 8001c7e:	d13d      	bne.n	8001cfc <RCC_GetClocksFreq+0xb4>
 8001c80:	687b      	ldr	r3, [r7, #4]
 8001c82:	4a42      	ldr	r2, [pc, #264]	@ (8001d8c <RCC_GetClocksFreq+0x144>)
 8001c84:	601a      	str	r2, [r3, #0]
 8001c86:	e03d      	b.n	8001d04 <RCC_GetClocksFreq+0xbc>
 8001c88:	687b      	ldr	r3, [r7, #4]
 8001c8a:	4a41      	ldr	r2, [pc, #260]	@ (8001d90 <RCC_GetClocksFreq+0x148>)
 8001c8c:	601a      	str	r2, [r3, #0]
 8001c8e:	e039      	b.n	8001d04 <RCC_GetClocksFreq+0xbc>
 8001c90:	4b3d      	ldr	r3, [pc, #244]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001c92:	685b      	ldr	r3, [r3, #4]
 8001c94:	0d9b      	lsrs	r3, r3, #22
 8001c96:	f003 0301 	and.w	r3, r3, #1
 8001c9a:	60fb      	str	r3, [r7, #12]
 8001c9c:	4b3a      	ldr	r3, [pc, #232]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001c9e:	685b      	ldr	r3, [r3, #4]
 8001ca0:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8001ca4:	60bb      	str	r3, [r7, #8]
 8001ca6:	68fb      	ldr	r3, [r7, #12]
 8001ca8:	2b00      	cmp	r3, #0
 8001caa:	d00c      	beq.n	8001cc6 <RCC_GetClocksFreq+0x7e>
 8001cac:	4a38      	ldr	r2, [pc, #224]	@ (8001d90 <RCC_GetClocksFreq+0x148>)
 8001cae:	68bb      	ldr	r3, [r7, #8]
 8001cb0:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cb4:	4a34      	ldr	r2, [pc, #208]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001cb6:	6852      	ldr	r2, [r2, #4]
 8001cb8:	0992      	lsrs	r2, r2, #6
 8001cba:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001cbe:	fb02 f303 	mul.w	r3, r2, r3
 8001cc2:	61fb      	str	r3, [r7, #28]
 8001cc4:	e00b      	b.n	8001cde <RCC_GetClocksFreq+0x96>
 8001cc6:	4a31      	ldr	r2, [pc, #196]	@ (8001d8c <RCC_GetClocksFreq+0x144>)
 8001cc8:	68bb      	ldr	r3, [r7, #8]
 8001cca:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cce:	4a2e      	ldr	r2, [pc, #184]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001cd0:	6852      	ldr	r2, [r2, #4]
 8001cd2:	0992      	lsrs	r2, r2, #6
 8001cd4:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8001cd8:	fb02 f303 	mul.w	r3, r2, r3
 8001cdc:	61fb      	str	r3, [r7, #28]
 8001cde:	4b2a      	ldr	r3, [pc, #168]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001ce0:	685b      	ldr	r3, [r3, #4]
 8001ce2:	0c1b      	lsrs	r3, r3, #16
 8001ce4:	f003 0303 	and.w	r3, r3, #3
 8001ce8:	3301      	adds	r3, #1
 8001cea:	005b      	lsls	r3, r3, #1
 8001cec:	613b      	str	r3, [r7, #16]
 8001cee:	69fa      	ldr	r2, [r7, #28]
 8001cf0:	693b      	ldr	r3, [r7, #16]
 8001cf2:	fbb2 f2f3 	udiv	r2, r2, r3
 8001cf6:	687b      	ldr	r3, [r7, #4]
 8001cf8:	601a      	str	r2, [r3, #0]
 8001cfa:	e003      	b.n	8001d04 <RCC_GetClocksFreq+0xbc>
 8001cfc:	687b      	ldr	r3, [r7, #4]
 8001cfe:	4a23      	ldr	r2, [pc, #140]	@ (8001d8c <RCC_GetClocksFreq+0x144>)
 8001d00:	601a      	str	r2, [r3, #0]
 8001d02:	bf00      	nop
 8001d04:	4b20      	ldr	r3, [pc, #128]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001d06:	689b      	ldr	r3, [r3, #8]
 8001d08:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8001d0c:	61bb      	str	r3, [r7, #24]
 8001d0e:	69bb      	ldr	r3, [r7, #24]
 8001d10:	091b      	lsrs	r3, r3, #4
 8001d12:	61bb      	str	r3, [r7, #24]
 8001d14:	4a1f      	ldr	r2, [pc, #124]	@ (8001d94 <RCC_GetClocksFreq+0x14c>)
 8001d16:	69bb      	ldr	r3, [r7, #24]
 8001d18:	4413      	add	r3, r2
 8001d1a:	781b      	ldrb	r3, [r3, #0]
 8001d1c:	b2db      	uxtb	r3, r3
 8001d1e:	617b      	str	r3, [r7, #20]
 8001d20:	687b      	ldr	r3, [r7, #4]
 8001d22:	681a      	ldr	r2, [r3, #0]
 8001d24:	697b      	ldr	r3, [r7, #20]
 8001d26:	40da      	lsrs	r2, r3
 8001d28:	687b      	ldr	r3, [r7, #4]
 8001d2a:	605a      	str	r2, [r3, #4]
 8001d2c:	4b16      	ldr	r3, [pc, #88]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001d2e:	689b      	ldr	r3, [r3, #8]
 8001d30:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8001d34:	61bb      	str	r3, [r7, #24]
 8001d36:	69bb      	ldr	r3, [r7, #24]
 8001d38:	0a9b      	lsrs	r3, r3, #10
 8001d3a:	61bb      	str	r3, [r7, #24]
 8001d3c:	4a15      	ldr	r2, [pc, #84]	@ (8001d94 <RCC_GetClocksFreq+0x14c>)
 8001d3e:	69bb      	ldr	r3, [r7, #24]
 8001d40:	4413      	add	r3, r2
 8001d42:	781b      	ldrb	r3, [r3, #0]
 8001d44:	b2db      	uxtb	r3, r3
 8001d46:	617b      	str	r3, [r7, #20]
 8001d48:	687b      	ldr	r3, [r7, #4]
 8001d4a:	685a      	ldr	r2, [r3, #4]
 8001d4c:	697b      	ldr	r3, [r7, #20]
 8001d4e:	40da      	lsrs	r2, r3
 8001d50:	687b      	ldr	r3, [r7, #4]
 8001d52:	609a      	str	r2, [r3, #8]
 8001d54:	4b0c      	ldr	r3, [pc, #48]	@ (8001d88 <RCC_GetClocksFreq+0x140>)
 8001d56:	689b      	ldr	r3, [r3, #8]
 8001d58:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8001d5c:	61bb      	str	r3, [r7, #24]
 8001d5e:	69bb      	ldr	r3, [r7, #24]
 8001d60:	0b5b      	lsrs	r3, r3, #13
 8001d62:	61bb      	str	r3, [r7, #24]
 8001d64:	4a0b      	ldr	r2, [pc, #44]	@ (8001d94 <RCC_GetClocksFreq+0x14c>)
 8001d66:	69bb      	ldr	r3, [r7, #24]
 8001d68:	4413      	add	r3, r2
 8001d6a:	781b      	ldrb	r3, [r3, #0]
 8001d6c:	b2db      	uxtb	r3, r3
 8001d6e:	617b      	str	r3, [r7, #20]
 8001d70:	687b      	ldr	r3, [r7, #4]
 8001d72:	685a      	ldr	r2, [r3, #4]
 8001d74:	697b      	ldr	r3, [r7, #20]
 8001d76:	40da      	lsrs	r2, r3
 8001d78:	687b      	ldr	r3, [r7, #4]
 8001d7a:	60da      	str	r2, [r3, #12]
 8001d7c:	bf00      	nop
 8001d7e:	3724      	adds	r7, #36	@ 0x24
 8001d80:	46bd      	mov	sp, r7
 8001d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d86:	4770      	bx	lr
 8001d88:	40023800 	.word	0x40023800
 8001d8c:	00f42400 	.word	0x00f42400
 8001d90:	017d7840 	.word	0x017d7840
 8001d94:	20000038 	.word	0x20000038

08001d98 <RCC_AHB1PeriphClockCmd>:
 8001d98:	b480      	push	{r7}
 8001d9a:	b083      	sub	sp, #12
 8001d9c:	af00      	add	r7, sp, #0
 8001d9e:	6078      	str	r0, [r7, #4]
 8001da0:	460b      	mov	r3, r1
 8001da2:	70fb      	strb	r3, [r7, #3]
 8001da4:	78fb      	ldrb	r3, [r7, #3]
 8001da6:	2b00      	cmp	r3, #0
 8001da8:	d006      	beq.n	8001db8 <RCC_AHB1PeriphClockCmd+0x20>
 8001daa:	4b0a      	ldr	r3, [pc, #40]	@ (8001dd4 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001dac:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001dae:	4909      	ldr	r1, [pc, #36]	@ (8001dd4 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001db0:	687b      	ldr	r3, [r7, #4]
 8001db2:	4313      	orrs	r3, r2
 8001db4:	630b      	str	r3, [r1, #48]	@ 0x30
 8001db6:	e006      	b.n	8001dc6 <RCC_AHB1PeriphClockCmd+0x2e>
 8001db8:	4b06      	ldr	r3, [pc, #24]	@ (8001dd4 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001dba:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8001dbc:	687b      	ldr	r3, [r7, #4]
 8001dbe:	43db      	mvns	r3, r3
 8001dc0:	4904      	ldr	r1, [pc, #16]	@ (8001dd4 <RCC_AHB1PeriphClockCmd+0x3c>)
 8001dc2:	4013      	ands	r3, r2
 8001dc4:	630b      	str	r3, [r1, #48]	@ 0x30
 8001dc6:	bf00      	nop
 8001dc8:	370c      	adds	r7, #12
 8001dca:	46bd      	mov	sp, r7
 8001dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dd0:	4770      	bx	lr
 8001dd2:	bf00      	nop
 8001dd4:	40023800 	.word	0x40023800

08001dd8 <RCC_APB2PeriphClockCmd>:
 8001dd8:	b480      	push	{r7}
 8001dda:	b083      	sub	sp, #12
 8001ddc:	af00      	add	r7, sp, #0
 8001dde:	6078      	str	r0, [r7, #4]
 8001de0:	460b      	mov	r3, r1
 8001de2:	70fb      	strb	r3, [r7, #3]
 8001de4:	78fb      	ldrb	r3, [r7, #3]
 8001de6:	2b00      	cmp	r3, #0
 8001de8:	d006      	beq.n	8001df8 <RCC_APB2PeriphClockCmd+0x20>
 8001dea:	4b0a      	ldr	r3, [pc, #40]	@ (8001e14 <RCC_APB2PeriphClockCmd+0x3c>)
 8001dec:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001dee:	4909      	ldr	r1, [pc, #36]	@ (8001e14 <RCC_APB2PeriphClockCmd+0x3c>)
 8001df0:	687b      	ldr	r3, [r7, #4]
 8001df2:	4313      	orrs	r3, r2
 8001df4:	644b      	str	r3, [r1, #68]	@ 0x44
 8001df6:	e006      	b.n	8001e06 <RCC_APB2PeriphClockCmd+0x2e>
 8001df8:	4b06      	ldr	r3, [pc, #24]	@ (8001e14 <RCC_APB2PeriphClockCmd+0x3c>)
 8001dfa:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8001dfc:	687b      	ldr	r3, [r7, #4]
 8001dfe:	43db      	mvns	r3, r3
 8001e00:	4904      	ldr	r1, [pc, #16]	@ (8001e14 <RCC_APB2PeriphClockCmd+0x3c>)
 8001e02:	4013      	ands	r3, r2
 8001e04:	644b      	str	r3, [r1, #68]	@ 0x44
 8001e06:	bf00      	nop
 8001e08:	370c      	adds	r7, #12
 8001e0a:	46bd      	mov	sp, r7
 8001e0c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e10:	4770      	bx	lr
 8001e12:	bf00      	nop
 8001e14:	40023800 	.word	0x40023800

08001e18 <USART_Init>:
 8001e18:	b580      	push	{r7, lr}
 8001e1a:	b08a      	sub	sp, #40	@ 0x28
 8001e1c:	af00      	add	r7, sp, #0
 8001e1e:	6078      	str	r0, [r7, #4]
 8001e20:	6039      	str	r1, [r7, #0]
 8001e22:	2300      	movs	r3, #0
 8001e24:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e26:	2300      	movs	r3, #0
 8001e28:	623b      	str	r3, [r7, #32]
 8001e2a:	2300      	movs	r3, #0
 8001e2c:	61fb      	str	r3, [r7, #28]
 8001e2e:	2300      	movs	r3, #0
 8001e30:	61bb      	str	r3, [r7, #24]
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	8a1b      	ldrh	r3, [r3, #16]
 8001e36:	b29b      	uxth	r3, r3
 8001e38:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e3a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e3c:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8001e40:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e42:	683b      	ldr	r3, [r7, #0]
 8001e44:	88db      	ldrh	r3, [r3, #6]
 8001e46:	461a      	mov	r2, r3
 8001e48:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e4a:	4313      	orrs	r3, r2
 8001e4c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e4e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e50:	b29a      	uxth	r2, r3
 8001e52:	687b      	ldr	r3, [r7, #4]
 8001e54:	821a      	strh	r2, [r3, #16]
 8001e56:	687b      	ldr	r3, [r7, #4]
 8001e58:	899b      	ldrh	r3, [r3, #12]
 8001e5a:	b29b      	uxth	r3, r3
 8001e5c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e5e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e60:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8001e64:	f023 030c 	bic.w	r3, r3, #12
 8001e68:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e6a:	683b      	ldr	r3, [r7, #0]
 8001e6c:	889a      	ldrh	r2, [r3, #4]
 8001e6e:	683b      	ldr	r3, [r7, #0]
 8001e70:	891b      	ldrh	r3, [r3, #8]
 8001e72:	4313      	orrs	r3, r2
 8001e74:	b29a      	uxth	r2, r3
 8001e76:	683b      	ldr	r3, [r7, #0]
 8001e78:	895b      	ldrh	r3, [r3, #10]
 8001e7a:	4313      	orrs	r3, r2
 8001e7c:	b29b      	uxth	r3, r3
 8001e7e:	461a      	mov	r2, r3
 8001e80:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e82:	4313      	orrs	r3, r2
 8001e84:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e86:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e88:	b29a      	uxth	r2, r3
 8001e8a:	687b      	ldr	r3, [r7, #4]
 8001e8c:	819a      	strh	r2, [r3, #12]
 8001e8e:	687b      	ldr	r3, [r7, #4]
 8001e90:	8a9b      	ldrh	r3, [r3, #20]
 8001e92:	b29b      	uxth	r3, r3
 8001e94:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e96:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001e98:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8001e9c:	627b      	str	r3, [r7, #36]	@ 0x24
 8001e9e:	683b      	ldr	r3, [r7, #0]
 8001ea0:	899b      	ldrh	r3, [r3, #12]
 8001ea2:	461a      	mov	r2, r3
 8001ea4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001ea6:	4313      	orrs	r3, r2
 8001ea8:	627b      	str	r3, [r7, #36]	@ 0x24
 8001eaa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001eac:	b29a      	uxth	r2, r3
 8001eae:	687b      	ldr	r3, [r7, #4]
 8001eb0:	829a      	strh	r2, [r3, #20]
 8001eb2:	f107 0308 	add.w	r3, r7, #8
 8001eb6:	4618      	mov	r0, r3
 8001eb8:	f7ff fec6 	bl	8001c48 <RCC_GetClocksFreq>
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	4a30      	ldr	r2, [pc, #192]	@ (8001f80 <USART_Init+0x168>)
 8001ec0:	4293      	cmp	r3, r2
 8001ec2:	d003      	beq.n	8001ecc <USART_Init+0xb4>
 8001ec4:	687b      	ldr	r3, [r7, #4]
 8001ec6:	4a2f      	ldr	r2, [pc, #188]	@ (8001f84 <USART_Init+0x16c>)
 8001ec8:	4293      	cmp	r3, r2
 8001eca:	d102      	bne.n	8001ed2 <USART_Init+0xba>
 8001ecc:	697b      	ldr	r3, [r7, #20]
 8001ece:	623b      	str	r3, [r7, #32]
 8001ed0:	e001      	b.n	8001ed6 <USART_Init+0xbe>
 8001ed2:	693b      	ldr	r3, [r7, #16]
 8001ed4:	623b      	str	r3, [r7, #32]
 8001ed6:	687b      	ldr	r3, [r7, #4]
 8001ed8:	899b      	ldrh	r3, [r3, #12]
 8001eda:	b29b      	uxth	r3, r3
 8001edc:	b21b      	sxth	r3, r3
 8001ede:	2b00      	cmp	r3, #0
 8001ee0:	da0c      	bge.n	8001efc <USART_Init+0xe4>
 8001ee2:	6a3a      	ldr	r2, [r7, #32]
 8001ee4:	4613      	mov	r3, r2
 8001ee6:	009b      	lsls	r3, r3, #2
 8001ee8:	4413      	add	r3, r2
 8001eea:	009a      	lsls	r2, r3, #2
 8001eec:	441a      	add	r2, r3
 8001eee:	683b      	ldr	r3, [r7, #0]
 8001ef0:	681b      	ldr	r3, [r3, #0]
 8001ef2:	005b      	lsls	r3, r3, #1
 8001ef4:	fbb2 f3f3 	udiv	r3, r2, r3
 8001ef8:	61fb      	str	r3, [r7, #28]
 8001efa:	e00b      	b.n	8001f14 <USART_Init+0xfc>
 8001efc:	6a3a      	ldr	r2, [r7, #32]
 8001efe:	4613      	mov	r3, r2
 8001f00:	009b      	lsls	r3, r3, #2
 8001f02:	4413      	add	r3, r2
 8001f04:	009a      	lsls	r2, r3, #2
 8001f06:	441a      	add	r2, r3
 8001f08:	683b      	ldr	r3, [r7, #0]
 8001f0a:	681b      	ldr	r3, [r3, #0]
 8001f0c:	009b      	lsls	r3, r3, #2
 8001f0e:	fbb2 f3f3 	udiv	r3, r2, r3
 8001f12:	61fb      	str	r3, [r7, #28]
 8001f14:	69fb      	ldr	r3, [r7, #28]
 8001f16:	4a1c      	ldr	r2, [pc, #112]	@ (8001f88 <USART_Init+0x170>)
 8001f18:	fba2 2303 	umull	r2, r3, r2, r3
 8001f1c:	095b      	lsrs	r3, r3, #5
 8001f1e:	011b      	lsls	r3, r3, #4
 8001f20:	627b      	str	r3, [r7, #36]	@ 0x24
 8001f22:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001f24:	091b      	lsrs	r3, r3, #4
 8001f26:	2264      	movs	r2, #100	@ 0x64
 8001f28:	fb02 f303 	mul.w	r3, r2, r3
 8001f2c:	69fa      	ldr	r2, [r7, #28]
 8001f2e:	1ad3      	subs	r3, r2, r3
 8001f30:	61bb      	str	r3, [r7, #24]
 8001f32:	687b      	ldr	r3, [r7, #4]
 8001f34:	899b      	ldrh	r3, [r3, #12]
 8001f36:	b29b      	uxth	r3, r3
 8001f38:	b21b      	sxth	r3, r3
 8001f3a:	2b00      	cmp	r3, #0
 8001f3c:	da0c      	bge.n	8001f58 <USART_Init+0x140>
 8001f3e:	69bb      	ldr	r3, [r7, #24]
 8001f40:	00db      	lsls	r3, r3, #3
 8001f42:	3332      	adds	r3, #50	@ 0x32
 8001f44:	4a10      	ldr	r2, [pc, #64]	@ (8001f88 <USART_Init+0x170>)
 8001f46:	fba2 2303 	umull	r2, r3, r2, r3
 8001f4a:	095b      	lsrs	r3, r3, #5
 8001f4c:	f003 0307 	and.w	r3, r3, #7
 8001f50:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001f52:	4313      	orrs	r3, r2
 8001f54:	627b      	str	r3, [r7, #36]	@ 0x24
 8001f56:	e00b      	b.n	8001f70 <USART_Init+0x158>
 8001f58:	69bb      	ldr	r3, [r7, #24]
 8001f5a:	011b      	lsls	r3, r3, #4
 8001f5c:	3332      	adds	r3, #50	@ 0x32
 8001f5e:	4a0a      	ldr	r2, [pc, #40]	@ (8001f88 <USART_Init+0x170>)
 8001f60:	fba2 2303 	umull	r2, r3, r2, r3
 8001f64:	095b      	lsrs	r3, r3, #5
 8001f66:	f003 030f 	and.w	r3, r3, #15
 8001f6a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8001f6c:	4313      	orrs	r3, r2
 8001f6e:	627b      	str	r3, [r7, #36]	@ 0x24
 8001f70:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8001f72:	b29a      	uxth	r2, r3
 8001f74:	687b      	ldr	r3, [r7, #4]
 8001f76:	811a      	strh	r2, [r3, #8]
 8001f78:	bf00      	nop
 8001f7a:	3728      	adds	r7, #40	@ 0x28
 8001f7c:	46bd      	mov	sp, r7
 8001f7e:	bd80      	pop	{r7, pc}
 8001f80:	40011000 	.word	0x40011000
 8001f84:	40011400 	.word	0x40011400
 8001f88:	51eb851f 	.word	0x51eb851f

08001f8c <USART_Cmd>:
 8001f8c:	b480      	push	{r7}
 8001f8e:	b083      	sub	sp, #12
 8001f90:	af00      	add	r7, sp, #0
 8001f92:	6078      	str	r0, [r7, #4]
 8001f94:	460b      	mov	r3, r1
 8001f96:	70fb      	strb	r3, [r7, #3]
 8001f98:	78fb      	ldrb	r3, [r7, #3]
 8001f9a:	2b00      	cmp	r3, #0
 8001f9c:	d008      	beq.n	8001fb0 <USART_Cmd+0x24>
 8001f9e:	687b      	ldr	r3, [r7, #4]
 8001fa0:	899b      	ldrh	r3, [r3, #12]
 8001fa2:	b29b      	uxth	r3, r3
 8001fa4:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8001fa8:	b29a      	uxth	r2, r3
 8001faa:	687b      	ldr	r3, [r7, #4]
 8001fac:	819a      	strh	r2, [r3, #12]
 8001fae:	e007      	b.n	8001fc0 <USART_Cmd+0x34>
 8001fb0:	687b      	ldr	r3, [r7, #4]
 8001fb2:	899b      	ldrh	r3, [r3, #12]
 8001fb4:	b29b      	uxth	r3, r3
 8001fb6:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8001fba:	b29a      	uxth	r2, r3
 8001fbc:	687b      	ldr	r3, [r7, #4]
 8001fbe:	819a      	strh	r2, [r3, #12]
 8001fc0:	bf00      	nop
 8001fc2:	370c      	adds	r7, #12
 8001fc4:	46bd      	mov	sp, r7
 8001fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fca:	4770      	bx	lr

08001fcc <USART_SendData>:
 8001fcc:	b480      	push	{r7}
 8001fce:	b083      	sub	sp, #12
 8001fd0:	af00      	add	r7, sp, #0
 8001fd2:	6078      	str	r0, [r7, #4]
 8001fd4:	460b      	mov	r3, r1
 8001fd6:	807b      	strh	r3, [r7, #2]
 8001fd8:	887b      	ldrh	r3, [r7, #2]
 8001fda:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8001fde:	b29a      	uxth	r2, r3
 8001fe0:	687b      	ldr	r3, [r7, #4]
 8001fe2:	809a      	strh	r2, [r3, #4]
 8001fe4:	bf00      	nop
 8001fe6:	370c      	adds	r7, #12
 8001fe8:	46bd      	mov	sp, r7
 8001fea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fee:	4770      	bx	lr

08001ff0 <USART_ReceiveData>:
 8001ff0:	b480      	push	{r7}
 8001ff2:	b083      	sub	sp, #12
 8001ff4:	af00      	add	r7, sp, #0
 8001ff6:	6078      	str	r0, [r7, #4]
 8001ff8:	687b      	ldr	r3, [r7, #4]
 8001ffa:	889b      	ldrh	r3, [r3, #4]
 8001ffc:	b29b      	uxth	r3, r3
 8001ffe:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8002002:	b29b      	uxth	r3, r3
 8002004:	4618      	mov	r0, r3
 8002006:	370c      	adds	r7, #12
 8002008:	46bd      	mov	sp, r7
 800200a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800200e:	4770      	bx	lr

08002010 <USART_ITConfig>:
 8002010:	b480      	push	{r7}
 8002012:	b087      	sub	sp, #28
 8002014:	af00      	add	r7, sp, #0
 8002016:	6078      	str	r0, [r7, #4]
 8002018:	460b      	mov	r3, r1
 800201a:	807b      	strh	r3, [r7, #2]
 800201c:	4613      	mov	r3, r2
 800201e:	707b      	strb	r3, [r7, #1]
 8002020:	2300      	movs	r3, #0
 8002022:	613b      	str	r3, [r7, #16]
 8002024:	2300      	movs	r3, #0
 8002026:	60fb      	str	r3, [r7, #12]
 8002028:	2300      	movs	r3, #0
 800202a:	60bb      	str	r3, [r7, #8]
 800202c:	2300      	movs	r3, #0
 800202e:	617b      	str	r3, [r7, #20]
 8002030:	687b      	ldr	r3, [r7, #4]
 8002032:	617b      	str	r3, [r7, #20]
 8002034:	887b      	ldrh	r3, [r7, #2]
 8002036:	b2db      	uxtb	r3, r3
 8002038:	095b      	lsrs	r3, r3, #5
 800203a:	b2db      	uxtb	r3, r3
 800203c:	613b      	str	r3, [r7, #16]
 800203e:	887b      	ldrh	r3, [r7, #2]
 8002040:	f003 031f 	and.w	r3, r3, #31
 8002044:	60fb      	str	r3, [r7, #12]
 8002046:	2201      	movs	r2, #1
 8002048:	68fb      	ldr	r3, [r7, #12]
 800204a:	fa02 f303 	lsl.w	r3, r2, r3
 800204e:	60bb      	str	r3, [r7, #8]
 8002050:	693b      	ldr	r3, [r7, #16]
 8002052:	2b01      	cmp	r3, #1
 8002054:	d103      	bne.n	800205e <USART_ITConfig+0x4e>
 8002056:	697b      	ldr	r3, [r7, #20]
 8002058:	330c      	adds	r3, #12
 800205a:	617b      	str	r3, [r7, #20]
 800205c:	e009      	b.n	8002072 <USART_ITConfig+0x62>
 800205e:	693b      	ldr	r3, [r7, #16]
 8002060:	2b02      	cmp	r3, #2
 8002062:	d103      	bne.n	800206c <USART_ITConfig+0x5c>
 8002064:	697b      	ldr	r3, [r7, #20]
 8002066:	3310      	adds	r3, #16
 8002068:	617b      	str	r3, [r7, #20]
 800206a:	e002      	b.n	8002072 <USART_ITConfig+0x62>
 800206c:	697b      	ldr	r3, [r7, #20]
 800206e:	3314      	adds	r3, #20
 8002070:	617b      	str	r3, [r7, #20]
 8002072:	787b      	ldrb	r3, [r7, #1]
 8002074:	2b00      	cmp	r3, #0
 8002076:	d006      	beq.n	8002086 <USART_ITConfig+0x76>
 8002078:	697b      	ldr	r3, [r7, #20]
 800207a:	6819      	ldr	r1, [r3, #0]
 800207c:	697b      	ldr	r3, [r7, #20]
 800207e:	68ba      	ldr	r2, [r7, #8]
 8002080:	430a      	orrs	r2, r1
 8002082:	601a      	str	r2, [r3, #0]
 8002084:	e006      	b.n	8002094 <USART_ITConfig+0x84>
 8002086:	697b      	ldr	r3, [r7, #20]
 8002088:	6819      	ldr	r1, [r3, #0]
 800208a:	68bb      	ldr	r3, [r7, #8]
 800208c:	43da      	mvns	r2, r3
 800208e:	697b      	ldr	r3, [r7, #20]
 8002090:	400a      	ands	r2, r1
 8002092:	601a      	str	r2, [r3, #0]
 8002094:	bf00      	nop
 8002096:	371c      	adds	r7, #28
 8002098:	46bd      	mov	sp, r7
 800209a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800209e:	4770      	bx	lr

080020a0 <USART_GetFlagStatus>:
 80020a0:	b480      	push	{r7}
 80020a2:	b085      	sub	sp, #20
 80020a4:	af00      	add	r7, sp, #0
 80020a6:	6078      	str	r0, [r7, #4]
 80020a8:	460b      	mov	r3, r1
 80020aa:	807b      	strh	r3, [r7, #2]
 80020ac:	2300      	movs	r3, #0
 80020ae:	73fb      	strb	r3, [r7, #15]
 80020b0:	687b      	ldr	r3, [r7, #4]
 80020b2:	881b      	ldrh	r3, [r3, #0]
 80020b4:	b29a      	uxth	r2, r3
 80020b6:	887b      	ldrh	r3, [r7, #2]
 80020b8:	4013      	ands	r3, r2
 80020ba:	b29b      	uxth	r3, r3
 80020bc:	2b00      	cmp	r3, #0
 80020be:	d002      	beq.n	80020c6 <USART_GetFlagStatus+0x26>
 80020c0:	2301      	movs	r3, #1
 80020c2:	73fb      	strb	r3, [r7, #15]
 80020c4:	e001      	b.n	80020ca <USART_GetFlagStatus+0x2a>
 80020c6:	2300      	movs	r3, #0
 80020c8:	73fb      	strb	r3, [r7, #15]
 80020ca:	7bfb      	ldrb	r3, [r7, #15]
 80020cc:	4618      	mov	r0, r3
 80020ce:	3714      	adds	r7, #20
 80020d0:	46bd      	mov	sp, r7
 80020d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80020d6:	4770      	bx	lr

080020d8 <USART_GetITStatus>:
 80020d8:	b480      	push	{r7}
 80020da:	b087      	sub	sp, #28
 80020dc:	af00      	add	r7, sp, #0
 80020de:	6078      	str	r0, [r7, #4]
 80020e0:	460b      	mov	r3, r1
 80020e2:	807b      	strh	r3, [r7, #2]
 80020e4:	2300      	movs	r3, #0
 80020e6:	60fb      	str	r3, [r7, #12]
 80020e8:	2300      	movs	r3, #0
 80020ea:	617b      	str	r3, [r7, #20]
 80020ec:	2300      	movs	r3, #0
 80020ee:	60bb      	str	r3, [r7, #8]
 80020f0:	2300      	movs	r3, #0
 80020f2:	74fb      	strb	r3, [r7, #19]
 80020f4:	887b      	ldrh	r3, [r7, #2]
 80020f6:	b2db      	uxtb	r3, r3
 80020f8:	095b      	lsrs	r3, r3, #5
 80020fa:	b2db      	uxtb	r3, r3
 80020fc:	60bb      	str	r3, [r7, #8]
 80020fe:	887b      	ldrh	r3, [r7, #2]
 8002100:	f003 031f 	and.w	r3, r3, #31
 8002104:	617b      	str	r3, [r7, #20]
 8002106:	2201      	movs	r2, #1
 8002108:	697b      	ldr	r3, [r7, #20]
 800210a:	fa02 f303 	lsl.w	r3, r2, r3
 800210e:	617b      	str	r3, [r7, #20]
 8002110:	68bb      	ldr	r3, [r7, #8]
 8002112:	2b01      	cmp	r3, #1
 8002114:	d107      	bne.n	8002126 <USART_GetITStatus+0x4e>
 8002116:	687b      	ldr	r3, [r7, #4]
 8002118:	899b      	ldrh	r3, [r3, #12]
 800211a:	b29b      	uxth	r3, r3
 800211c:	461a      	mov	r2, r3
 800211e:	697b      	ldr	r3, [r7, #20]
 8002120:	4013      	ands	r3, r2
 8002122:	617b      	str	r3, [r7, #20]
 8002124:	e011      	b.n	800214a <USART_GetITStatus+0x72>
 8002126:	68bb      	ldr	r3, [r7, #8]
 8002128:	2b02      	cmp	r3, #2
 800212a:	d107      	bne.n	800213c <USART_GetITStatus+0x64>
 800212c:	687b      	ldr	r3, [r7, #4]
 800212e:	8a1b      	ldrh	r3, [r3, #16]
 8002130:	b29b      	uxth	r3, r3
 8002132:	461a      	mov	r2, r3
 8002134:	697b      	ldr	r3, [r7, #20]
 8002136:	4013      	ands	r3, r2
 8002138:	617b      	str	r3, [r7, #20]
 800213a:	e006      	b.n	800214a <USART_GetITStatus+0x72>
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	8a9b      	ldrh	r3, [r3, #20]
 8002140:	b29b      	uxth	r3, r3
 8002142:	461a      	mov	r2, r3
 8002144:	697b      	ldr	r3, [r7, #20]
 8002146:	4013      	ands	r3, r2
 8002148:	617b      	str	r3, [r7, #20]
 800214a:	887b      	ldrh	r3, [r7, #2]
 800214c:	0a1b      	lsrs	r3, r3, #8
 800214e:	b29b      	uxth	r3, r3
 8002150:	60fb      	str	r3, [r7, #12]
 8002152:	2201      	movs	r2, #1
 8002154:	68fb      	ldr	r3, [r7, #12]
 8002156:	fa02 f303 	lsl.w	r3, r2, r3
 800215a:	60fb      	str	r3, [r7, #12]
 800215c:	687b      	ldr	r3, [r7, #4]
 800215e:	881b      	ldrh	r3, [r3, #0]
 8002160:	b29b      	uxth	r3, r3
 8002162:	461a      	mov	r2, r3
 8002164:	68fb      	ldr	r3, [r7, #12]
 8002166:	4013      	ands	r3, r2
 8002168:	60fb      	str	r3, [r7, #12]
 800216a:	697b      	ldr	r3, [r7, #20]
 800216c:	2b00      	cmp	r3, #0
 800216e:	d005      	beq.n	800217c <USART_GetITStatus+0xa4>
 8002170:	68fb      	ldr	r3, [r7, #12]
 8002172:	2b00      	cmp	r3, #0
 8002174:	d002      	beq.n	800217c <USART_GetITStatus+0xa4>
 8002176:	2301      	movs	r3, #1
 8002178:	74fb      	strb	r3, [r7, #19]
 800217a:	e001      	b.n	8002180 <USART_GetITStatus+0xa8>
 800217c:	2300      	movs	r3, #0
 800217e:	74fb      	strb	r3, [r7, #19]
 8002180:	7cfb      	ldrb	r3, [r7, #19]
 8002182:	4618      	mov	r0, r3
 8002184:	371c      	adds	r7, #28
 8002186:	46bd      	mov	sp, r7
 8002188:	f85d 7b04 	ldr.w	r7, [sp], #4
 800218c:	4770      	bx	lr

0800218e <USART_ClearITPendingBit>:
 800218e:	b480      	push	{r7}
 8002190:	b085      	sub	sp, #20
 8002192:	af00      	add	r7, sp, #0
 8002194:	6078      	str	r0, [r7, #4]
 8002196:	460b      	mov	r3, r1
 8002198:	807b      	strh	r3, [r7, #2]
 800219a:	2300      	movs	r3, #0
 800219c:	81fb      	strh	r3, [r7, #14]
 800219e:	2300      	movs	r3, #0
 80021a0:	81bb      	strh	r3, [r7, #12]
 80021a2:	887b      	ldrh	r3, [r7, #2]
 80021a4:	0a1b      	lsrs	r3, r3, #8
 80021a6:	81fb      	strh	r3, [r7, #14]
 80021a8:	89fb      	ldrh	r3, [r7, #14]
 80021aa:	2201      	movs	r2, #1
 80021ac:	fa02 f303 	lsl.w	r3, r2, r3
 80021b0:	81bb      	strh	r3, [r7, #12]
 80021b2:	89bb      	ldrh	r3, [r7, #12]
 80021b4:	43db      	mvns	r3, r3
 80021b6:	b29a      	uxth	r2, r3
 80021b8:	687b      	ldr	r3, [r7, #4]
 80021ba:	801a      	strh	r2, [r3, #0]
 80021bc:	bf00      	nop
 80021be:	3714      	adds	r7, #20
 80021c0:	46bd      	mov	sp, r7
 80021c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80021c6:	4770      	bx	lr

080021c8 <Button_Init>:
 80021c8:	b580      	push	{r7, lr}
 80021ca:	b084      	sub	sp, #16
 80021cc:	af02      	add	r7, sp, #8
 80021ce:	f000 f9af 	bl	8002530 <BTNGPIO_Init>
 80021d2:	2300      	movs	r3, #0
 80021d4:	71fb      	strb	r3, [r7, #7]
 80021d6:	e035      	b.n	8002244 <Button_Init+0x7c>
 80021d8:	79fa      	ldrb	r2, [r7, #7]
 80021da:	4924      	ldr	r1, [pc, #144]	@ (800226c <Button_Init+0xa4>)
 80021dc:	4613      	mov	r3, r2
 80021de:	009b      	lsls	r3, r3, #2
 80021e0:	4413      	add	r3, r2
 80021e2:	009b      	lsls	r3, r3, #2
 80021e4:	440b      	add	r3, r1
 80021e6:	330a      	adds	r3, #10
 80021e8:	79fa      	ldrb	r2, [r7, #7]
 80021ea:	701a      	strb	r2, [r3, #0]
 80021ec:	79fa      	ldrb	r2, [r7, #7]
 80021ee:	491f      	ldr	r1, [pc, #124]	@ (800226c <Button_Init+0xa4>)
 80021f0:	4613      	mov	r3, r2
 80021f2:	009b      	lsls	r3, r3, #2
 80021f4:	4413      	add	r3, r2
 80021f6:	009b      	lsls	r3, r3, #2
 80021f8:	440b      	add	r3, r1
 80021fa:	3310      	adds	r3, #16
 80021fc:	4a1c      	ldr	r2, [pc, #112]	@ (8002270 <Button_Init+0xa8>)
 80021fe:	601a      	str	r2, [r3, #0]
 8002200:	79fb      	ldrb	r3, [r7, #7]
 8002202:	4a1c      	ldr	r2, [pc, #112]	@ (8002274 <Button_Init+0xac>)
 8002204:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8002208:	79fb      	ldrb	r3, [r7, #7]
 800220a:	4a1a      	ldr	r2, [pc, #104]	@ (8002274 <Button_Init+0xac>)
 800220c:	00db      	lsls	r3, r3, #3
 800220e:	4413      	add	r3, r2
 8002210:	889b      	ldrh	r3, [r3, #4]
 8002212:	4619      	mov	r1, r3
 8002214:	f7ff fc9c 	bl	8001b50 <GPIO_ReadInputDataBit>
 8002218:	4603      	mov	r3, r0
 800221a:	4619      	mov	r1, r3
 800221c:	79fb      	ldrb	r3, [r7, #7]
 800221e:	4a15      	ldr	r2, [pc, #84]	@ (8002274 <Button_Init+0xac>)
 8002220:	00db      	lsls	r3, r3, #3
 8002222:	4413      	add	r3, r2
 8002224:	799b      	ldrb	r3, [r3, #6]
 8002226:	4299      	cmp	r1, r3
 8002228:	d109      	bne.n	800223e <Button_Init+0x76>
 800222a:	79fa      	ldrb	r2, [r7, #7]
 800222c:	490f      	ldr	r1, [pc, #60]	@ (800226c <Button_Init+0xa4>)
 800222e:	4613      	mov	r3, r2
 8002230:	009b      	lsls	r3, r3, #2
 8002232:	4413      	add	r3, r2
 8002234:	009b      	lsls	r3, r3, #2
 8002236:	440b      	add	r3, r1
 8002238:	3309      	adds	r3, #9
 800223a:	2201      	movs	r2, #1
 800223c:	701a      	strb	r2, [r3, #0]
 800223e:	79fb      	ldrb	r3, [r7, #7]
 8002240:	3301      	adds	r3, #1
 8002242:	71fb      	strb	r3, [r7, #7]
 8002244:	79fb      	ldrb	r3, [r7, #7]
 8002246:	2b05      	cmp	r3, #5
 8002248:	d9c6      	bls.n	80021d8 <Button_Init+0x10>
 800224a:	2300      	movs	r3, #0
 800224c:	9300      	str	r3, [sp, #0]
 800224e:	4b0a      	ldr	r3, [pc, #40]	@ (8002278 <Button_Init+0xb0>)
 8002250:	22ff      	movs	r2, #255	@ 0xff
 8002252:	2105      	movs	r1, #5
 8002254:	4809      	ldr	r0, [pc, #36]	@ (800227c <Button_Init+0xb4>)
 8002256:	f000 fb2f 	bl	80028b8 <TimerStart>
 800225a:	4603      	mov	r3, r0
 800225c:	461a      	mov	r2, r3
 800225e:	4b08      	ldr	r3, [pc, #32]	@ (8002280 <Button_Init+0xb8>)
 8002260:	701a      	strb	r2, [r3, #0]
 8002262:	bf00      	nop
 8002264:	3708      	adds	r7, #8
 8002266:	46bd      	mov	sp, r7
 8002268:	bd80      	pop	{r7, pc}
 800226a:	bf00      	nop
 800226c:	2000052c 	.word	0x2000052c
 8002270:	080022e9 	.word	0x080022e9
 8002274:	20000048 	.word	0x20000048
 8002278:	080024e5 	.word	0x080024e5
 800227c:	08006428 	.word	0x08006428
 8002280:	20000078 	.word	0x20000078

08002284 <Button_SetMode>:
 8002284:	b480      	push	{r7}
 8002286:	b083      	sub	sp, #12
 8002288:	af00      	add	r7, sp, #0
 800228a:	4603      	mov	r3, r0
 800228c:	460a      	mov	r2, r1
 800228e:	71fb      	strb	r3, [r7, #7]
 8002290:	4613      	mov	r3, r2
 8002292:	71bb      	strb	r3, [r7, #6]
 8002294:	79fb      	ldrb	r3, [r7, #7]
 8002296:	2b05      	cmp	r3, #5
 8002298:	d80a      	bhi.n	80022b0 <Button_SetMode+0x2c>
 800229a:	79fa      	ldrb	r2, [r7, #7]
 800229c:	4907      	ldr	r1, [pc, #28]	@ (80022bc <Button_SetMode+0x38>)
 800229e:	4613      	mov	r3, r2
 80022a0:	009b      	lsls	r3, r3, #2
 80022a2:	4413      	add	r3, r2
 80022a4:	009b      	lsls	r3, r3, #2
 80022a6:	440b      	add	r3, r1
 80022a8:	330b      	adds	r3, #11
 80022aa:	79ba      	ldrb	r2, [r7, #6]
 80022ac:	701a      	strb	r2, [r3, #0]
 80022ae:	e000      	b.n	80022b2 <Button_SetMode+0x2e>
 80022b0:	bf00      	nop
 80022b2:	370c      	adds	r7, #12
 80022b4:	46bd      	mov	sp, r7
 80022b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022ba:	4770      	bx	lr
 80022bc:	2000052c 	.word	0x2000052c

080022c0 <Button_RegisterEventCallback>:
 80022c0:	b480      	push	{r7}
 80022c2:	b083      	sub	sp, #12
 80022c4:	af00      	add	r7, sp, #0
 80022c6:	4603      	mov	r3, r0
 80022c8:	6039      	str	r1, [r7, #0]
 80022ca:	71fb      	strb	r3, [r7, #7]
 80022cc:	79fb      	ldrb	r3, [r7, #7]
 80022ce:	4905      	ldr	r1, [pc, #20]	@ (80022e4 <Button_RegisterEventCallback+0x24>)
 80022d0:	683a      	ldr	r2, [r7, #0]
 80022d2:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80022d6:	bf00      	nop
 80022d8:	370c      	adds	r7, #12
 80022da:	46bd      	mov	sp, r7
 80022dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80022e0:	4770      	bx	lr
 80022e2:	bf00      	nop
 80022e4:	200005a4 	.word	0x200005a4

080022e8 <ButtonScanTypeEdge>:
 80022e8:	b580      	push	{r7, lr}
 80022ea:	b084      	sub	sp, #16
 80022ec:	af00      	add	r7, sp, #0
 80022ee:	6078      	str	r0, [r7, #4]
 80022f0:	687b      	ldr	r3, [r7, #4]
 80022f2:	60fb      	str	r3, [r7, #12]
 80022f4:	68fb      	ldr	r3, [r7, #12]
 80022f6:	7a9b      	ldrb	r3, [r3, #10]
 80022f8:	72fb      	strb	r3, [r7, #11]
 80022fa:	7afb      	ldrb	r3, [r7, #11]
 80022fc:	4a77      	ldr	r2, [pc, #476]	@ (80024dc <ButtonScanTypeEdge+0x1f4>)
 80022fe:	f852 0033 	ldr.w	r0, [r2, r3, lsl #3]
 8002302:	7afb      	ldrb	r3, [r7, #11]
 8002304:	4a75      	ldr	r2, [pc, #468]	@ (80024dc <ButtonScanTypeEdge+0x1f4>)
 8002306:	00db      	lsls	r3, r3, #3
 8002308:	4413      	add	r3, r2
 800230a:	889b      	ldrh	r3, [r3, #4]
 800230c:	4619      	mov	r1, r3
 800230e:	f7ff fc1f 	bl	8001b50 <GPIO_ReadInputDataBit>
 8002312:	4603      	mov	r3, r0
 8002314:	4619      	mov	r1, r3
 8002316:	7afb      	ldrb	r3, [r7, #11]
 8002318:	4a70      	ldr	r2, [pc, #448]	@ (80024dc <ButtonScanTypeEdge+0x1f4>)
 800231a:	00db      	lsls	r3, r3, #3
 800231c:	4413      	add	r3, r2
 800231e:	799b      	ldrb	r3, [r3, #6]
 8002320:	4299      	cmp	r1, r3
 8002322:	d10a      	bne.n	800233a <ButtonScanTypeEdge+0x52>
 8002324:	68fb      	ldr	r3, [r7, #12]
 8002326:	7b5b      	ldrb	r3, [r3, #13]
 8002328:	2bff      	cmp	r3, #255	@ 0xff
 800232a:	d013      	beq.n	8002354 <ButtonScanTypeEdge+0x6c>
 800232c:	68fb      	ldr	r3, [r7, #12]
 800232e:	7b5b      	ldrb	r3, [r3, #13]
 8002330:	3301      	adds	r3, #1
 8002332:	b2da      	uxtb	r2, r3
 8002334:	68fb      	ldr	r3, [r7, #12]
 8002336:	735a      	strb	r2, [r3, #13]
 8002338:	e00c      	b.n	8002354 <ButtonScanTypeEdge+0x6c>
 800233a:	68fb      	ldr	r3, [r7, #12]
 800233c:	7b1b      	ldrb	r3, [r3, #12]
 800233e:	2bff      	cmp	r3, #255	@ 0xff
 8002340:	d005      	beq.n	800234e <ButtonScanTypeEdge+0x66>
 8002342:	68fb      	ldr	r3, [r7, #12]
 8002344:	7b1b      	ldrb	r3, [r3, #12]
 8002346:	3301      	adds	r3, #1
 8002348:	b2da      	uxtb	r2, r3
 800234a:	68fb      	ldr	r3, [r7, #12]
 800234c:	731a      	strb	r2, [r3, #12]
 800234e:	68fb      	ldr	r3, [r7, #12]
 8002350:	2200      	movs	r2, #0
 8002352:	735a      	strb	r2, [r3, #13]
 8002354:	68fb      	ldr	r3, [r7, #12]
 8002356:	7b1b      	ldrb	r3, [r3, #12]
 8002358:	2b09      	cmp	r3, #9
 800235a:	d958      	bls.n	800240e <ButtonScanTypeEdge+0x126>
 800235c:	68fb      	ldr	r3, [r7, #12]
 800235e:	7a5b      	ldrb	r3, [r3, #9]
 8002360:	2b01      	cmp	r3, #1
 8002362:	d118      	bne.n	8002396 <ButtonScanTypeEdge+0xae>
 8002364:	68fb      	ldr	r3, [r7, #12]
 8002366:	2200      	movs	r2, #0
 8002368:	725a      	strb	r2, [r3, #9]
 800236a:	4b5d      	ldr	r3, [pc, #372]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	2b00      	cmp	r3, #0
 8002370:	d00b      	beq.n	800238a <ButtonScanTypeEdge+0xa2>
 8002372:	68fb      	ldr	r3, [r7, #12]
 8002374:	7adb      	ldrb	r3, [r3, #11]
 8002376:	f003 0302 	and.w	r3, r3, #2
 800237a:	2b00      	cmp	r3, #0
 800237c:	d005      	beq.n	800238a <ButtonScanTypeEdge+0xa2>
 800237e:	4b58      	ldr	r3, [pc, #352]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 8002380:	681b      	ldr	r3, [r3, #0]
 8002382:	7afa      	ldrb	r2, [r7, #11]
 8002384:	2101      	movs	r1, #1
 8002386:	4610      	mov	r0, r2
 8002388:	4798      	blx	r3
 800238a:	68fb      	ldr	r3, [r7, #12]
 800238c:	7b1b      	ldrb	r3, [r3, #12]
 800238e:	461a      	mov	r2, r3
 8002390:	68fb      	ldr	r3, [r7, #12]
 8002392:	601a      	str	r2, [r3, #0]
 8002394:	e03b      	b.n	800240e <ButtonScanTypeEdge+0x126>
 8002396:	68fb      	ldr	r3, [r7, #12]
 8002398:	681b      	ldr	r3, [r3, #0]
 800239a:	1c5a      	adds	r2, r3, #1
 800239c:	68fb      	ldr	r3, [r7, #12]
 800239e:	601a      	str	r2, [r3, #0]
 80023a0:	68fb      	ldr	r3, [r7, #12]
 80023a2:	681b      	ldr	r3, [r3, #0]
 80023a4:	2b4f      	cmp	r3, #79	@ 0x4f
 80023a6:	d932      	bls.n	800240e <ButtonScanTypeEdge+0x126>
 80023a8:	68fb      	ldr	r3, [r7, #12]
 80023aa:	685b      	ldr	r3, [r3, #4]
 80023ac:	2b00      	cmp	r3, #0
 80023ae:	d012      	beq.n	80023d6 <ButtonScanTypeEdge+0xee>
 80023b0:	4b4b      	ldr	r3, [pc, #300]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 80023b2:	68db      	ldr	r3, [r3, #12]
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	d024      	beq.n	8002402 <ButtonScanTypeEdge+0x11a>
 80023b8:	68fb      	ldr	r3, [r7, #12]
 80023ba:	7adb      	ldrb	r3, [r3, #11]
 80023bc:	f003 0301 	and.w	r3, r3, #1
 80023c0:	2b00      	cmp	r3, #0
 80023c2:	d01e      	beq.n	8002402 <ButtonScanTypeEdge+0x11a>
 80023c4:	4b46      	ldr	r3, [pc, #280]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 80023c6:	68db      	ldr	r3, [r3, #12]
 80023c8:	68fa      	ldr	r2, [r7, #12]
 80023ca:	6852      	ldr	r2, [r2, #4]
 80023cc:	b291      	uxth	r1, r2
 80023ce:	7afa      	ldrb	r2, [r7, #11]
 80023d0:	4610      	mov	r0, r2
 80023d2:	4798      	blx	r3
 80023d4:	e015      	b.n	8002402 <ButtonScanTypeEdge+0x11a>
 80023d6:	4b42      	ldr	r3, [pc, #264]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 80023d8:	685b      	ldr	r3, [r3, #4]
 80023da:	2b00      	cmp	r3, #0
 80023dc:	d011      	beq.n	8002402 <ButtonScanTypeEdge+0x11a>
 80023de:	68fb      	ldr	r3, [r7, #12]
 80023e0:	7adb      	ldrb	r3, [r3, #11]
 80023e2:	f003 0301 	and.w	r3, r3, #1
 80023e6:	2b00      	cmp	r3, #0
 80023e8:	d00b      	beq.n	8002402 <ButtonScanTypeEdge+0x11a>
 80023ea:	68fb      	ldr	r3, [r7, #12]
 80023ec:	7a1b      	ldrb	r3, [r3, #8]
 80023ee:	2b00      	cmp	r3, #0
 80023f0:	d007      	beq.n	8002402 <ButtonScanTypeEdge+0x11a>
 80023f2:	4b3b      	ldr	r3, [pc, #236]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 80023f4:	685b      	ldr	r3, [r3, #4]
 80023f6:	68fa      	ldr	r2, [r7, #12]
 80023f8:	7a12      	ldrb	r2, [r2, #8]
 80023fa:	b291      	uxth	r1, r2
 80023fc:	7afa      	ldrb	r2, [r7, #11]
 80023fe:	4610      	mov	r0, r2
 8002400:	4798      	blx	r3
 8002402:	68fb      	ldr	r3, [r7, #12]
 8002404:	2200      	movs	r2, #0
 8002406:	605a      	str	r2, [r3, #4]
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	2200      	movs	r2, #0
 800240c:	721a      	strb	r2, [r3, #8]
 800240e:	68fb      	ldr	r3, [r7, #12]
 8002410:	7b5b      	ldrb	r3, [r3, #13]
 8002412:	2b09      	cmp	r3, #9
 8002414:	d95e      	bls.n	80024d4 <ButtonScanTypeEdge+0x1ec>
 8002416:	68fb      	ldr	r3, [r7, #12]
 8002418:	2200      	movs	r2, #0
 800241a:	731a      	strb	r2, [r3, #12]
 800241c:	68fb      	ldr	r3, [r7, #12]
 800241e:	7a5b      	ldrb	r3, [r3, #9]
 8002420:	2b00      	cmp	r3, #0
 8002422:	d11e      	bne.n	8002462 <ButtonScanTypeEdge+0x17a>
 8002424:	68fb      	ldr	r3, [r7, #12]
 8002426:	2201      	movs	r2, #1
 8002428:	725a      	strb	r2, [r3, #9]
 800242a:	4b2d      	ldr	r3, [pc, #180]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 800242c:	681b      	ldr	r3, [r3, #0]
 800242e:	2b00      	cmp	r3, #0
 8002430:	d00b      	beq.n	800244a <ButtonScanTypeEdge+0x162>
 8002432:	68fb      	ldr	r3, [r7, #12]
 8002434:	7adb      	ldrb	r3, [r3, #11]
 8002436:	f003 0302 	and.w	r3, r3, #2
 800243a:	2b00      	cmp	r3, #0
 800243c:	d005      	beq.n	800244a <ButtonScanTypeEdge+0x162>
 800243e:	4b28      	ldr	r3, [pc, #160]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 8002440:	681b      	ldr	r3, [r3, #0]
 8002442:	7afa      	ldrb	r2, [r7, #11]
 8002444:	2100      	movs	r1, #0
 8002446:	4610      	mov	r0, r2
 8002448:	4798      	blx	r3
 800244a:	68fb      	ldr	r3, [r7, #12]
 800244c:	7b5b      	ldrb	r3, [r3, #13]
 800244e:	461a      	mov	r2, r3
 8002450:	68fb      	ldr	r3, [r7, #12]
 8002452:	601a      	str	r2, [r3, #0]
 8002454:	68fb      	ldr	r3, [r7, #12]
 8002456:	7a1b      	ldrb	r3, [r3, #8]
 8002458:	3301      	adds	r3, #1
 800245a:	b2da      	uxtb	r2, r3
 800245c:	68fb      	ldr	r3, [r7, #12]
 800245e:	721a      	strb	r2, [r3, #8]
 8002460:	e038      	b.n	80024d4 <ButtonScanTypeEdge+0x1ec>
 8002462:	68fb      	ldr	r3, [r7, #12]
 8002464:	681b      	ldr	r3, [r3, #0]
 8002466:	1c5a      	adds	r2, r3, #1
 8002468:	68fb      	ldr	r3, [r7, #12]
 800246a:	601a      	str	r2, [r3, #0]
 800246c:	68fb      	ldr	r3, [r7, #12]
 800246e:	681b      	ldr	r3, [r3, #0]
 8002470:	2b77      	cmp	r3, #119	@ 0x77
 8002472:	d92f      	bls.n	80024d4 <ButtonScanTypeEdge+0x1ec>
 8002474:	68fb      	ldr	r3, [r7, #12]
 8002476:	2200      	movs	r2, #0
 8002478:	721a      	strb	r2, [r3, #8]
 800247a:	68fb      	ldr	r3, [r7, #12]
 800247c:	681a      	ldr	r2, [r3, #0]
 800247e:	68fb      	ldr	r3, [r7, #12]
 8002480:	605a      	str	r2, [r3, #4]
 8002482:	68fb      	ldr	r3, [r7, #12]
 8002484:	685b      	ldr	r3, [r3, #4]
 8002486:	2b78      	cmp	r3, #120	@ 0x78
 8002488:	d012      	beq.n	80024b0 <ButtonScanTypeEdge+0x1c8>
 800248a:	68fb      	ldr	r3, [r7, #12]
 800248c:	685b      	ldr	r3, [r3, #4]
 800248e:	2bc8      	cmp	r3, #200	@ 0xc8
 8002490:	d00e      	beq.n	80024b0 <ButtonScanTypeEdge+0x1c8>
 8002492:	68fb      	ldr	r3, [r7, #12]
 8002494:	685b      	ldr	r3, [r3, #4]
 8002496:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 800249a:	d009      	beq.n	80024b0 <ButtonScanTypeEdge+0x1c8>
 800249c:	68fb      	ldr	r3, [r7, #12]
 800249e:	685b      	ldr	r3, [r3, #4]
 80024a0:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80024a4:	d004      	beq.n	80024b0 <ButtonScanTypeEdge+0x1c8>
 80024a6:	68fb      	ldr	r3, [r7, #12]
 80024a8:	685b      	ldr	r3, [r3, #4]
 80024aa:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 80024ae:	d111      	bne.n	80024d4 <ButtonScanTypeEdge+0x1ec>
 80024b0:	4b0b      	ldr	r3, [pc, #44]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 80024b2:	689b      	ldr	r3, [r3, #8]
 80024b4:	2b00      	cmp	r3, #0
 80024b6:	d00d      	beq.n	80024d4 <ButtonScanTypeEdge+0x1ec>
 80024b8:	68fb      	ldr	r3, [r7, #12]
 80024ba:	7adb      	ldrb	r3, [r3, #11]
 80024bc:	f003 0301 	and.w	r3, r3, #1
 80024c0:	2b00      	cmp	r3, #0
 80024c2:	d007      	beq.n	80024d4 <ButtonScanTypeEdge+0x1ec>
 80024c4:	4b06      	ldr	r3, [pc, #24]	@ (80024e0 <ButtonScanTypeEdge+0x1f8>)
 80024c6:	689b      	ldr	r3, [r3, #8]
 80024c8:	68fa      	ldr	r2, [r7, #12]
 80024ca:	6852      	ldr	r2, [r2, #4]
 80024cc:	b291      	uxth	r1, r2
 80024ce:	7afa      	ldrb	r2, [r7, #11]
 80024d0:	4610      	mov	r0, r2
 80024d2:	4798      	blx	r3
 80024d4:	bf00      	nop
 80024d6:	3710      	adds	r7, #16
 80024d8:	46bd      	mov	sp, r7
 80024da:	bd80      	pop	{r7, pc}
 80024dc:	20000048 	.word	0x20000048
 80024e0:	200005a4 	.word	0x200005a4

080024e4 <ButtonScan>:
 80024e4:	b580      	push	{r7, lr}
 80024e6:	b084      	sub	sp, #16
 80024e8:	af00      	add	r7, sp, #0
 80024ea:	6078      	str	r0, [r7, #4]
 80024ec:	2300      	movs	r3, #0
 80024ee:	73fb      	strb	r3, [r7, #15]
 80024f0:	e014      	b.n	800251c <ButtonScan+0x38>
 80024f2:	7bfa      	ldrb	r2, [r7, #15]
 80024f4:	490d      	ldr	r1, [pc, #52]	@ (800252c <ButtonScan+0x48>)
 80024f6:	4613      	mov	r3, r2
 80024f8:	009b      	lsls	r3, r3, #2
 80024fa:	4413      	add	r3, r2
 80024fc:	009b      	lsls	r3, r3, #2
 80024fe:	440b      	add	r3, r1
 8002500:	3310      	adds	r3, #16
 8002502:	6819      	ldr	r1, [r3, #0]
 8002504:	7bfa      	ldrb	r2, [r7, #15]
 8002506:	4613      	mov	r3, r2
 8002508:	009b      	lsls	r3, r3, #2
 800250a:	4413      	add	r3, r2
 800250c:	009b      	lsls	r3, r3, #2
 800250e:	4a07      	ldr	r2, [pc, #28]	@ (800252c <ButtonScan+0x48>)
 8002510:	4413      	add	r3, r2
 8002512:	4618      	mov	r0, r3
 8002514:	4788      	blx	r1
 8002516:	7bfb      	ldrb	r3, [r7, #15]
 8002518:	3301      	adds	r3, #1
 800251a:	73fb      	strb	r3, [r7, #15]
 800251c:	7bfb      	ldrb	r3, [r7, #15]
 800251e:	2b05      	cmp	r3, #5
 8002520:	d9e7      	bls.n	80024f2 <ButtonScan+0xe>
 8002522:	bf00      	nop
 8002524:	3710      	adds	r7, #16
 8002526:	46bd      	mov	sp, r7
 8002528:	bd80      	pop	{r7, pc}
 800252a:	bf00      	nop
 800252c:	2000052c 	.word	0x2000052c

08002530 <BTNGPIO_Init>:
 8002530:	b580      	push	{r7, lr}
 8002532:	b082      	sub	sp, #8
 8002534:	af00      	add	r7, sp, #0
 8002536:	2101      	movs	r1, #1
 8002538:	2001      	movs	r0, #1
 800253a:	f7ff fc2d 	bl	8001d98 <RCC_AHB1PeriphClockCmd>
 800253e:	2101      	movs	r1, #1
 8002540:	2002      	movs	r0, #2
 8002542:	f7ff fc29 	bl	8001d98 <RCC_AHB1PeriphClockCmd>
 8002546:	2101      	movs	r1, #1
 8002548:	2004      	movs	r0, #4
 800254a:	f7ff fc25 	bl	8001d98 <RCC_AHB1PeriphClockCmd>
 800254e:	2300      	movs	r3, #0
 8002550:	713b      	strb	r3, [r7, #4]
 8002552:	2303      	movs	r3, #3
 8002554:	717b      	strb	r3, [r7, #5]
 8002556:	2301      	movs	r3, #1
 8002558:	71fb      	strb	r3, [r7, #7]
 800255a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800255e:	603b      	str	r3, [r7, #0]
 8002560:	463b      	mov	r3, r7
 8002562:	4619      	mov	r1, r3
 8002564:	480a      	ldr	r0, [pc, #40]	@ (8002590 <BTNGPIO_Init+0x60>)
 8002566:	f7ff fa65 	bl	8001a34 <GPIO_Init>
 800256a:	2339      	movs	r3, #57	@ 0x39
 800256c:	603b      	str	r3, [r7, #0]
 800256e:	463b      	mov	r3, r7
 8002570:	4619      	mov	r1, r3
 8002572:	4808      	ldr	r0, [pc, #32]	@ (8002594 <BTNGPIO_Init+0x64>)
 8002574:	f7ff fa5e 	bl	8001a34 <GPIO_Init>
 8002578:	2310      	movs	r3, #16
 800257a:	603b      	str	r3, [r7, #0]
 800257c:	463b      	mov	r3, r7
 800257e:	4619      	mov	r1, r3
 8002580:	4805      	ldr	r0, [pc, #20]	@ (8002598 <BTNGPIO_Init+0x68>)
 8002582:	f7ff fa57 	bl	8001a34 <GPIO_Init>
 8002586:	bf00      	nop
 8002588:	3708      	adds	r7, #8
 800258a:	46bd      	mov	sp, r7
 800258c:	bd80      	pop	{r7, pc}
 800258e:	bf00      	nop
 8002590:	40020800 	.word	0x40020800
 8002594:	40020400 	.word	0x40020400
 8002598:	40020000 	.word	0x40020000

0800259c <EventButton_Init>:
 800259c:	b580      	push	{r7, lr}
 800259e:	af00      	add	r7, sp, #0
 80025a0:	4915      	ldr	r1, [pc, #84]	@ (80025f8 <EventButton_Init+0x5c>)
 80025a2:	2000      	movs	r0, #0
 80025a4:	f7ff fe8c 	bl	80022c0 <Button_RegisterEventCallback>
 80025a8:	4914      	ldr	r1, [pc, #80]	@ (80025fc <EventButton_Init+0x60>)
 80025aa:	2001      	movs	r0, #1
 80025ac:	f7ff fe88 	bl	80022c0 <Button_RegisterEventCallback>
 80025b0:	4913      	ldr	r1, [pc, #76]	@ (8002600 <EventButton_Init+0x64>)
 80025b2:	2002      	movs	r0, #2
 80025b4:	f7ff fe84 	bl	80022c0 <Button_RegisterEventCallback>
 80025b8:	4912      	ldr	r1, [pc, #72]	@ (8002604 <EventButton_Init+0x68>)
 80025ba:	2003      	movs	r0, #3
 80025bc:	f7ff fe80 	bl	80022c0 <Button_RegisterEventCallback>
 80025c0:	2101      	movs	r1, #1
 80025c2:	2000      	movs	r0, #0
 80025c4:	f7ff fe5e 	bl	8002284 <Button_SetMode>
 80025c8:	2101      	movs	r1, #1
 80025ca:	2001      	movs	r0, #1
 80025cc:	f7ff fe5a 	bl	8002284 <Button_SetMode>
 80025d0:	2101      	movs	r1, #1
 80025d2:	2002      	movs	r0, #2
 80025d4:	f7ff fe56 	bl	8002284 <Button_SetMode>
 80025d8:	2101      	movs	r1, #1
 80025da:	2003      	movs	r0, #3
 80025dc:	f7ff fe52 	bl	8002284 <Button_SetMode>
 80025e0:	2101      	movs	r1, #1
 80025e2:	2004      	movs	r0, #4
 80025e4:	f7ff fe4e 	bl	8002284 <Button_SetMode>
 80025e8:	2101      	movs	r1, #1
 80025ea:	2005      	movs	r0, #5
 80025ec:	f7ff fe4a 	bl	8002284 <Button_SetMode>
 80025f0:	f7ff fdea 	bl	80021c8 <Button_Init>
 80025f4:	bf00      	nop
 80025f6:	bd80      	pop	{r7, pc}
 80025f8:	08002609 	.word	0x08002609
 80025fc:	0800263d 	.word	0x0800263d
 8002600:	08002685 	.word	0x08002685
 8002604:	080026e3 	.word	0x080026e3

08002608 <ButtonProcessEventEdge>:
 8002608:	b580      	push	{r7, lr}
 800260a:	b084      	sub	sp, #16
 800260c:	af00      	add	r7, sp, #0
 800260e:	4603      	mov	r3, r0
 8002610:	460a      	mov	r2, r1
 8002612:	71fb      	strb	r3, [r7, #7]
 8002614:	4613      	mov	r3, r2
 8002616:	80bb      	strh	r3, [r7, #4]
 8002618:	88bb      	ldrh	r3, [r7, #4]
 800261a:	2b00      	cmp	r3, #0
 800261c:	d103      	bne.n	8002626 <ButtonProcessEventEdge+0x1e>
 800261e:	79fb      	ldrb	r3, [r7, #7]
 8002620:	3306      	adds	r3, #6
 8002622:	73fb      	strb	r3, [r7, #15]
 8002624:	e002      	b.n	800262c <ButtonProcessEventEdge+0x24>
 8002626:	79fb      	ldrb	r3, [r7, #7]
 8002628:	330c      	adds	r3, #12
 800262a:	73fb      	strb	r3, [r7, #15]
 800262c:	7bfb      	ldrb	r3, [r7, #15]
 800262e:	4618      	mov	r0, r3
 8002630:	f000 f8a2 	bl	8002778 <EventSchedulerAdd>
 8002634:	bf00      	nop
 8002636:	3710      	adds	r7, #16
 8002638:	46bd      	mov	sp, r7
 800263a:	bd80      	pop	{r7, pc}

0800263c <ButtonProcessEventPress>:
 800263c:	b580      	push	{r7, lr}
 800263e:	b084      	sub	sp, #16
 8002640:	af00      	add	r7, sp, #0
 8002642:	4603      	mov	r3, r0
 8002644:	460a      	mov	r2, r1
 8002646:	71fb      	strb	r3, [r7, #7]
 8002648:	4613      	mov	r3, r2
 800264a:	80bb      	strh	r3, [r7, #4]
 800264c:	88bb      	ldrh	r3, [r7, #4]
 800264e:	2b01      	cmp	r3, #1
 8002650:	d102      	bne.n	8002658 <ButtonProcessEventPress+0x1c>
 8002652:	79fb      	ldrb	r3, [r7, #7]
 8002654:	73fb      	strb	r3, [r7, #15]
 8002656:	e00c      	b.n	8002672 <ButtonProcessEventPress+0x36>
 8002658:	88bb      	ldrh	r3, [r7, #4]
 800265a:	2b02      	cmp	r3, #2
 800265c:	d103      	bne.n	8002666 <ButtonProcessEventPress+0x2a>
 800265e:	79fb      	ldrb	r3, [r7, #7]
 8002660:	3312      	adds	r3, #18
 8002662:	73fb      	strb	r3, [r7, #15]
 8002664:	e005      	b.n	8002672 <ButtonProcessEventPress+0x36>
 8002666:	88bb      	ldrh	r3, [r7, #4]
 8002668:	2b05      	cmp	r3, #5
 800266a:	d107      	bne.n	800267c <ButtonProcessEventPress+0x40>
 800266c:	79fb      	ldrb	r3, [r7, #7]
 800266e:	3318      	adds	r3, #24
 8002670:	73fb      	strb	r3, [r7, #15]
 8002672:	7bfb      	ldrb	r3, [r7, #15]
 8002674:	4618      	mov	r0, r3
 8002676:	f000 f87f 	bl	8002778 <EventSchedulerAdd>
 800267a:	e000      	b.n	800267e <ButtonProcessEventPress+0x42>
 800267c:	bf00      	nop
 800267e:	3710      	adds	r7, #16
 8002680:	46bd      	mov	sp, r7
 8002682:	bd80      	pop	{r7, pc}

08002684 <ButtonProcessEventHold>:
 8002684:	b580      	push	{r7, lr}
 8002686:	b084      	sub	sp, #16
 8002688:	af00      	add	r7, sp, #0
 800268a:	4603      	mov	r3, r0
 800268c:	460a      	mov	r2, r1
 800268e:	71fb      	strb	r3, [r7, #7]
 8002690:	4613      	mov	r3, r2
 8002692:	80bb      	strh	r3, [r7, #4]
 8002694:	88bb      	ldrh	r3, [r7, #4]
 8002696:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 800269a:	d103      	bne.n	80026a4 <ButtonProcessEventHold+0x20>
 800269c:	79fb      	ldrb	r3, [r7, #7]
 800269e:	3330      	adds	r3, #48	@ 0x30
 80026a0:	73fb      	strb	r3, [r7, #15]
 80026a2:	e015      	b.n	80026d0 <ButtonProcessEventHold+0x4c>
 80026a4:	88bb      	ldrh	r3, [r7, #4]
 80026a6:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80026aa:	d103      	bne.n	80026b4 <ButtonProcessEventHold+0x30>
 80026ac:	79fb      	ldrb	r3, [r7, #7]
 80026ae:	332a      	adds	r3, #42	@ 0x2a
 80026b0:	73fb      	strb	r3, [r7, #15]
 80026b2:	e00d      	b.n	80026d0 <ButtonProcessEventHold+0x4c>
 80026b4:	88bb      	ldrh	r3, [r7, #4]
 80026b6:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 80026ba:	d103      	bne.n	80026c4 <ButtonProcessEventHold+0x40>
 80026bc:	79fb      	ldrb	r3, [r7, #7]
 80026be:	3324      	adds	r3, #36	@ 0x24
 80026c0:	73fb      	strb	r3, [r7, #15]
 80026c2:	e005      	b.n	80026d0 <ButtonProcessEventHold+0x4c>
 80026c4:	88bb      	ldrh	r3, [r7, #4]
 80026c6:	2bc8      	cmp	r3, #200	@ 0xc8
 80026c8:	d107      	bne.n	80026da <ButtonProcessEventHold+0x56>
 80026ca:	79fb      	ldrb	r3, [r7, #7]
 80026cc:	331e      	adds	r3, #30
 80026ce:	73fb      	strb	r3, [r7, #15]
 80026d0:	7bfb      	ldrb	r3, [r7, #15]
 80026d2:	4618      	mov	r0, r3
 80026d4:	f000 f850 	bl	8002778 <EventSchedulerAdd>
 80026d8:	e000      	b.n	80026dc <ButtonProcessEventHold+0x58>
 80026da:	bf00      	nop
 80026dc:	3710      	adds	r7, #16
 80026de:	46bd      	mov	sp, r7
 80026e0:	bd80      	pop	{r7, pc}

080026e2 <ButtonProcessEventRelease>:
 80026e2:	b580      	push	{r7, lr}
 80026e4:	b084      	sub	sp, #16
 80026e6:	af00      	add	r7, sp, #0
 80026e8:	4603      	mov	r3, r0
 80026ea:	460a      	mov	r2, r1
 80026ec:	71fb      	strb	r3, [r7, #7]
 80026ee:	4613      	mov	r3, r2
 80026f0:	80bb      	strh	r3, [r7, #4]
 80026f2:	88bb      	ldrh	r3, [r7, #4]
 80026f4:	f5b3 6ffa 	cmp.w	r3, #2000	@ 0x7d0
 80026f8:	d303      	bcc.n	8002702 <ButtonProcessEventRelease+0x20>
 80026fa:	79fb      	ldrb	r3, [r7, #7]
 80026fc:	3348      	adds	r3, #72	@ 0x48
 80026fe:	73fb      	strb	r3, [r7, #15]
 8002700:	e015      	b.n	800272e <ButtonProcessEventRelease+0x4c>
 8002702:	88bb      	ldrh	r3, [r7, #4]
 8002704:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 8002708:	d303      	bcc.n	8002712 <ButtonProcessEventRelease+0x30>
 800270a:	79fb      	ldrb	r3, [r7, #7]
 800270c:	3342      	adds	r3, #66	@ 0x42
 800270e:	73fb      	strb	r3, [r7, #15]
 8002710:	e00d      	b.n	800272e <ButtonProcessEventRelease+0x4c>
 8002712:	88bb      	ldrh	r3, [r7, #4]
 8002714:	f5b3 7f16 	cmp.w	r3, #600	@ 0x258
 8002718:	d303      	bcc.n	8002722 <ButtonProcessEventRelease+0x40>
 800271a:	79fb      	ldrb	r3, [r7, #7]
 800271c:	333c      	adds	r3, #60	@ 0x3c
 800271e:	73fb      	strb	r3, [r7, #15]
 8002720:	e005      	b.n	800272e <ButtonProcessEventRelease+0x4c>
 8002722:	88bb      	ldrh	r3, [r7, #4]
 8002724:	2bc7      	cmp	r3, #199	@ 0xc7
 8002726:	d907      	bls.n	8002738 <ButtonProcessEventRelease+0x56>
 8002728:	79fb      	ldrb	r3, [r7, #7]
 800272a:	3336      	adds	r3, #54	@ 0x36
 800272c:	73fb      	strb	r3, [r7, #15]
 800272e:	7bfb      	ldrb	r3, [r7, #15]
 8002730:	4618      	mov	r0, r3
 8002732:	f000 f821 	bl	8002778 <EventSchedulerAdd>
 8002736:	e000      	b.n	800273a <ButtonProcessEventRelease+0x58>
 8002738:	bf00      	nop
 800273a:	3710      	adds	r7, #16
 800273c:	46bd      	mov	sp, r7
 800273e:	bd80      	pop	{r7, pc}

08002740 <EventSchedulerInit>:
 8002740:	b580      	push	{r7, lr}
 8002742:	b082      	sub	sp, #8
 8002744:	af00      	add	r7, sp, #0
 8002746:	6078      	str	r0, [r7, #4]
 8002748:	687b      	ldr	r3, [r7, #4]
 800274a:	2b00      	cmp	r3, #0
 800274c:	d009      	beq.n	8002762 <EventSchedulerInit+0x22>
 800274e:	4a07      	ldr	r2, [pc, #28]	@ (800276c <EventSchedulerInit+0x2c>)
 8002750:	687b      	ldr	r3, [r7, #4]
 8002752:	6013      	str	r3, [r2, #0]
 8002754:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8002758:	2201      	movs	r2, #1
 800275a:	4905      	ldr	r1, [pc, #20]	@ (8002770 <EventSchedulerInit+0x30>)
 800275c:	4805      	ldr	r0, [pc, #20]	@ (8002774 <EventSchedulerInit+0x34>)
 800275e:	f001 ff3b 	bl	80045d8 <bufInit>
 8002762:	bf00      	nop
 8002764:	3708      	adds	r7, #8
 8002766:	46bd      	mov	sp, r7
 8002768:	bd80      	pop	{r7, pc}
 800276a:	bf00      	nop
 800276c:	200005b4 	.word	0x200005b4
 8002770:	200006b8 	.word	0x200006b8
 8002774:	200005b8 	.word	0x200005b8

08002778 <EventSchedulerAdd>:
 8002778:	b580      	push	{r7, lr}
 800277a:	b082      	sub	sp, #8
 800277c:	af00      	add	r7, sp, #0
 800277e:	4603      	mov	r3, r0
 8002780:	71fb      	strb	r3, [r7, #7]
 8002782:	1dfb      	adds	r3, r7, #7
 8002784:	4619      	mov	r1, r3
 8002786:	4806      	ldr	r0, [pc, #24]	@ (80027a0 <EventSchedulerAdd+0x28>)
 8002788:	f001 ff8c 	bl	80046a4 <bufEnDat>
 800278c:	4603      	mov	r3, r0
 800278e:	2b00      	cmp	r3, #0
 8002790:	d101      	bne.n	8002796 <EventSchedulerAdd+0x1e>
 8002792:	2301      	movs	r3, #1
 8002794:	e000      	b.n	8002798 <EventSchedulerAdd+0x20>
 8002796:	2300      	movs	r3, #0
 8002798:	4618      	mov	r0, r3
 800279a:	3708      	adds	r7, #8
 800279c:	46bd      	mov	sp, r7
 800279e:	bd80      	pop	{r7, pc}
 80027a0:	200006b8 	.word	0x200006b8

080027a4 <processEventScheduler>:
 80027a4:	b580      	push	{r7, lr}
 80027a6:	b082      	sub	sp, #8
 80027a8:	af00      	add	r7, sp, #0
 80027aa:	4b0a      	ldr	r3, [pc, #40]	@ (80027d4 <processEventScheduler+0x30>)
 80027ac:	681b      	ldr	r3, [r3, #0]
 80027ae:	2b00      	cmp	r3, #0
 80027b0:	d00c      	beq.n	80027cc <processEventScheduler+0x28>
 80027b2:	1dfb      	adds	r3, r7, #7
 80027b4:	4619      	mov	r1, r3
 80027b6:	4808      	ldr	r0, [pc, #32]	@ (80027d8 <processEventScheduler+0x34>)
 80027b8:	f001 ffc2 	bl	8004740 <bufDeDat>
 80027bc:	4603      	mov	r3, r0
 80027be:	2b00      	cmp	r3, #0
 80027c0:	d104      	bne.n	80027cc <processEventScheduler+0x28>
 80027c2:	4b04      	ldr	r3, [pc, #16]	@ (80027d4 <processEventScheduler+0x30>)
 80027c4:	681b      	ldr	r3, [r3, #0]
 80027c6:	79fa      	ldrb	r2, [r7, #7]
 80027c8:	4610      	mov	r0, r2
 80027ca:	4798      	blx	r3
 80027cc:	bf00      	nop
 80027ce:	3708      	adds	r7, #8
 80027d0:	46bd      	mov	sp, r7
 80027d2:	bd80      	pop	{r7, pc}
 80027d4:	200005b4 	.word	0x200005b4
 80027d8:	200006b8 	.word	0x200006b8

080027dc <NVIC_SetPriority>:
 80027dc:	b480      	push	{r7}
 80027de:	b083      	sub	sp, #12
 80027e0:	af00      	add	r7, sp, #0
 80027e2:	4603      	mov	r3, r0
 80027e4:	6039      	str	r1, [r7, #0]
 80027e6:	71fb      	strb	r3, [r7, #7]
 80027e8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80027ec:	2b00      	cmp	r3, #0
 80027ee:	da0b      	bge.n	8002808 <NVIC_SetPriority+0x2c>
 80027f0:	683b      	ldr	r3, [r7, #0]
 80027f2:	b2da      	uxtb	r2, r3
 80027f4:	490c      	ldr	r1, [pc, #48]	@ (8002828 <NVIC_SetPriority+0x4c>)
 80027f6:	79fb      	ldrb	r3, [r7, #7]
 80027f8:	f003 030f 	and.w	r3, r3, #15
 80027fc:	3b04      	subs	r3, #4
 80027fe:	0112      	lsls	r2, r2, #4
 8002800:	b2d2      	uxtb	r2, r2
 8002802:	440b      	add	r3, r1
 8002804:	761a      	strb	r2, [r3, #24]
 8002806:	e009      	b.n	800281c <NVIC_SetPriority+0x40>
 8002808:	683b      	ldr	r3, [r7, #0]
 800280a:	b2da      	uxtb	r2, r3
 800280c:	4907      	ldr	r1, [pc, #28]	@ (800282c <NVIC_SetPriority+0x50>)
 800280e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002812:	0112      	lsls	r2, r2, #4
 8002814:	b2d2      	uxtb	r2, r2
 8002816:	440b      	add	r3, r1
 8002818:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 800281c:	bf00      	nop
 800281e:	370c      	adds	r7, #12
 8002820:	46bd      	mov	sp, r7
 8002822:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002826:	4770      	bx	lr
 8002828:	e000ed00 	.word	0xe000ed00
 800282c:	e000e100 	.word	0xe000e100

08002830 <SysTick_Config>:
 8002830:	b580      	push	{r7, lr}
 8002832:	b082      	sub	sp, #8
 8002834:	af00      	add	r7, sp, #0
 8002836:	6078      	str	r0, [r7, #4]
 8002838:	687b      	ldr	r3, [r7, #4]
 800283a:	3b01      	subs	r3, #1
 800283c:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002840:	d301      	bcc.n	8002846 <SysTick_Config+0x16>
 8002842:	2301      	movs	r3, #1
 8002844:	e00f      	b.n	8002866 <SysTick_Config+0x36>
 8002846:	4a0a      	ldr	r2, [pc, #40]	@ (8002870 <SysTick_Config+0x40>)
 8002848:	687b      	ldr	r3, [r7, #4]
 800284a:	3b01      	subs	r3, #1
 800284c:	6053      	str	r3, [r2, #4]
 800284e:	210f      	movs	r1, #15
 8002850:	f04f 30ff 	mov.w	r0, #4294967295
 8002854:	f7ff ffc2 	bl	80027dc <NVIC_SetPriority>
 8002858:	4b05      	ldr	r3, [pc, #20]	@ (8002870 <SysTick_Config+0x40>)
 800285a:	2200      	movs	r2, #0
 800285c:	609a      	str	r2, [r3, #8]
 800285e:	4b04      	ldr	r3, [pc, #16]	@ (8002870 <SysTick_Config+0x40>)
 8002860:	2207      	movs	r2, #7
 8002862:	601a      	str	r2, [r3, #0]
 8002864:	2300      	movs	r3, #0
 8002866:	4618      	mov	r0, r3
 8002868:	3708      	adds	r7, #8
 800286a:	46bd      	mov	sp, r7
 800286c:	bd80      	pop	{r7, pc}
 800286e:	bf00      	nop
 8002870:	e000e010 	.word	0xe000e010

08002874 <TimerInit>:
 8002874:	b580      	push	{r7, lr}
 8002876:	b084      	sub	sp, #16
 8002878:	af00      	add	r7, sp, #0
 800287a:	463b      	mov	r3, r7
 800287c:	4618      	mov	r0, r3
 800287e:	f7ff f9e3 	bl	8001c48 <RCC_GetClocksFreq>
 8002882:	683b      	ldr	r3, [r7, #0]
 8002884:	4a0a      	ldr	r2, [pc, #40]	@ (80028b0 <TimerInit+0x3c>)
 8002886:	fba2 2303 	umull	r2, r3, r2, r3
 800288a:	099b      	lsrs	r3, r3, #6
 800288c:	4618      	mov	r0, r3
 800288e:	f7ff ffcf 	bl	8002830 <SysTick_Config>
 8002892:	2101      	movs	r1, #1
 8002894:	f04f 30ff 	mov.w	r0, #4294967295
 8002898:	f7ff ffa0 	bl	80027dc <NVIC_SetPriority>
 800289c:	f44f 72c0 	mov.w	r2, #384	@ 0x180
 80028a0:	2100      	movs	r1, #0
 80028a2:	4804      	ldr	r0, [pc, #16]	@ (80028b4 <TimerInit+0x40>)
 80028a4:	f001 ff8e 	bl	80047c4 <memsetl>
 80028a8:	bf00      	nop
 80028aa:	3710      	adds	r7, #16
 80028ac:	46bd      	mov	sp, r7
 80028ae:	bd80      	pop	{r7, pc}
 80028b0:	10624dd3 	.word	0x10624dd3
 80028b4:	200006c8 	.word	0x200006c8

080028b8 <TimerStart>:
 80028b8:	b590      	push	{r4, r7, lr}
 80028ba:	b087      	sub	sp, #28
 80028bc:	af00      	add	r7, sp, #0
 80028be:	60f8      	str	r0, [r7, #12]
 80028c0:	60b9      	str	r1, [r7, #8]
 80028c2:	603b      	str	r3, [r7, #0]
 80028c4:	4613      	mov	r3, r2
 80028c6:	71fb      	strb	r3, [r7, #7]
 80028c8:	2300      	movs	r3, #0
 80028ca:	75fb      	strb	r3, [r7, #23]
 80028cc:	e04c      	b.n	8002968 <TimerStart+0xb0>
 80028ce:	7dfa      	ldrb	r2, [r7, #23]
 80028d0:	4929      	ldr	r1, [pc, #164]	@ (8002978 <TimerStart+0xc0>)
 80028d2:	4613      	mov	r3, r2
 80028d4:	005b      	lsls	r3, r3, #1
 80028d6:	4413      	add	r3, r2
 80028d8:	00db      	lsls	r3, r3, #3
 80028da:	440b      	add	r3, r1
 80028dc:	3310      	adds	r3, #16
 80028de:	681b      	ldr	r3, [r3, #0]
 80028e0:	2b00      	cmp	r3, #0
 80028e2:	d13e      	bne.n	8002962 <TimerStart+0xaa>
 80028e4:	7dfa      	ldrb	r2, [r7, #23]
 80028e6:	4924      	ldr	r1, [pc, #144]	@ (8002978 <TimerStart+0xc0>)
 80028e8:	4613      	mov	r3, r2
 80028ea:	005b      	lsls	r3, r3, #1
 80028ec:	4413      	add	r3, r2
 80028ee:	00db      	lsls	r3, r3, #3
 80028f0:	440b      	add	r3, r1
 80028f2:	68fa      	ldr	r2, [r7, #12]
 80028f4:	601a      	str	r2, [r3, #0]
 80028f6:	7dfa      	ldrb	r2, [r7, #23]
 80028f8:	491f      	ldr	r1, [pc, #124]	@ (8002978 <TimerStart+0xc0>)
 80028fa:	4613      	mov	r3, r2
 80028fc:	005b      	lsls	r3, r3, #1
 80028fe:	4413      	add	r3, r2
 8002900:	00db      	lsls	r3, r3, #3
 8002902:	440b      	add	r3, r1
 8002904:	3310      	adds	r3, #16
 8002906:	683a      	ldr	r2, [r7, #0]
 8002908:	601a      	str	r2, [r3, #0]
 800290a:	7dfa      	ldrb	r2, [r7, #23]
 800290c:	491a      	ldr	r1, [pc, #104]	@ (8002978 <TimerStart+0xc0>)
 800290e:	4613      	mov	r3, r2
 8002910:	005b      	lsls	r3, r3, #1
 8002912:	4413      	add	r3, r2
 8002914:	00db      	lsls	r3, r3, #3
 8002916:	440b      	add	r3, r1
 8002918:	330c      	adds	r3, #12
 800291a:	79fa      	ldrb	r2, [r7, #7]
 800291c:	701a      	strb	r2, [r3, #0]
 800291e:	7dfa      	ldrb	r2, [r7, #23]
 8002920:	4915      	ldr	r1, [pc, #84]	@ (8002978 <TimerStart+0xc0>)
 8002922:	4613      	mov	r3, r2
 8002924:	005b      	lsls	r3, r3, #1
 8002926:	4413      	add	r3, r2
 8002928:	00db      	lsls	r3, r3, #3
 800292a:	440b      	add	r3, r1
 800292c:	3314      	adds	r3, #20
 800292e:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8002930:	601a      	str	r2, [r3, #0]
 8002932:	7dfc      	ldrb	r4, [r7, #23]
 8002934:	f000 f872 	bl	8002a1c <GetMilSecTick>
 8002938:	4601      	mov	r1, r0
 800293a:	4a0f      	ldr	r2, [pc, #60]	@ (8002978 <TimerStart+0xc0>)
 800293c:	4623      	mov	r3, r4
 800293e:	005b      	lsls	r3, r3, #1
 8002940:	4423      	add	r3, r4
 8002942:	00db      	lsls	r3, r3, #3
 8002944:	4413      	add	r3, r2
 8002946:	3304      	adds	r3, #4
 8002948:	6019      	str	r1, [r3, #0]
 800294a:	7dfa      	ldrb	r2, [r7, #23]
 800294c:	490a      	ldr	r1, [pc, #40]	@ (8002978 <TimerStart+0xc0>)
 800294e:	4613      	mov	r3, r2
 8002950:	005b      	lsls	r3, r3, #1
 8002952:	4413      	add	r3, r2
 8002954:	00db      	lsls	r3, r3, #3
 8002956:	440b      	add	r3, r1
 8002958:	3308      	adds	r3, #8
 800295a:	68ba      	ldr	r2, [r7, #8]
 800295c:	601a      	str	r2, [r3, #0]
 800295e:	7dfb      	ldrb	r3, [r7, #23]
 8002960:	e006      	b.n	8002970 <TimerStart+0xb8>
 8002962:	7dfb      	ldrb	r3, [r7, #23]
 8002964:	3301      	adds	r3, #1
 8002966:	75fb      	strb	r3, [r7, #23]
 8002968:	7dfb      	ldrb	r3, [r7, #23]
 800296a:	2b0f      	cmp	r3, #15
 800296c:	d9af      	bls.n	80028ce <TimerStart+0x16>
 800296e:	23ff      	movs	r3, #255	@ 0xff
 8002970:	4618      	mov	r0, r3
 8002972:	371c      	adds	r7, #28
 8002974:	46bd      	mov	sp, r7
 8002976:	bd90      	pop	{r4, r7, pc}
 8002978:	200006c8 	.word	0x200006c8

0800297c <TimerStop>:
 800297c:	b480      	push	{r7}
 800297e:	b083      	sub	sp, #12
 8002980:	af00      	add	r7, sp, #0
 8002982:	4603      	mov	r3, r0
 8002984:	71fb      	strb	r3, [r7, #7]
 8002986:	79fb      	ldrb	r3, [r7, #7]
 8002988:	2b0f      	cmp	r3, #15
 800298a:	d80a      	bhi.n	80029a2 <TimerStop+0x26>
 800298c:	79fa      	ldrb	r2, [r7, #7]
 800298e:	4922      	ldr	r1, [pc, #136]	@ (8002a18 <TimerStop+0x9c>)
 8002990:	4613      	mov	r3, r2
 8002992:	005b      	lsls	r3, r3, #1
 8002994:	4413      	add	r3, r2
 8002996:	00db      	lsls	r3, r3, #3
 8002998:	440b      	add	r3, r1
 800299a:	3310      	adds	r3, #16
 800299c:	681b      	ldr	r3, [r3, #0]
 800299e:	2b00      	cmp	r3, #0
 80029a0:	d101      	bne.n	80029a6 <TimerStop+0x2a>
 80029a2:	2300      	movs	r3, #0
 80029a4:	e031      	b.n	8002a0a <TimerStop+0x8e>
 80029a6:	79fa      	ldrb	r2, [r7, #7]
 80029a8:	491b      	ldr	r1, [pc, #108]	@ (8002a18 <TimerStop+0x9c>)
 80029aa:	4613      	mov	r3, r2
 80029ac:	005b      	lsls	r3, r3, #1
 80029ae:	4413      	add	r3, r2
 80029b0:	00db      	lsls	r3, r3, #3
 80029b2:	440b      	add	r3, r1
 80029b4:	2200      	movs	r2, #0
 80029b6:	601a      	str	r2, [r3, #0]
 80029b8:	79fa      	ldrb	r2, [r7, #7]
 80029ba:	4917      	ldr	r1, [pc, #92]	@ (8002a18 <TimerStop+0x9c>)
 80029bc:	4613      	mov	r3, r2
 80029be:	005b      	lsls	r3, r3, #1
 80029c0:	4413      	add	r3, r2
 80029c2:	00db      	lsls	r3, r3, #3
 80029c4:	440b      	add	r3, r1
 80029c6:	3310      	adds	r3, #16
 80029c8:	2200      	movs	r2, #0
 80029ca:	601a      	str	r2, [r3, #0]
 80029cc:	79fa      	ldrb	r2, [r7, #7]
 80029ce:	4912      	ldr	r1, [pc, #72]	@ (8002a18 <TimerStop+0x9c>)
 80029d0:	4613      	mov	r3, r2
 80029d2:	005b      	lsls	r3, r3, #1
 80029d4:	4413      	add	r3, r2
 80029d6:	00db      	lsls	r3, r3, #3
 80029d8:	440b      	add	r3, r1
 80029da:	330c      	adds	r3, #12
 80029dc:	2200      	movs	r2, #0
 80029de:	701a      	strb	r2, [r3, #0]
 80029e0:	79fa      	ldrb	r2, [r7, #7]
 80029e2:	490d      	ldr	r1, [pc, #52]	@ (8002a18 <TimerStop+0x9c>)
 80029e4:	4613      	mov	r3, r2
 80029e6:	005b      	lsls	r3, r3, #1
 80029e8:	4413      	add	r3, r2
 80029ea:	00db      	lsls	r3, r3, #3
 80029ec:	440b      	add	r3, r1
 80029ee:	3308      	adds	r3, #8
 80029f0:	2200      	movs	r2, #0
 80029f2:	601a      	str	r2, [r3, #0]
 80029f4:	79fa      	ldrb	r2, [r7, #7]
 80029f6:	4908      	ldr	r1, [pc, #32]	@ (8002a18 <TimerStop+0x9c>)
 80029f8:	4613      	mov	r3, r2
 80029fa:	005b      	lsls	r3, r3, #1
 80029fc:	4413      	add	r3, r2
 80029fe:	00db      	lsls	r3, r3, #3
 8002a00:	440b      	add	r3, r1
 8002a02:	3304      	adds	r3, #4
 8002a04:	2200      	movs	r2, #0
 8002a06:	601a      	str	r2, [r3, #0]
 8002a08:	2301      	movs	r3, #1
 8002a0a:	4618      	mov	r0, r3
 8002a0c:	370c      	adds	r7, #12
 8002a0e:	46bd      	mov	sp, r7
 8002a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a14:	4770      	bx	lr
 8002a16:	bf00      	nop
 8002a18:	200006c8 	.word	0x200006c8

08002a1c <GetMilSecTick>:
 8002a1c:	b480      	push	{r7}
 8002a1e:	af00      	add	r7, sp, #0
 8002a20:	4b03      	ldr	r3, [pc, #12]	@ (8002a30 <GetMilSecTick+0x14>)
 8002a22:	681b      	ldr	r3, [r3, #0]
 8002a24:	4618      	mov	r0, r3
 8002a26:	46bd      	mov	sp, r7
 8002a28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a2c:	4770      	bx	lr
 8002a2e:	bf00      	nop
 8002a30:	20000848 	.word	0x20000848

08002a34 <processTimerScheduler>:
 8002a34:	b580      	push	{r7, lr}
 8002a36:	b084      	sub	sp, #16
 8002a38:	af00      	add	r7, sp, #0
 8002a3a:	2300      	movs	r3, #0
 8002a3c:	73fb      	strb	r3, [r7, #15]
 8002a3e:	e068      	b.n	8002b12 <processTimerScheduler+0xde>
 8002a40:	7bfa      	ldrb	r2, [r7, #15]
 8002a42:	4937      	ldr	r1, [pc, #220]	@ (8002b20 <processTimerScheduler+0xec>)
 8002a44:	4613      	mov	r3, r2
 8002a46:	005b      	lsls	r3, r3, #1
 8002a48:	4413      	add	r3, r2
 8002a4a:	00db      	lsls	r3, r3, #3
 8002a4c:	440b      	add	r3, r1
 8002a4e:	3310      	adds	r3, #16
 8002a50:	681b      	ldr	r3, [r3, #0]
 8002a52:	2b00      	cmp	r3, #0
 8002a54:	d05a      	beq.n	8002b0c <processTimerScheduler+0xd8>
 8002a56:	7bfb      	ldrb	r3, [r7, #15]
 8002a58:	4618      	mov	r0, r3
 8002a5a:	f000 f863 	bl	8002b24 <TimeExpired>
 8002a5e:	4603      	mov	r3, r0
 8002a60:	2b00      	cmp	r3, #0
 8002a62:	d053      	beq.n	8002b0c <processTimerScheduler+0xd8>
 8002a64:	7bfa      	ldrb	r2, [r7, #15]
 8002a66:	492e      	ldr	r1, [pc, #184]	@ (8002b20 <processTimerScheduler+0xec>)
 8002a68:	4613      	mov	r3, r2
 8002a6a:	005b      	lsls	r3, r3, #1
 8002a6c:	4413      	add	r3, r2
 8002a6e:	00db      	lsls	r3, r3, #3
 8002a70:	440b      	add	r3, r1
 8002a72:	3310      	adds	r3, #16
 8002a74:	681b      	ldr	r3, [r3, #0]
 8002a76:	60bb      	str	r3, [r7, #8]
 8002a78:	7bfa      	ldrb	r2, [r7, #15]
 8002a7a:	4929      	ldr	r1, [pc, #164]	@ (8002b20 <processTimerScheduler+0xec>)
 8002a7c:	4613      	mov	r3, r2
 8002a7e:	005b      	lsls	r3, r3, #1
 8002a80:	4413      	add	r3, r2
 8002a82:	00db      	lsls	r3, r3, #3
 8002a84:	440b      	add	r3, r1
 8002a86:	3314      	adds	r3, #20
 8002a88:	681b      	ldr	r3, [r3, #0]
 8002a8a:	607b      	str	r3, [r7, #4]
 8002a8c:	7bfa      	ldrb	r2, [r7, #15]
 8002a8e:	4924      	ldr	r1, [pc, #144]	@ (8002b20 <processTimerScheduler+0xec>)
 8002a90:	4613      	mov	r3, r2
 8002a92:	005b      	lsls	r3, r3, #1
 8002a94:	4413      	add	r3, r2
 8002a96:	00db      	lsls	r3, r3, #3
 8002a98:	440b      	add	r3, r1
 8002a9a:	330c      	adds	r3, #12
 8002a9c:	781b      	ldrb	r3, [r3, #0]
 8002a9e:	b2db      	uxtb	r3, r3
 8002aa0:	2bff      	cmp	r3, #255	@ 0xff
 8002aa2:	d020      	beq.n	8002ae6 <processTimerScheduler+0xb2>
 8002aa4:	7bfa      	ldrb	r2, [r7, #15]
 8002aa6:	491e      	ldr	r1, [pc, #120]	@ (8002b20 <processTimerScheduler+0xec>)
 8002aa8:	4613      	mov	r3, r2
 8002aaa:	005b      	lsls	r3, r3, #1
 8002aac:	4413      	add	r3, r2
 8002aae:	00db      	lsls	r3, r3, #3
 8002ab0:	440b      	add	r3, r1
 8002ab2:	330c      	adds	r3, #12
 8002ab4:	781b      	ldrb	r3, [r3, #0]
 8002ab6:	b2db      	uxtb	r3, r3
 8002ab8:	2b00      	cmp	r3, #0
 8002aba:	d014      	beq.n	8002ae6 <processTimerScheduler+0xb2>
 8002abc:	7bfa      	ldrb	r2, [r7, #15]
 8002abe:	4918      	ldr	r1, [pc, #96]	@ (8002b20 <processTimerScheduler+0xec>)
 8002ac0:	4613      	mov	r3, r2
 8002ac2:	005b      	lsls	r3, r3, #1
 8002ac4:	4413      	add	r3, r2
 8002ac6:	00db      	lsls	r3, r3, #3
 8002ac8:	440b      	add	r3, r1
 8002aca:	330c      	adds	r3, #12
 8002acc:	781b      	ldrb	r3, [r3, #0]
 8002ace:	b2db      	uxtb	r3, r3
 8002ad0:	3b01      	subs	r3, #1
 8002ad2:	b2d8      	uxtb	r0, r3
 8002ad4:	4912      	ldr	r1, [pc, #72]	@ (8002b20 <processTimerScheduler+0xec>)
 8002ad6:	4613      	mov	r3, r2
 8002ad8:	005b      	lsls	r3, r3, #1
 8002ada:	4413      	add	r3, r2
 8002adc:	00db      	lsls	r3, r3, #3
 8002ade:	440b      	add	r3, r1
 8002ae0:	330c      	adds	r3, #12
 8002ae2:	4602      	mov	r2, r0
 8002ae4:	701a      	strb	r2, [r3, #0]
 8002ae6:	7bfa      	ldrb	r2, [r7, #15]
 8002ae8:	490d      	ldr	r1, [pc, #52]	@ (8002b20 <processTimerScheduler+0xec>)
 8002aea:	4613      	mov	r3, r2
 8002aec:	005b      	lsls	r3, r3, #1
 8002aee:	4413      	add	r3, r2
 8002af0:	00db      	lsls	r3, r3, #3
 8002af2:	440b      	add	r3, r1
 8002af4:	330c      	adds	r3, #12
 8002af6:	781b      	ldrb	r3, [r3, #0]
 8002af8:	b2db      	uxtb	r3, r3
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d103      	bne.n	8002b06 <processTimerScheduler+0xd2>
 8002afe:	7bfb      	ldrb	r3, [r7, #15]
 8002b00:	4618      	mov	r0, r3
 8002b02:	f7ff ff3b 	bl	800297c <TimerStop>
 8002b06:	68bb      	ldr	r3, [r7, #8]
 8002b08:	6878      	ldr	r0, [r7, #4]
 8002b0a:	4798      	blx	r3
 8002b0c:	7bfb      	ldrb	r3, [r7, #15]
 8002b0e:	3301      	adds	r3, #1
 8002b10:	73fb      	strb	r3, [r7, #15]
 8002b12:	7bfb      	ldrb	r3, [r7, #15]
 8002b14:	2b0f      	cmp	r3, #15
 8002b16:	d993      	bls.n	8002a40 <processTimerScheduler+0xc>
 8002b18:	bf00      	nop
 8002b1a:	3710      	adds	r7, #16
 8002b1c:	46bd      	mov	sp, r7
 8002b1e:	bd80      	pop	{r7, pc}
 8002b20:	200006c8 	.word	0x200006c8

08002b24 <TimeExpired>:
 8002b24:	b580      	push	{r7, lr}
 8002b26:	b084      	sub	sp, #16
 8002b28:	af00      	add	r7, sp, #0
 8002b2a:	4603      	mov	r3, r0
 8002b2c:	71fb      	strb	r3, [r7, #7]
 8002b2e:	2300      	movs	r3, #0
 8002b30:	60fb      	str	r3, [r7, #12]
 8002b32:	b672      	cpsid	i
 8002b34:	f7ff ff72 	bl	8002a1c <GetMilSecTick>
 8002b38:	60b8      	str	r0, [r7, #8]
 8002b3a:	79fb      	ldrb	r3, [r7, #7]
 8002b3c:	2b0f      	cmp	r3, #15
 8002b3e:	d80a      	bhi.n	8002b56 <TimeExpired+0x32>
 8002b40:	79fa      	ldrb	r2, [r7, #7]
 8002b42:	492a      	ldr	r1, [pc, #168]	@ (8002bec <TimeExpired+0xc8>)
 8002b44:	4613      	mov	r3, r2
 8002b46:	005b      	lsls	r3, r3, #1
 8002b48:	4413      	add	r3, r2
 8002b4a:	00db      	lsls	r3, r3, #3
 8002b4c:	440b      	add	r3, r1
 8002b4e:	3310      	adds	r3, #16
 8002b50:	681b      	ldr	r3, [r3, #0]
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d102      	bne.n	8002b5c <TimeExpired+0x38>
 8002b56:	b662      	cpsie	i
 8002b58:	2300      	movs	r3, #0
 8002b5a:	e042      	b.n	8002be2 <TimeExpired+0xbe>
 8002b5c:	79fa      	ldrb	r2, [r7, #7]
 8002b5e:	4923      	ldr	r1, [pc, #140]	@ (8002bec <TimeExpired+0xc8>)
 8002b60:	4613      	mov	r3, r2
 8002b62:	005b      	lsls	r3, r3, #1
 8002b64:	4413      	add	r3, r2
 8002b66:	00db      	lsls	r3, r3, #3
 8002b68:	440b      	add	r3, r1
 8002b6a:	3304      	adds	r3, #4
 8002b6c:	681b      	ldr	r3, [r3, #0]
 8002b6e:	68ba      	ldr	r2, [r7, #8]
 8002b70:	429a      	cmp	r2, r3
 8002b72:	d30c      	bcc.n	8002b8e <TimeExpired+0x6a>
 8002b74:	79fa      	ldrb	r2, [r7, #7]
 8002b76:	491d      	ldr	r1, [pc, #116]	@ (8002bec <TimeExpired+0xc8>)
 8002b78:	4613      	mov	r3, r2
 8002b7a:	005b      	lsls	r3, r3, #1
 8002b7c:	4413      	add	r3, r2
 8002b7e:	00db      	lsls	r3, r3, #3
 8002b80:	440b      	add	r3, r1
 8002b82:	3304      	adds	r3, #4
 8002b84:	681b      	ldr	r3, [r3, #0]
 8002b86:	68ba      	ldr	r2, [r7, #8]
 8002b88:	1ad3      	subs	r3, r2, r3
 8002b8a:	60fb      	str	r3, [r7, #12]
 8002b8c:	e00e      	b.n	8002bac <TimeExpired+0x88>
 8002b8e:	79fa      	ldrb	r2, [r7, #7]
 8002b90:	4916      	ldr	r1, [pc, #88]	@ (8002bec <TimeExpired+0xc8>)
 8002b92:	4613      	mov	r3, r2
 8002b94:	005b      	lsls	r3, r3, #1
 8002b96:	4413      	add	r3, r2
 8002b98:	00db      	lsls	r3, r3, #3
 8002b9a:	440b      	add	r3, r1
 8002b9c:	3304      	adds	r3, #4
 8002b9e:	681a      	ldr	r2, [r3, #0]
 8002ba0:	68bb      	ldr	r3, [r7, #8]
 8002ba2:	1ad3      	subs	r3, r2, r3
 8002ba4:	60fb      	str	r3, [r7, #12]
 8002ba6:	68fb      	ldr	r3, [r7, #12]
 8002ba8:	43db      	mvns	r3, r3
 8002baa:	60fb      	str	r3, [r7, #12]
 8002bac:	79fa      	ldrb	r2, [r7, #7]
 8002bae:	490f      	ldr	r1, [pc, #60]	@ (8002bec <TimeExpired+0xc8>)
 8002bb0:	4613      	mov	r3, r2
 8002bb2:	005b      	lsls	r3, r3, #1
 8002bb4:	4413      	add	r3, r2
 8002bb6:	00db      	lsls	r3, r3, #3
 8002bb8:	440b      	add	r3, r1
 8002bba:	3308      	adds	r3, #8
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	68fa      	ldr	r2, [r7, #12]
 8002bc0:	429a      	cmp	r2, r3
 8002bc2:	d202      	bcs.n	8002bca <TimeExpired+0xa6>
 8002bc4:	b662      	cpsie	i
 8002bc6:	2300      	movs	r3, #0
 8002bc8:	e00b      	b.n	8002be2 <TimeExpired+0xbe>
 8002bca:	79fa      	ldrb	r2, [r7, #7]
 8002bcc:	4907      	ldr	r1, [pc, #28]	@ (8002bec <TimeExpired+0xc8>)
 8002bce:	4613      	mov	r3, r2
 8002bd0:	005b      	lsls	r3, r3, #1
 8002bd2:	4413      	add	r3, r2
 8002bd4:	00db      	lsls	r3, r3, #3
 8002bd6:	440b      	add	r3, r1
 8002bd8:	3304      	adds	r3, #4
 8002bda:	68ba      	ldr	r2, [r7, #8]
 8002bdc:	601a      	str	r2, [r3, #0]
 8002bde:	b662      	cpsie	i
 8002be0:	2301      	movs	r3, #1
 8002be2:	4618      	mov	r0, r3
 8002be4:	3710      	adds	r7, #16
 8002be6:	46bd      	mov	sp, r7
 8002be8:	bd80      	pop	{r7, pc}
 8002bea:	bf00      	nop
 8002bec:	200006c8 	.word	0x200006c8

08002bf0 <SysTick_Handler>:
 8002bf0:	b480      	push	{r7}
 8002bf2:	af00      	add	r7, sp, #0
 8002bf4:	4b04      	ldr	r3, [pc, #16]	@ (8002c08 <SysTick_Handler+0x18>)
 8002bf6:	681b      	ldr	r3, [r3, #0]
 8002bf8:	3301      	adds	r3, #1
 8002bfa:	4a03      	ldr	r2, [pc, #12]	@ (8002c08 <SysTick_Handler+0x18>)
 8002bfc:	6013      	str	r3, [r2, #0]
 8002bfe:	bf00      	nop
 8002c00:	46bd      	mov	sp, r7
 8002c02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c06:	4770      	bx	lr
 8002c08:	20000848 	.word	0x20000848

08002c0c <USART2_IRQHandler>:
 8002c0c:	b580      	push	{r7, lr}
 8002c0e:	b082      	sub	sp, #8
 8002c10:	af00      	add	r7, sp, #0
 8002c12:	b672      	cpsid	i
 8002c14:	f240 5125 	movw	r1, #1317	@ 0x525
 8002c18:	480e      	ldr	r0, [pc, #56]	@ (8002c54 <USART2_IRQHandler+0x48>)
 8002c1a:	f7ff fa5d 	bl	80020d8 <USART_GetITStatus>
 8002c1e:	4603      	mov	r3, r0
 8002c20:	2b01      	cmp	r3, #1
 8002c22:	d112      	bne.n	8002c4a <USART2_IRQHandler+0x3e>
 8002c24:	4b0c      	ldr	r3, [pc, #48]	@ (8002c58 <USART2_IRQHandler+0x4c>)
 8002c26:	681b      	ldr	r3, [r3, #0]
 8002c28:	607b      	str	r3, [r7, #4]
 8002c2a:	480a      	ldr	r0, [pc, #40]	@ (8002c54 <USART2_IRQHandler+0x48>)
 8002c2c:	f7ff f9e0 	bl	8001ff0 <USART_ReceiveData>
 8002c30:	4603      	mov	r3, r0
 8002c32:	b2db      	uxtb	r3, r3
 8002c34:	70fb      	strb	r3, [r7, #3]
 8002c36:	1cfb      	adds	r3, r7, #3
 8002c38:	4619      	mov	r1, r3
 8002c3a:	6878      	ldr	r0, [r7, #4]
 8002c3c:	f001 fd32 	bl	80046a4 <bufEnDat>
 8002c40:	f240 5125 	movw	r1, #1317	@ 0x525
 8002c44:	4803      	ldr	r0, [pc, #12]	@ (8002c54 <USART2_IRQHandler+0x48>)
 8002c46:	f7ff faa2 	bl	800218e <USART_ClearITPendingBit>
 8002c4a:	b662      	cpsie	i
 8002c4c:	bf00      	nop
 8002c4e:	3708      	adds	r7, #8
 8002c50:	46bd      	mov	sp, r7
 8002c52:	bd80      	pop	{r7, pc}
 8002c54:	40004400 	.word	0x40004400
 8002c58:	2000084c 	.word	0x2000084c

08002c5c <delayMicroseconds>:
 8002c5c:	b480      	push	{r7}
 8002c5e:	b083      	sub	sp, #12
 8002c60:	af00      	add	r7, sp, #0
 8002c62:	6078      	str	r0, [r7, #4]
 8002c64:	bf00      	nop
 8002c66:	370c      	adds	r7, #12
 8002c68:	46bd      	mov	sp, r7
 8002c6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c6e:	4770      	bx	lr

08002c70 <ucg_gpio_init>:
 8002c70:	b580      	push	{r7, lr}
 8002c72:	b082      	sub	sp, #8
 8002c74:	af00      	add	r7, sp, #0
 8002c76:	2101      	movs	r1, #1
 8002c78:	2007      	movs	r0, #7
 8002c7a:	f7ff f88d 	bl	8001d98 <RCC_AHB1PeriphClockCmd>
 8002c7e:	2301      	movs	r3, #1
 8002c80:	713b      	strb	r3, [r7, #4]
 8002c82:	2303      	movs	r3, #3
 8002c84:	717b      	strb	r3, [r7, #5]
 8002c86:	2300      	movs	r3, #0
 8002c88:	71bb      	strb	r3, [r7, #6]
 8002c8a:	2300      	movs	r3, #0
 8002c8c:	71fb      	strb	r3, [r7, #7]
 8002c8e:	f44f 7368 	mov.w	r3, #928	@ 0x3a0
 8002c92:	603b      	str	r3, [r7, #0]
 8002c94:	463b      	mov	r3, r7
 8002c96:	4619      	mov	r1, r3
 8002c98:	480a      	ldr	r0, [pc, #40]	@ (8002cc4 <ucg_gpio_init+0x54>)
 8002c9a:	f7fe fecb 	bl	8001a34 <GPIO_Init>
 8002c9e:	f44f 6388 	mov.w	r3, #1088	@ 0x440
 8002ca2:	603b      	str	r3, [r7, #0]
 8002ca4:	463b      	mov	r3, r7
 8002ca6:	4619      	mov	r1, r3
 8002ca8:	4807      	ldr	r0, [pc, #28]	@ (8002cc8 <ucg_gpio_init+0x58>)
 8002caa:	f7fe fec3 	bl	8001a34 <GPIO_Init>
 8002cae:	2380      	movs	r3, #128	@ 0x80
 8002cb0:	603b      	str	r3, [r7, #0]
 8002cb2:	463b      	mov	r3, r7
 8002cb4:	4619      	mov	r1, r3
 8002cb6:	4805      	ldr	r0, [pc, #20]	@ (8002ccc <ucg_gpio_init+0x5c>)
 8002cb8:	f7fe febc 	bl	8001a34 <GPIO_Init>
 8002cbc:	bf00      	nop
 8002cbe:	3708      	adds	r7, #8
 8002cc0:	46bd      	mov	sp, r7
 8002cc2:	bd80      	pop	{r7, pc}
 8002cc4:	40020000 	.word	0x40020000
 8002cc8:	40020400 	.word	0x40020400
 8002ccc:	40020800 	.word	0x40020800

08002cd0 <ucg_com_arduino_send_generic_SW_SPI>:
 8002cd0:	b580      	push	{r7, lr}
 8002cd2:	b084      	sub	sp, #16
 8002cd4:	af00      	add	r7, sp, #0
 8002cd6:	6078      	str	r0, [r7, #4]
 8002cd8:	460b      	mov	r3, r1
 8002cda:	70fb      	strb	r3, [r7, #3]
 8002cdc:	2308      	movs	r3, #8
 8002cde:	73fb      	strb	r3, [r7, #15]
 8002ce0:	f997 3003 	ldrsb.w	r3, [r7, #3]
 8002ce4:	2b00      	cmp	r3, #0
 8002ce6:	da05      	bge.n	8002cf4 <ucg_com_arduino_send_generic_SW_SPI+0x24>
 8002ce8:	2201      	movs	r2, #1
 8002cea:	2180      	movs	r1, #128	@ 0x80
 8002cec:	4814      	ldr	r0, [pc, #80]	@ (8002d40 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002cee:	f7fe ff49 	bl	8001b84 <GPIO_WriteBit>
 8002cf2:	e004      	b.n	8002cfe <ucg_com_arduino_send_generic_SW_SPI+0x2e>
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	2180      	movs	r1, #128	@ 0x80
 8002cf8:	4811      	ldr	r0, [pc, #68]	@ (8002d40 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002cfa:	f7fe ff43 	bl	8001b84 <GPIO_WriteBit>
 8002cfe:	2001      	movs	r0, #1
 8002d00:	f7ff ffac 	bl	8002c5c <delayMicroseconds>
 8002d04:	2201      	movs	r2, #1
 8002d06:	2120      	movs	r1, #32
 8002d08:	480d      	ldr	r0, [pc, #52]	@ (8002d40 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002d0a:	f7fe ff3b 	bl	8001b84 <GPIO_WriteBit>
 8002d0e:	2001      	movs	r0, #1
 8002d10:	f7ff ffa4 	bl	8002c5c <delayMicroseconds>
 8002d14:	7bfb      	ldrb	r3, [r7, #15]
 8002d16:	3b01      	subs	r3, #1
 8002d18:	73fb      	strb	r3, [r7, #15]
 8002d1a:	2200      	movs	r2, #0
 8002d1c:	2120      	movs	r1, #32
 8002d1e:	4808      	ldr	r0, [pc, #32]	@ (8002d40 <ucg_com_arduino_send_generic_SW_SPI+0x70>)
 8002d20:	f7fe ff30 	bl	8001b84 <GPIO_WriteBit>
 8002d24:	2001      	movs	r0, #1
 8002d26:	f7ff ff99 	bl	8002c5c <delayMicroseconds>
 8002d2a:	78fb      	ldrb	r3, [r7, #3]
 8002d2c:	005b      	lsls	r3, r3, #1
 8002d2e:	70fb      	strb	r3, [r7, #3]
 8002d30:	7bfb      	ldrb	r3, [r7, #15]
 8002d32:	2b00      	cmp	r3, #0
 8002d34:	d1d4      	bne.n	8002ce0 <ucg_com_arduino_send_generic_SW_SPI+0x10>
 8002d36:	bf00      	nop
 8002d38:	3710      	adds	r7, #16
 8002d3a:	46bd      	mov	sp, r7
 8002d3c:	bd80      	pop	{r7, pc}
 8002d3e:	bf00      	nop
 8002d40:	40020000 	.word	0x40020000

08002d44 <ucg_com_arduino_generic_SW_SPI>:
 8002d44:	b580      	push	{r7, lr}
 8002d46:	b084      	sub	sp, #16
 8002d48:	af00      	add	r7, sp, #0
 8002d4a:	60f8      	str	r0, [r7, #12]
 8002d4c:	607b      	str	r3, [r7, #4]
 8002d4e:	460b      	mov	r3, r1
 8002d50:	817b      	strh	r3, [r7, #10]
 8002d52:	4613      	mov	r3, r2
 8002d54:	813b      	strh	r3, [r7, #8]
 8002d56:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8002d5a:	3b0a      	subs	r3, #10
 8002d5c:	2b0b      	cmp	r3, #11
 8002d5e:	f200 80dc 	bhi.w	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002d62:	a201      	add	r2, pc, #4	@ (adr r2, 8002d68 <ucg_com_arduino_generic_SW_SPI+0x24>)
 8002d64:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002d68:	08002d99 	.word	0x08002d99
 8002d6c:	08002f1b 	.word	0x08002f1b
 8002d70:	08002deb 	.word	0x08002deb
 8002d74:	08002df5 	.word	0x08002df5
 8002d78:	08002e05 	.word	0x08002e05
 8002d7c:	08002e15 	.word	0x08002e15
 8002d80:	08002e27 	.word	0x08002e27
 8002d84:	08002e47 	.word	0x08002e47
 8002d88:	08002e6f 	.word	0x08002e6f
 8002d8c:	08002ea5 	.word	0x08002ea5
 8002d90:	08002ec3 	.word	0x08002ec3
 8002d94:	08002f13 	.word	0x08002f13
 8002d98:	f7ff ff6a 	bl	8002c70 <ucg_gpio_init>
 8002d9c:	2201      	movs	r2, #1
 8002d9e:	2180      	movs	r1, #128	@ 0x80
 8002da0:	4860      	ldr	r0, [pc, #384]	@ (8002f24 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002da2:	f7fe feef 	bl	8001b84 <GPIO_WriteBit>
 8002da6:	2201      	movs	r2, #1
 8002da8:	2140      	movs	r1, #64	@ 0x40
 8002daa:	485f      	ldr	r0, [pc, #380]	@ (8002f28 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8002dac:	f7fe feea 	bl	8001b84 <GPIO_WriteBit>
 8002db0:	2201      	movs	r2, #1
 8002db2:	2180      	movs	r1, #128	@ 0x80
 8002db4:	485d      	ldr	r0, [pc, #372]	@ (8002f2c <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8002db6:	f7fe fee5 	bl	8001b84 <GPIO_WriteBit>
 8002dba:	2201      	movs	r2, #1
 8002dbc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002dc0:	4858      	ldr	r0, [pc, #352]	@ (8002f24 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002dc2:	f7fe fedf 	bl	8001b84 <GPIO_WriteBit>
 8002dc6:	2200      	movs	r2, #0
 8002dc8:	2120      	movs	r1, #32
 8002dca:	4856      	ldr	r0, [pc, #344]	@ (8002f24 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002dcc:	f7fe feda 	bl	8001b84 <GPIO_WriteBit>
 8002dd0:	2201      	movs	r2, #1
 8002dd2:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 8002dd6:	4854      	ldr	r0, [pc, #336]	@ (8002f28 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8002dd8:	f7fe fed4 	bl	8001b84 <GPIO_WriteBit>
 8002ddc:	2201      	movs	r2, #1
 8002dde:	f44f 7180 	mov.w	r1, #256	@ 0x100
 8002de2:	4850      	ldr	r0, [pc, #320]	@ (8002f24 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002de4:	f7fe fece 	bl	8001b84 <GPIO_WriteBit>
 8002de8:	e097      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002dea:	893b      	ldrh	r3, [r7, #8]
 8002dec:	4618      	mov	r0, r3
 8002dee:	f7ff ff35 	bl	8002c5c <delayMicroseconds>
 8002df2:	e092      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002df4:	893b      	ldrh	r3, [r7, #8]
 8002df6:	b2db      	uxtb	r3, r3
 8002df8:	461a      	mov	r2, r3
 8002dfa:	2180      	movs	r1, #128	@ 0x80
 8002dfc:	484b      	ldr	r0, [pc, #300]	@ (8002f2c <ucg_com_arduino_generic_SW_SPI+0x1e8>)
 8002dfe:	f7fe fec1 	bl	8001b84 <GPIO_WriteBit>
 8002e02:	e08a      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002e04:	893b      	ldrh	r3, [r7, #8]
 8002e06:	b2db      	uxtb	r3, r3
 8002e08:	461a      	mov	r2, r3
 8002e0a:	2140      	movs	r1, #64	@ 0x40
 8002e0c:	4846      	ldr	r0, [pc, #280]	@ (8002f28 <ucg_com_arduino_generic_SW_SPI+0x1e4>)
 8002e0e:	f7fe feb9 	bl	8001b84 <GPIO_WriteBit>
 8002e12:	e082      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002e14:	893b      	ldrh	r3, [r7, #8]
 8002e16:	b2db      	uxtb	r3, r3
 8002e18:	461a      	mov	r2, r3
 8002e1a:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002e1e:	4841      	ldr	r0, [pc, #260]	@ (8002f24 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002e20:	f7fe feb0 	bl	8001b84 <GPIO_WriteBit>
 8002e24:	e079      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002e26:	893b      	ldrh	r3, [r7, #8]
 8002e28:	b2db      	uxtb	r3, r3
 8002e2a:	4619      	mov	r1, r3
 8002e2c:	68f8      	ldr	r0, [r7, #12]
 8002e2e:	f7ff ff4f 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002e32:	e072      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	781b      	ldrb	r3, [r3, #0]
 8002e38:	4619      	mov	r1, r3
 8002e3a:	68f8      	ldr	r0, [r7, #12]
 8002e3c:	f7ff ff48 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002e40:	893b      	ldrh	r3, [r7, #8]
 8002e42:	3b01      	subs	r3, #1
 8002e44:	813b      	strh	r3, [r7, #8]
 8002e46:	893b      	ldrh	r3, [r7, #8]
 8002e48:	2b00      	cmp	r3, #0
 8002e4a:	d1f3      	bne.n	8002e34 <ucg_com_arduino_generic_SW_SPI+0xf0>
 8002e4c:	e065      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002e4e:	687b      	ldr	r3, [r7, #4]
 8002e50:	781b      	ldrb	r3, [r3, #0]
 8002e52:	4619      	mov	r1, r3
 8002e54:	68f8      	ldr	r0, [r7, #12]
 8002e56:	f7ff ff3b 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002e5a:	687b      	ldr	r3, [r7, #4]
 8002e5c:	3301      	adds	r3, #1
 8002e5e:	781b      	ldrb	r3, [r3, #0]
 8002e60:	4619      	mov	r1, r3
 8002e62:	68f8      	ldr	r0, [r7, #12]
 8002e64:	f7ff ff34 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002e68:	893b      	ldrh	r3, [r7, #8]
 8002e6a:	3b01      	subs	r3, #1
 8002e6c:	813b      	strh	r3, [r7, #8]
 8002e6e:	893b      	ldrh	r3, [r7, #8]
 8002e70:	2b00      	cmp	r3, #0
 8002e72:	d1ec      	bne.n	8002e4e <ucg_com_arduino_generic_SW_SPI+0x10a>
 8002e74:	e051      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002e76:	687b      	ldr	r3, [r7, #4]
 8002e78:	781b      	ldrb	r3, [r3, #0]
 8002e7a:	4619      	mov	r1, r3
 8002e7c:	68f8      	ldr	r0, [r7, #12]
 8002e7e:	f7ff ff27 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002e82:	687b      	ldr	r3, [r7, #4]
 8002e84:	3301      	adds	r3, #1
 8002e86:	781b      	ldrb	r3, [r3, #0]
 8002e88:	4619      	mov	r1, r3
 8002e8a:	68f8      	ldr	r0, [r7, #12]
 8002e8c:	f7ff ff20 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002e90:	687b      	ldr	r3, [r7, #4]
 8002e92:	3302      	adds	r3, #2
 8002e94:	781b      	ldrb	r3, [r3, #0]
 8002e96:	4619      	mov	r1, r3
 8002e98:	68f8      	ldr	r0, [r7, #12]
 8002e9a:	f7ff ff19 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002e9e:	893b      	ldrh	r3, [r7, #8]
 8002ea0:	3b01      	subs	r3, #1
 8002ea2:	813b      	strh	r3, [r7, #8]
 8002ea4:	893b      	ldrh	r3, [r7, #8]
 8002ea6:	2b00      	cmp	r3, #0
 8002ea8:	d1e5      	bne.n	8002e76 <ucg_com_arduino_generic_SW_SPI+0x132>
 8002eaa:	e036      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002eac:	687b      	ldr	r3, [r7, #4]
 8002eae:	1c5a      	adds	r2, r3, #1
 8002eb0:	607a      	str	r2, [r7, #4]
 8002eb2:	781b      	ldrb	r3, [r3, #0]
 8002eb4:	4619      	mov	r1, r3
 8002eb6:	68f8      	ldr	r0, [r7, #12]
 8002eb8:	f7ff ff0a 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002ebc:	893b      	ldrh	r3, [r7, #8]
 8002ebe:	3b01      	subs	r3, #1
 8002ec0:	813b      	strh	r3, [r7, #8]
 8002ec2:	893b      	ldrh	r3, [r7, #8]
 8002ec4:	2b00      	cmp	r3, #0
 8002ec6:	d1f1      	bne.n	8002eac <ucg_com_arduino_generic_SW_SPI+0x168>
 8002ec8:	e027      	b.n	8002f1a <ucg_com_arduino_generic_SW_SPI+0x1d6>
 8002eca:	687b      	ldr	r3, [r7, #4]
 8002ecc:	781b      	ldrb	r3, [r3, #0]
 8002ece:	2b00      	cmp	r3, #0
 8002ed0:	d010      	beq.n	8002ef4 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8002ed2:	687b      	ldr	r3, [r7, #4]
 8002ed4:	781b      	ldrb	r3, [r3, #0]
 8002ed6:	2b01      	cmp	r3, #1
 8002ed8:	d106      	bne.n	8002ee8 <ucg_com_arduino_generic_SW_SPI+0x1a4>
 8002eda:	2200      	movs	r2, #0
 8002edc:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002ee0:	4810      	ldr	r0, [pc, #64]	@ (8002f24 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002ee2:	f7fe fe4f 	bl	8001b84 <GPIO_WriteBit>
 8002ee6:	e005      	b.n	8002ef4 <ucg_com_arduino_generic_SW_SPI+0x1b0>
 8002ee8:	2201      	movs	r2, #1
 8002eea:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002eee:	480d      	ldr	r0, [pc, #52]	@ (8002f24 <ucg_com_arduino_generic_SW_SPI+0x1e0>)
 8002ef0:	f7fe fe48 	bl	8001b84 <GPIO_WriteBit>
 8002ef4:	687b      	ldr	r3, [r7, #4]
 8002ef6:	3301      	adds	r3, #1
 8002ef8:	607b      	str	r3, [r7, #4]
 8002efa:	687b      	ldr	r3, [r7, #4]
 8002efc:	781b      	ldrb	r3, [r3, #0]
 8002efe:	4619      	mov	r1, r3
 8002f00:	68f8      	ldr	r0, [r7, #12]
 8002f02:	f7ff fee5 	bl	8002cd0 <ucg_com_arduino_send_generic_SW_SPI>
 8002f06:	687b      	ldr	r3, [r7, #4]
 8002f08:	3301      	adds	r3, #1
 8002f0a:	607b      	str	r3, [r7, #4]
 8002f0c:	893b      	ldrh	r3, [r7, #8]
 8002f0e:	3b01      	subs	r3, #1
 8002f10:	813b      	strh	r3, [r7, #8]
 8002f12:	893b      	ldrh	r3, [r7, #8]
 8002f14:	2b00      	cmp	r3, #0
 8002f16:	d1d8      	bne.n	8002eca <ucg_com_arduino_generic_SW_SPI+0x186>
 8002f18:	bf00      	nop
 8002f1a:	2301      	movs	r3, #1
 8002f1c:	4618      	mov	r0, r3
 8002f1e:	3710      	adds	r7, #16
 8002f20:	46bd      	mov	sp, r7
 8002f22:	bd80      	pop	{r7, pc}
 8002f24:	40020000 	.word	0x40020000
 8002f28:	40020400 	.word	0x40020400
 8002f2c:	40020800 	.word	0x40020800

08002f30 <Ucglib4WireSWSPI_begin>:
 8002f30:	b580      	push	{r7, lr}
 8002f32:	b082      	sub	sp, #8
 8002f34:	af00      	add	r7, sp, #0
 8002f36:	6078      	str	r0, [r7, #4]
 8002f38:	460b      	mov	r3, r1
 8002f3a:	70fb      	strb	r3, [r7, #3]
 8002f3c:	4b07      	ldr	r3, [pc, #28]	@ (8002f5c <Ucglib4WireSWSPI_begin+0x2c>)
 8002f3e:	4a08      	ldr	r2, [pc, #32]	@ (8002f60 <Ucglib4WireSWSPI_begin+0x30>)
 8002f40:	4908      	ldr	r1, [pc, #32]	@ (8002f64 <Ucglib4WireSWSPI_begin+0x34>)
 8002f42:	6878      	ldr	r0, [r7, #4]
 8002f44:	f001 f9a2 	bl	800428c <ucg_Init>
 8002f48:	78fb      	ldrb	r3, [r7, #3]
 8002f4a:	4619      	mov	r1, r3
 8002f4c:	6878      	ldr	r0, [r7, #4]
 8002f4e:	f000 ff86 	bl	8003e5e <ucg_SetFontMode>
 8002f52:	bf00      	nop
 8002f54:	3708      	adds	r7, #8
 8002f56:	46bd      	mov	sp, r7
 8002f58:	bd80      	pop	{r7, pc}
 8002f5a:	bf00      	nop
 8002f5c:	08002d45 	.word	0x08002d45
 8002f60:	0800359d 	.word	0x0800359d
 8002f64:	080036c5 	.word	0x080036c5

08002f68 <ucg_DrawBox>:
 8002f68:	b580      	push	{r7, lr}
 8002f6a:	b084      	sub	sp, #16
 8002f6c:	af00      	add	r7, sp, #0
 8002f6e:	60f8      	str	r0, [r7, #12]
 8002f70:	4608      	mov	r0, r1
 8002f72:	4611      	mov	r1, r2
 8002f74:	461a      	mov	r2, r3
 8002f76:	4603      	mov	r3, r0
 8002f78:	817b      	strh	r3, [r7, #10]
 8002f7a:	460b      	mov	r3, r1
 8002f7c:	813b      	strh	r3, [r7, #8]
 8002f7e:	4613      	mov	r3, r2
 8002f80:	80fb      	strh	r3, [r7, #6]
 8002f82:	e014      	b.n	8002fae <ucg_DrawBox+0x46>
 8002f84:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8002f88:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8002f8c:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8002f90:	68f8      	ldr	r0, [r7, #12]
 8002f92:	f001 f9ed 	bl	8004370 <ucg_DrawHLine>
 8002f96:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8002f9a:	b29b      	uxth	r3, r3
 8002f9c:	3b01      	subs	r3, #1
 8002f9e:	b29b      	uxth	r3, r3
 8002fa0:	833b      	strh	r3, [r7, #24]
 8002fa2:	f9b7 3008 	ldrsh.w	r3, [r7, #8]
 8002fa6:	b29b      	uxth	r3, r3
 8002fa8:	3301      	adds	r3, #1
 8002faa:	b29b      	uxth	r3, r3
 8002fac:	813b      	strh	r3, [r7, #8]
 8002fae:	f9b7 3018 	ldrsh.w	r3, [r7, #24]
 8002fb2:	2b00      	cmp	r3, #0
 8002fb4:	dce6      	bgt.n	8002f84 <ucg_DrawBox+0x1c>
 8002fb6:	bf00      	nop
 8002fb8:	3710      	adds	r7, #16
 8002fba:	46bd      	mov	sp, r7
 8002fbc:	bd80      	pop	{r7, pc}

08002fbe <ucg_ClearScreen>:
 8002fbe:	b580      	push	{r7, lr}
 8002fc0:	b084      	sub	sp, #16
 8002fc2:	af02      	add	r7, sp, #8
 8002fc4:	6078      	str	r0, [r7, #4]
 8002fc6:	2300      	movs	r3, #0
 8002fc8:	9300      	str	r3, [sp, #0]
 8002fca:	2300      	movs	r3, #0
 8002fcc:	2200      	movs	r2, #0
 8002fce:	2100      	movs	r1, #0
 8002fd0:	6878      	ldr	r0, [r7, #4]
 8002fd2:	f001 f9ec 	bl	80043ae <ucg_SetColor>
 8002fd6:	6878      	ldr	r0, [r7, #4]
 8002fd8:	f000 fb3b 	bl	8003652 <ucg_SetMaxClipRange>
 8002fdc:	687b      	ldr	r3, [r7, #4]
 8002fde:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8002fe2:	687b      	ldr	r3, [r7, #4]
 8002fe4:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8002fe8:	9300      	str	r3, [sp, #0]
 8002fea:	4613      	mov	r3, r2
 8002fec:	2200      	movs	r2, #0
 8002fee:	2100      	movs	r1, #0
 8002ff0:	6878      	ldr	r0, [r7, #4]
 8002ff2:	f7ff ffb9 	bl	8002f68 <ucg_DrawBox>
 8002ff6:	23ff      	movs	r3, #255	@ 0xff
 8002ff8:	9300      	str	r3, [sp, #0]
 8002ffa:	23ff      	movs	r3, #255	@ 0xff
 8002ffc:	22ff      	movs	r2, #255	@ 0xff
 8002ffe:	2100      	movs	r1, #0
 8003000:	6878      	ldr	r0, [r7, #4]
 8003002:	f001 f9d4 	bl	80043ae <ucg_SetColor>
 8003006:	bf00      	nop
 8003008:	3708      	adds	r7, #8
 800300a:	46bd      	mov	sp, r7
 800300c:	bd80      	pop	{r7, pc}

0800300e <ucg_ccs_init>:
 800300e:	b480      	push	{r7}
 8003010:	b083      	sub	sp, #12
 8003012:	af00      	add	r7, sp, #0
 8003014:	6078      	str	r0, [r7, #4]
 8003016:	4608      	mov	r0, r1
 8003018:	4611      	mov	r1, r2
 800301a:	461a      	mov	r2, r3
 800301c:	4603      	mov	r3, r0
 800301e:	70fb      	strb	r3, [r7, #3]
 8003020:	460b      	mov	r3, r1
 8003022:	70bb      	strb	r3, [r7, #2]
 8003024:	4613      	mov	r3, r2
 8003026:	803b      	strh	r3, [r7, #0]
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	78fa      	ldrb	r2, [r7, #3]
 800302c:	705a      	strb	r2, [r3, #1]
 800302e:	78bb      	ldrb	r3, [r7, #2]
 8003030:	b29a      	uxth	r2, r3
 8003032:	78fb      	ldrb	r3, [r7, #3]
 8003034:	b29b      	uxth	r3, r3
 8003036:	1ad3      	subs	r3, r2, r3
 8003038:	b29b      	uxth	r3, r3
 800303a:	b21a      	sxth	r2, r3
 800303c:	687b      	ldr	r3, [r7, #4]
 800303e:	809a      	strh	r2, [r3, #4]
 8003040:	883b      	ldrh	r3, [r7, #0]
 8003042:	3b01      	subs	r3, #1
 8003044:	b29b      	uxth	r3, r3
 8003046:	b21a      	sxth	r2, r3
 8003048:	687b      	ldr	r3, [r7, #4]
 800304a:	811a      	strh	r2, [r3, #8]
 800304c:	687b      	ldr	r3, [r7, #4]
 800304e:	2201      	movs	r2, #1
 8003050:	805a      	strh	r2, [r3, #2]
 8003052:	687b      	ldr	r3, [r7, #4]
 8003054:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003058:	461a      	mov	r2, r3
 800305a:	687b      	ldr	r3, [r7, #4]
 800305c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003060:	fb92 f3f3 	sdiv	r3, r2, r3
 8003064:	b21a      	sxth	r2, r3
 8003066:	687b      	ldr	r3, [r7, #4]
 8003068:	80da      	strh	r2, [r3, #6]
 800306a:	687b      	ldr	r3, [r7, #4]
 800306c:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003070:	2b00      	cmp	r3, #0
 8003072:	da0c      	bge.n	800308e <ucg_ccs_init+0x80>
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800307a:	b29b      	uxth	r3, r3
 800307c:	425b      	negs	r3, r3
 800307e:	b29b      	uxth	r3, r3
 8003080:	b21a      	sxth	r2, r3
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	809a      	strh	r2, [r3, #4]
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800308c:	805a      	strh	r2, [r3, #2]
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 8003094:	687a      	ldr	r2, [r7, #4]
 8003096:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 800309a:	fb93 f1f2 	sdiv	r1, r3, r2
 800309e:	fb02 f201 	mul.w	r2, r2, r1
 80030a2:	1a9b      	subs	r3, r3, r2
 80030a4:	b21a      	sxth	r2, r3
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	815a      	strh	r2, [r3, #10]
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80030b0:	0fda      	lsrs	r2, r3, #31
 80030b2:	4413      	add	r3, r2
 80030b4:	105b      	asrs	r3, r3, #1
 80030b6:	b21a      	sxth	r2, r3
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	819a      	strh	r2, [r3, #12]
 80030bc:	687b      	ldr	r3, [r7, #4]
 80030be:	78fa      	ldrb	r2, [r7, #3]
 80030c0:	701a      	strb	r2, [r3, #0]
 80030c2:	bf00      	nop
 80030c4:	370c      	adds	r7, #12
 80030c6:	46bd      	mov	sp, r7
 80030c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030cc:	4770      	bx	lr

080030ce <ucg_ccs_step>:
 80030ce:	b480      	push	{r7}
 80030d0:	b083      	sub	sp, #12
 80030d2:	af00      	add	r7, sp, #0
 80030d4:	6078      	str	r0, [r7, #4]
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	781a      	ldrb	r2, [r3, #0]
 80030da:	687b      	ldr	r3, [r7, #4]
 80030dc:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80030e0:	b2db      	uxtb	r3, r3
 80030e2:	4413      	add	r3, r2
 80030e4:	b2da      	uxtb	r2, r3
 80030e6:	687b      	ldr	r3, [r7, #4]
 80030e8:	701a      	strb	r2, [r3, #0]
 80030ea:	687b      	ldr	r3, [r7, #4]
 80030ec:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 80030f0:	b29a      	uxth	r2, r3
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 80030f8:	b29b      	uxth	r3, r3
 80030fa:	4413      	add	r3, r2
 80030fc:	b29b      	uxth	r3, r3
 80030fe:	b21a      	sxth	r2, r3
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	819a      	strh	r2, [r3, #12]
 8003104:	687b      	ldr	r3, [r7, #4]
 8003106:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003110:	429a      	cmp	r2, r3
 8003112:	db16      	blt.n	8003142 <ucg_ccs_step+0x74>
 8003114:	687b      	ldr	r3, [r7, #4]
 8003116:	781a      	ldrb	r2, [r3, #0]
 8003118:	687b      	ldr	r3, [r7, #4]
 800311a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800311e:	b2db      	uxtb	r3, r3
 8003120:	4413      	add	r3, r2
 8003122:	b2da      	uxtb	r2, r3
 8003124:	687b      	ldr	r3, [r7, #4]
 8003126:	701a      	strb	r2, [r3, #0]
 8003128:	687b      	ldr	r3, [r7, #4]
 800312a:	f9b3 300c 	ldrsh.w	r3, [r3, #12]
 800312e:	b29a      	uxth	r2, r3
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8003136:	b29b      	uxth	r3, r3
 8003138:	1ad3      	subs	r3, r2, r3
 800313a:	b29b      	uxth	r3, r3
 800313c:	b21a      	sxth	r2, r3
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	819a      	strh	r2, [r3, #12]
 8003142:	bf00      	nop
 8003144:	370c      	adds	r7, #12
 8003146:	46bd      	mov	sp, r7
 8003148:	f85d 7b04 	ldr.w	r7, [sp], #4
 800314c:	4770      	bx	lr

0800314e <ucg_ccs_seek>:
 800314e:	b480      	push	{r7}
 8003150:	b085      	sub	sp, #20
 8003152:	af00      	add	r7, sp, #0
 8003154:	6078      	str	r0, [r7, #4]
 8003156:	460b      	mov	r3, r1
 8003158:	807b      	strh	r3, [r7, #2]
 800315a:	687b      	ldr	r3, [r7, #4]
 800315c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8003160:	b2da      	uxtb	r2, r3
 8003162:	687b      	ldr	r3, [r7, #4]
 8003164:	701a      	strb	r2, [r3, #0]
 8003166:	687b      	ldr	r3, [r7, #4]
 8003168:	781a      	ldrb	r2, [r3, #0]
 800316a:	887b      	ldrh	r3, [r7, #2]
 800316c:	b2db      	uxtb	r3, r3
 800316e:	fb12 f303 	smulbb	r3, r2, r3
 8003172:	b2da      	uxtb	r2, r3
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	701a      	strb	r2, [r3, #0]
 8003178:	687b      	ldr	r3, [r7, #4]
 800317a:	f9b3 300a 	ldrsh.w	r3, [r3, #10]
 800317e:	b29a      	uxth	r2, r3
 8003180:	887b      	ldrh	r3, [r7, #2]
 8003182:	fb12 f303 	smulbb	r3, r2, r3
 8003186:	b29a      	uxth	r2, r3
 8003188:	687b      	ldr	r3, [r7, #4]
 800318a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 800318e:	0fd9      	lsrs	r1, r3, #31
 8003190:	440b      	add	r3, r1
 8003192:	105b      	asrs	r3, r3, #1
 8003194:	b21b      	sxth	r3, r3
 8003196:	b29b      	uxth	r3, r3
 8003198:	4413      	add	r3, r2
 800319a:	b29b      	uxth	r3, r3
 800319c:	81fb      	strh	r3, [r7, #14]
 800319e:	687b      	ldr	r3, [r7, #4]
 80031a0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 80031a4:	2b00      	cmp	r3, #0
 80031a6:	db0e      	blt.n	80031c6 <ucg_ccs_seek+0x78>
 80031a8:	687b      	ldr	r3, [r7, #4]
 80031aa:	781a      	ldrb	r2, [r3, #0]
 80031ac:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80031b0:	6879      	ldr	r1, [r7, #4]
 80031b2:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80031b6:	fb93 f3f1 	sdiv	r3, r3, r1
 80031ba:	b2db      	uxtb	r3, r3
 80031bc:	4413      	add	r3, r2
 80031be:	b2da      	uxtb	r2, r3
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	701a      	strb	r2, [r3, #0]
 80031c4:	e00d      	b.n	80031e2 <ucg_ccs_seek+0x94>
 80031c6:	687b      	ldr	r3, [r7, #4]
 80031c8:	781a      	ldrb	r2, [r3, #0]
 80031ca:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80031ce:	6879      	ldr	r1, [r7, #4]
 80031d0:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 80031d4:	fb93 f3f1 	sdiv	r3, r3, r1
 80031d8:	b2db      	uxtb	r3, r3
 80031da:	1ad3      	subs	r3, r2, r3
 80031dc:	b2da      	uxtb	r2, r3
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	701a      	strb	r2, [r3, #0]
 80031e2:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80031e6:	687a      	ldr	r2, [r7, #4]
 80031e8:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 80031ec:	fb93 f1f2 	sdiv	r1, r3, r2
 80031f0:	fb02 f201 	mul.w	r2, r2, r1
 80031f4:	1a9b      	subs	r3, r3, r2
 80031f6:	b21a      	sxth	r2, r3
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	819a      	strh	r2, [r3, #12]
 80031fc:	687b      	ldr	r3, [r7, #4]
 80031fe:	781a      	ldrb	r2, [r3, #0]
 8003200:	687b      	ldr	r3, [r7, #4]
 8003202:	785b      	ldrb	r3, [r3, #1]
 8003204:	4413      	add	r3, r2
 8003206:	b2da      	uxtb	r2, r3
 8003208:	687b      	ldr	r3, [r7, #4]
 800320a:	701a      	strb	r2, [r3, #0]
 800320c:	bf00      	nop
 800320e:	3714      	adds	r7, #20
 8003210:	46bd      	mov	sp, r7
 8003212:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003216:	4770      	bx	lr

08003218 <ucg_dev_default_cb>:
 8003218:	b580      	push	{r7, lr}
 800321a:	b084      	sub	sp, #16
 800321c:	af00      	add	r7, sp, #0
 800321e:	60f8      	str	r0, [r7, #12]
 8003220:	460b      	mov	r3, r1
 8003222:	607a      	str	r2, [r7, #4]
 8003224:	817b      	strh	r3, [r7, #10]
 8003226:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800322a:	2b0c      	cmp	r3, #12
 800322c:	d00a      	beq.n	8003244 <ucg_dev_default_cb+0x2c>
 800322e:	2b17      	cmp	r3, #23
 8003230:	d10f      	bne.n	8003252 <ucg_dev_default_cb+0x3a>
 8003232:	68fb      	ldr	r3, [r7, #12]
 8003234:	68db      	ldr	r3, [r3, #12]
 8003236:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800323a:	687a      	ldr	r2, [r7, #4]
 800323c:	68f8      	ldr	r0, [r7, #12]
 800323e:	4798      	blx	r3
 8003240:	4603      	mov	r3, r0
 8003242:	e007      	b.n	8003254 <ucg_dev_default_cb+0x3c>
 8003244:	68fb      	ldr	r3, [r7, #12]
 8003246:	687a      	ldr	r2, [r7, #4]
 8003248:	3370      	adds	r3, #112	@ 0x70
 800324a:	6810      	ldr	r0, [r2, #0]
 800324c:	6851      	ldr	r1, [r2, #4]
 800324e:	c303      	stmia	r3!, {r0, r1}
 8003250:	bf00      	nop
 8003252:	2301      	movs	r3, #1
 8003254:	4618      	mov	r0, r3
 8003256:	3710      	adds	r7, #16
 8003258:	46bd      	mov	sp, r7
 800325a:	bd80      	pop	{r7, pc}

0800325c <ucg_ext_none>:
 800325c:	b480      	push	{r7}
 800325e:	b085      	sub	sp, #20
 8003260:	af00      	add	r7, sp, #0
 8003262:	60f8      	str	r0, [r7, #12]
 8003264:	460b      	mov	r3, r1
 8003266:	607a      	str	r2, [r7, #4]
 8003268:	817b      	strh	r3, [r7, #10]
 800326a:	2301      	movs	r3, #1
 800326c:	4618      	mov	r0, r3
 800326e:	3714      	adds	r7, #20
 8003270:	46bd      	mov	sp, r7
 8003272:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003276:	4770      	bx	lr

08003278 <ucg_handle_st7735_l90fx>:
 8003278:	b590      	push	{r4, r7, lr}
 800327a:	b085      	sub	sp, #20
 800327c:	af00      	add	r7, sp, #0
 800327e:	6078      	str	r0, [r7, #4]
 8003280:	6878      	ldr	r0, [r7, #4]
 8003282:	f001 fb55 	bl	8004930 <ucg_clip_l90fx>
 8003286:	4603      	mov	r3, r0
 8003288:	2b00      	cmp	r3, #0
 800328a:	d053      	beq.n	8003334 <ucg_handle_st7735_l90fx+0xbc>
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8003292:	2b01      	cmp	r3, #1
 8003294:	d008      	beq.n	80032a8 <ucg_handle_st7735_l90fx+0x30>
 8003296:	2b02      	cmp	r3, #2
 8003298:	d00b      	beq.n	80032b2 <ucg_handle_st7735_l90fx+0x3a>
 800329a:	2b00      	cmp	r3, #0
 800329c:	d11b      	bne.n	80032d6 <ucg_handle_st7735_l90fx+0x5e>
 800329e:	4928      	ldr	r1, [pc, #160]	@ (8003340 <ucg_handle_st7735_l90fx+0xc8>)
 80032a0:	6878      	ldr	r0, [r7, #4]
 80032a2:	f001 fe73 	bl	8004f8c <ucg_com_SendCmdSeq>
 80032a6:	e028      	b.n	80032fa <ucg_handle_st7735_l90fx+0x82>
 80032a8:	4926      	ldr	r1, [pc, #152]	@ (8003344 <ucg_handle_st7735_l90fx+0xcc>)
 80032aa:	6878      	ldr	r0, [r7, #4]
 80032ac:	f001 fe6e 	bl	8004f8c <ucg_com_SendCmdSeq>
 80032b0:	e023      	b.n	80032fa <ucg_handle_st7735_l90fx+0x82>
 80032b2:	687b      	ldr	r3, [r7, #4]
 80032b4:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80032b6:	81fb      	strh	r3, [r7, #14]
 80032b8:	89fb      	ldrh	r3, [r7, #14]
 80032ba:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 80032be:	b29b      	uxth	r3, r3
 80032c0:	b21a      	sxth	r2, r3
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	849a      	strh	r2, [r3, #36]	@ 0x24
 80032c6:	4920      	ldr	r1, [pc, #128]	@ (8003348 <ucg_handle_st7735_l90fx+0xd0>)
 80032c8:	6878      	ldr	r0, [r7, #4]
 80032ca:	f001 fe5f 	bl	8004f8c <ucg_com_SendCmdSeq>
 80032ce:	687b      	ldr	r3, [r7, #4]
 80032d0:	89fa      	ldrh	r2, [r7, #14]
 80032d2:	849a      	strh	r2, [r3, #36]	@ 0x24
 80032d4:	e011      	b.n	80032fa <ucg_handle_st7735_l90fx+0x82>
 80032d6:	687b      	ldr	r3, [r7, #4]
 80032d8:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80032da:	81fb      	strh	r3, [r7, #14]
 80032dc:	89fb      	ldrh	r3, [r7, #14]
 80032de:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 80032e2:	b29b      	uxth	r3, r3
 80032e4:	b21a      	sxth	r2, r3
 80032e6:	687b      	ldr	r3, [r7, #4]
 80032e8:	84da      	strh	r2, [r3, #38]	@ 0x26
 80032ea:	4918      	ldr	r1, [pc, #96]	@ (800334c <ucg_handle_st7735_l90fx+0xd4>)
 80032ec:	6878      	ldr	r0, [r7, #4]
 80032ee:	f001 fe4d 	bl	8004f8c <ucg_com_SendCmdSeq>
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	89fa      	ldrh	r2, [r7, #14]
 80032f6:	84da      	strh	r2, [r3, #38]	@ 0x26
 80032f8:	bf00      	nop
 80032fa:	687b      	ldr	r3, [r7, #4]
 80032fc:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8003300:	723b      	strb	r3, [r7, #8]
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 8003308:	727b      	strb	r3, [r7, #9]
 800330a:	687b      	ldr	r3, [r7, #4]
 800330c:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 8003310:	72bb      	strb	r3, [r7, #10]
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	69dc      	ldr	r4, [r3, #28]
 8003316:	687b      	ldr	r3, [r7, #4]
 8003318:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 800331c:	b29a      	uxth	r2, r3
 800331e:	f107 0308 	add.w	r3, r7, #8
 8003322:	2113      	movs	r1, #19
 8003324:	6878      	ldr	r0, [r7, #4]
 8003326:	47a0      	blx	r4
 8003328:	2101      	movs	r1, #1
 800332a:	6878      	ldr	r0, [r7, #4]
 800332c:	f001 fd7a 	bl	8004e24 <ucg_com_SetCSLineStatus>
 8003330:	2301      	movs	r3, #1
 8003332:	e000      	b.n	8003336 <ucg_handle_st7735_l90fx+0xbe>
 8003334:	2300      	movs	r3, #0
 8003336:	4618      	mov	r0, r3
 8003338:	3714      	adds	r7, #20
 800333a:	46bd      	mov	sp, r7
 800333c:	bd90      	pop	{r4, r7, pc}
 800333e:	bf00      	nop
 8003340:	0800645c 	.word	0x0800645c
 8003344:	0800647c 	.word	0x0800647c
 8003348:	080064a0 	.word	0x080064a0
 800334c:	080064c4 	.word	0x080064c4

08003350 <ucg_handle_st7735_l90se>:
 8003350:	b590      	push	{r4, r7, lr}
 8003352:	b087      	sub	sp, #28
 8003354:	af00      	add	r7, sp, #0
 8003356:	6078      	str	r0, [r7, #4]
 8003358:	2300      	movs	r3, #0
 800335a:	75fb      	strb	r3, [r7, #23]
 800335c:	e01a      	b.n	8003394 <ucg_handle_st7735_l90se+0x44>
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	f103 0146 	add.w	r1, r3, #70	@ 0x46
 8003364:	7dfa      	ldrb	r2, [r7, #23]
 8003366:	4613      	mov	r3, r2
 8003368:	00db      	lsls	r3, r3, #3
 800336a:	1a9b      	subs	r3, r3, r2
 800336c:	005b      	lsls	r3, r3, #1
 800336e:	18c8      	adds	r0, r1, r3
 8003370:	7dfb      	ldrb	r3, [r7, #23]
 8003372:	687a      	ldr	r2, [r7, #4]
 8003374:	4413      	add	r3, r2
 8003376:	f893 103a 	ldrb.w	r1, [r3, #58]	@ 0x3a
 800337a:	7dfb      	ldrb	r3, [r7, #23]
 800337c:	687a      	ldr	r2, [r7, #4]
 800337e:	4413      	add	r3, r2
 8003380:	f893 203d 	ldrb.w	r2, [r3, #61]	@ 0x3d
 8003384:	687b      	ldr	r3, [r7, #4]
 8003386:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 800338a:	f7ff fe40 	bl	800300e <ucg_ccs_init>
 800338e:	7dfb      	ldrb	r3, [r7, #23]
 8003390:	3301      	adds	r3, #1
 8003392:	75fb      	strb	r3, [r7, #23]
 8003394:	7dfb      	ldrb	r3, [r7, #23]
 8003396:	2b02      	cmp	r3, #2
 8003398:	d9e1      	bls.n	800335e <ucg_handle_st7735_l90se+0xe>
 800339a:	6878      	ldr	r0, [r7, #4]
 800339c:	f001 fc48 	bl	8004c30 <ucg_clip_l90se>
 80033a0:	4603      	mov	r3, r0
 80033a2:	2b00      	cmp	r3, #0
 80033a4:	d071      	beq.n	800348a <ucg_handle_st7735_l90se+0x13a>
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 80033ac:	2b01      	cmp	r3, #1
 80033ae:	d008      	beq.n	80033c2 <ucg_handle_st7735_l90se+0x72>
 80033b0:	2b02      	cmp	r3, #2
 80033b2:	d00b      	beq.n	80033cc <ucg_handle_st7735_l90se+0x7c>
 80033b4:	2b00      	cmp	r3, #0
 80033b6:	d11b      	bne.n	80033f0 <ucg_handle_st7735_l90se+0xa0>
 80033b8:	4936      	ldr	r1, [pc, #216]	@ (8003494 <ucg_handle_st7735_l90se+0x144>)
 80033ba:	6878      	ldr	r0, [r7, #4]
 80033bc:	f001 fde6 	bl	8004f8c <ucg_com_SendCmdSeq>
 80033c0:	e028      	b.n	8003414 <ucg_handle_st7735_l90se+0xc4>
 80033c2:	4935      	ldr	r1, [pc, #212]	@ (8003498 <ucg_handle_st7735_l90se+0x148>)
 80033c4:	6878      	ldr	r0, [r7, #4]
 80033c6:	f001 fde1 	bl	8004f8c <ucg_com_SendCmdSeq>
 80033ca:	e023      	b.n	8003414 <ucg_handle_st7735_l90se+0xc4>
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 80033d0:	827b      	strh	r3, [r7, #18]
 80033d2:	8a7b      	ldrh	r3, [r7, #18]
 80033d4:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 80033d8:	b29b      	uxth	r3, r3
 80033da:	b21a      	sxth	r2, r3
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	849a      	strh	r2, [r3, #36]	@ 0x24
 80033e0:	492e      	ldr	r1, [pc, #184]	@ (800349c <ucg_handle_st7735_l90se+0x14c>)
 80033e2:	6878      	ldr	r0, [r7, #4]
 80033e4:	f001 fdd2 	bl	8004f8c <ucg_com_SendCmdSeq>
 80033e8:	687b      	ldr	r3, [r7, #4]
 80033ea:	8a7a      	ldrh	r2, [r7, #18]
 80033ec:	849a      	strh	r2, [r3, #36]	@ 0x24
 80033ee:	e011      	b.n	8003414 <ucg_handle_st7735_l90se+0xc4>
 80033f0:	687b      	ldr	r3, [r7, #4]
 80033f2:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 80033f4:	827b      	strh	r3, [r7, #18]
 80033f6:	8a7b      	ldrh	r3, [r7, #18]
 80033f8:	f1c3 037f 	rsb	r3, r3, #127	@ 0x7f
 80033fc:	b29b      	uxth	r3, r3
 80033fe:	b21a      	sxth	r2, r3
 8003400:	687b      	ldr	r3, [r7, #4]
 8003402:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003404:	4926      	ldr	r1, [pc, #152]	@ (80034a0 <ucg_handle_st7735_l90se+0x150>)
 8003406:	6878      	ldr	r0, [r7, #4]
 8003408:	f001 fdc0 	bl	8004f8c <ucg_com_SendCmdSeq>
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	8a7a      	ldrh	r2, [r7, #18]
 8003410:	84da      	strh	r2, [r3, #38]	@ 0x26
 8003412:	bf00      	nop
 8003414:	2300      	movs	r3, #0
 8003416:	82bb      	strh	r3, [r7, #20]
 8003418:	e02a      	b.n	8003470 <ucg_handle_st7735_l90se+0x120>
 800341a:	687b      	ldr	r3, [r7, #4]
 800341c:	f893 3046 	ldrb.w	r3, [r3, #70]	@ 0x46
 8003420:	733b      	strb	r3, [r7, #12]
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	f893 3054 	ldrb.w	r3, [r3, #84]	@ 0x54
 8003428:	737b      	strb	r3, [r7, #13]
 800342a:	687b      	ldr	r3, [r7, #4]
 800342c:	f893 3062 	ldrb.w	r3, [r3, #98]	@ 0x62
 8003430:	73bb      	strb	r3, [r7, #14]
 8003432:	687b      	ldr	r3, [r7, #4]
 8003434:	69dc      	ldr	r4, [r3, #28]
 8003436:	f107 030c 	add.w	r3, r7, #12
 800343a:	2201      	movs	r2, #1
 800343c:	2113      	movs	r1, #19
 800343e:	6878      	ldr	r0, [r7, #4]
 8003440:	47a0      	blx	r4
 8003442:	687b      	ldr	r3, [r7, #4]
 8003444:	3346      	adds	r3, #70	@ 0x46
 8003446:	4618      	mov	r0, r3
 8003448:	f7ff fe41 	bl	80030ce <ucg_ccs_step>
 800344c:	687b      	ldr	r3, [r7, #4]
 800344e:	3346      	adds	r3, #70	@ 0x46
 8003450:	330e      	adds	r3, #14
 8003452:	4618      	mov	r0, r3
 8003454:	f7ff fe3b 	bl	80030ce <ucg_ccs_step>
 8003458:	687b      	ldr	r3, [r7, #4]
 800345a:	3346      	adds	r3, #70	@ 0x46
 800345c:	331c      	adds	r3, #28
 800345e:	4618      	mov	r0, r3
 8003460:	f7ff fe35 	bl	80030ce <ucg_ccs_step>
 8003464:	f9b7 3014 	ldrsh.w	r3, [r7, #20]
 8003468:	b29b      	uxth	r3, r3
 800346a:	3301      	adds	r3, #1
 800346c:	b29b      	uxth	r3, r3
 800346e:	82bb      	strh	r3, [r7, #20]
 8003470:	687b      	ldr	r3, [r7, #4]
 8003472:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8003476:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 800347a:	429a      	cmp	r2, r3
 800347c:	dbcd      	blt.n	800341a <ucg_handle_st7735_l90se+0xca>
 800347e:	2101      	movs	r1, #1
 8003480:	6878      	ldr	r0, [r7, #4]
 8003482:	f001 fccf 	bl	8004e24 <ucg_com_SetCSLineStatus>
 8003486:	2301      	movs	r3, #1
 8003488:	e000      	b.n	800348c <ucg_handle_st7735_l90se+0x13c>
 800348a:	2300      	movs	r3, #0
 800348c:	4618      	mov	r0, r3
 800348e:	371c      	adds	r7, #28
 8003490:	46bd      	mov	sp, r7
 8003492:	bd90      	pop	{r4, r7, pc}
 8003494:	0800645c 	.word	0x0800645c
 8003498:	0800647c 	.word	0x0800647c
 800349c:	080064a0 	.word	0x080064a0
 80034a0:	080064c4 	.word	0x080064c4

080034a4 <ucg_dev_ic_st7735_18>:
 80034a4:	b590      	push	{r4, r7, lr}
 80034a6:	b087      	sub	sp, #28
 80034a8:	af00      	add	r7, sp, #0
 80034aa:	60f8      	str	r0, [r7, #12]
 80034ac:	460b      	mov	r3, r1
 80034ae:	607a      	str	r2, [r7, #4]
 80034b0:	817b      	strh	r3, [r7, #10]
 80034b2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80034b6:	3b0a      	subs	r3, #10
 80034b8:	2b0b      	cmp	r3, #11
 80034ba:	d85f      	bhi.n	800357c <ucg_dev_ic_st7735_18+0xd8>
 80034bc:	a201      	add	r2, pc, #4	@ (adr r2, 80034c4 <ucg_dev_ic_st7735_18+0x20>)
 80034be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80034c2:	bf00      	nop
 80034c4:	080034f5 	.word	0x080034f5
 80034c8:	0800350f 	.word	0x0800350f
 80034cc:	0800357d 	.word	0x0800357d
 80034d0:	0800357d 	.word	0x0800357d
 80034d4:	0800357d 	.word	0x0800357d
 80034d8:	0800351b 	.word	0x0800351b
 80034dc:	0800357d 	.word	0x0800357d
 80034e0:	0800357d 	.word	0x0800357d
 80034e4:	0800357d 	.word	0x0800357d
 80034e8:	0800357d 	.word	0x0800357d
 80034ec:	0800352b 	.word	0x0800352b
 80034f0:	08003573 	.word	0x08003573
 80034f4:	68fb      	ldr	r3, [r7, #12]
 80034f6:	2202      	movs	r2, #2
 80034f8:	841a      	strh	r2, [r3, #32]
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	2201      	movs	r2, #1
 80034fe:	845a      	strh	r2, [r3, #34]	@ 0x22
 8003500:	2242      	movs	r2, #66	@ 0x42
 8003502:	2164      	movs	r1, #100	@ 0x64
 8003504:	68f8      	ldr	r0, [r7, #12]
 8003506:	f001 fbdc 	bl	8004cc2 <ucg_com_PowerUp>
 800350a:	4603      	mov	r3, r0
 800350c:	e03e      	b.n	800358c <ucg_dev_ic_st7735_18+0xe8>
 800350e:	4921      	ldr	r1, [pc, #132]	@ (8003594 <ucg_dev_ic_st7735_18+0xf0>)
 8003510:	68f8      	ldr	r0, [r7, #12]
 8003512:	f001 fd3b 	bl	8004f8c <ucg_com_SendCmdSeq>
 8003516:	2301      	movs	r3, #1
 8003518:	e038      	b.n	800358c <ucg_dev_ic_st7735_18+0xe8>
 800351a:	687b      	ldr	r3, [r7, #4]
 800351c:	2280      	movs	r2, #128	@ 0x80
 800351e:	801a      	strh	r2, [r3, #0]
 8003520:	687b      	ldr	r3, [r7, #4]
 8003522:	2280      	movs	r2, #128	@ 0x80
 8003524:	805a      	strh	r2, [r3, #2]
 8003526:	2301      	movs	r3, #1
 8003528:	e030      	b.n	800358c <ucg_dev_ic_st7735_18+0xe8>
 800352a:	68f8      	ldr	r0, [r7, #12]
 800352c:	f001 f9e7 	bl	80048fe <ucg_clip_is_pixel_visible>
 8003530:	4603      	mov	r3, r0
 8003532:	2b00      	cmp	r3, #0
 8003534:	d01b      	beq.n	800356e <ucg_dev_ic_st7735_18+0xca>
 8003536:	4918      	ldr	r1, [pc, #96]	@ (8003598 <ucg_dev_ic_st7735_18+0xf4>)
 8003538:	68f8      	ldr	r0, [r7, #12]
 800353a:	f001 fd27 	bl	8004f8c <ucg_com_SendCmdSeq>
 800353e:	68fb      	ldr	r3, [r7, #12]
 8003540:	f893 3028 	ldrb.w	r3, [r3, #40]	@ 0x28
 8003544:	753b      	strb	r3, [r7, #20]
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	f893 3029 	ldrb.w	r3, [r3, #41]	@ 0x29
 800354c:	757b      	strb	r3, [r7, #21]
 800354e:	68fb      	ldr	r3, [r7, #12]
 8003550:	f893 302a 	ldrb.w	r3, [r3, #42]	@ 0x2a
 8003554:	75bb      	strb	r3, [r7, #22]
 8003556:	68fb      	ldr	r3, [r7, #12]
 8003558:	69dc      	ldr	r4, [r3, #28]
 800355a:	f107 0314 	add.w	r3, r7, #20
 800355e:	2201      	movs	r2, #1
 8003560:	2113      	movs	r1, #19
 8003562:	68f8      	ldr	r0, [r7, #12]
 8003564:	47a0      	blx	r4
 8003566:	2101      	movs	r1, #1
 8003568:	68f8      	ldr	r0, [r7, #12]
 800356a:	f001 fc5b 	bl	8004e24 <ucg_com_SetCSLineStatus>
 800356e:	2301      	movs	r3, #1
 8003570:	e00c      	b.n	800358c <ucg_dev_ic_st7735_18+0xe8>
 8003572:	68f8      	ldr	r0, [r7, #12]
 8003574:	f7ff fe80 	bl	8003278 <ucg_handle_st7735_l90fx>
 8003578:	2301      	movs	r3, #1
 800357a:	e007      	b.n	800358c <ucg_dev_ic_st7735_18+0xe8>
 800357c:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8003580:	687a      	ldr	r2, [r7, #4]
 8003582:	4619      	mov	r1, r3
 8003584:	68f8      	ldr	r0, [r7, #12]
 8003586:	f7ff fe47 	bl	8003218 <ucg_dev_default_cb>
 800358a:	4603      	mov	r3, r0
 800358c:	4618      	mov	r0, r3
 800358e:	371c      	adds	r7, #28
 8003590:	46bd      	mov	sp, r7
 8003592:	bd90      	pop	{r4, r7, pc}
 8003594:	080064e8 	.word	0x080064e8
 8003598:	0800643c 	.word	0x0800643c

0800359c <ucg_ext_st7735_18>:
 800359c:	b580      	push	{r7, lr}
 800359e:	b084      	sub	sp, #16
 80035a0:	af00      	add	r7, sp, #0
 80035a2:	60f8      	str	r0, [r7, #12]
 80035a4:	460b      	mov	r3, r1
 80035a6:	607a      	str	r2, [r7, #4]
 80035a8:	817b      	strh	r3, [r7, #10]
 80035aa:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80035ae:	2b17      	cmp	r3, #23
 80035b0:	d103      	bne.n	80035ba <ucg_ext_st7735_18+0x1e>
 80035b2:	68f8      	ldr	r0, [r7, #12]
 80035b4:	f7ff fecc 	bl	8003350 <ucg_handle_st7735_l90se>
 80035b8:	bf00      	nop
 80035ba:	2301      	movs	r3, #1
 80035bc:	4618      	mov	r0, r3
 80035be:	3710      	adds	r7, #16
 80035c0:	46bd      	mov	sp, r7
 80035c2:	bd80      	pop	{r7, pc}

080035c4 <ucg_PowerDown>:
 80035c4:	b580      	push	{r7, lr}
 80035c6:	b082      	sub	sp, #8
 80035c8:	af00      	add	r7, sp, #0
 80035ca:	6078      	str	r0, [r7, #4]
 80035cc:	687b      	ldr	r3, [r7, #4]
 80035ce:	781b      	ldrb	r3, [r3, #0]
 80035d0:	f003 0301 	and.w	r3, r3, #1
 80035d4:	b2db      	uxtb	r3, r3
 80035d6:	2b00      	cmp	r3, #0
 80035d8:	d00a      	beq.n	80035f0 <ucg_PowerDown+0x2c>
 80035da:	687b      	ldr	r3, [r7, #4]
 80035dc:	689b      	ldr	r3, [r3, #8]
 80035de:	2200      	movs	r2, #0
 80035e0:	210b      	movs	r1, #11
 80035e2:	6878      	ldr	r0, [r7, #4]
 80035e4:	4798      	blx	r3
 80035e6:	687a      	ldr	r2, [r7, #4]
 80035e8:	7813      	ldrb	r3, [r2, #0]
 80035ea:	f36f 0300 	bfc	r3, #0, #1
 80035ee:	7013      	strb	r3, [r2, #0]
 80035f0:	bf00      	nop
 80035f2:	3708      	adds	r7, #8
 80035f4:	46bd      	mov	sp, r7
 80035f6:	bd80      	pop	{r7, pc}

080035f8 <ucg_PowerUp>:
 80035f8:	b580      	push	{r7, lr}
 80035fa:	b084      	sub	sp, #16
 80035fc:	af00      	add	r7, sp, #0
 80035fe:	6078      	str	r0, [r7, #4]
 8003600:	6878      	ldr	r0, [r7, #4]
 8003602:	f7ff ffdf 	bl	80035c4 <ucg_PowerDown>
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	689b      	ldr	r3, [r3, #8]
 800360a:	2200      	movs	r2, #0
 800360c:	210a      	movs	r1, #10
 800360e:	6878      	ldr	r0, [r7, #4]
 8003610:	4798      	blx	r3
 8003612:	4603      	mov	r3, r0
 8003614:	81fb      	strh	r3, [r7, #14]
 8003616:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800361a:	2b00      	cmp	r3, #0
 800361c:	d004      	beq.n	8003628 <ucg_PowerUp+0x30>
 800361e:	687a      	ldr	r2, [r7, #4]
 8003620:	7813      	ldrb	r3, [r2, #0]
 8003622:	f043 0301 	orr.w	r3, r3, #1
 8003626:	7013      	strb	r3, [r2, #0]
 8003628:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800362c:	4618      	mov	r0, r3
 800362e:	3710      	adds	r7, #16
 8003630:	46bd      	mov	sp, r7
 8003632:	bd80      	pop	{r7, pc}

08003634 <ucg_SetClipBox>:
 8003634:	b580      	push	{r7, lr}
 8003636:	b082      	sub	sp, #8
 8003638:	af00      	add	r7, sp, #0
 800363a:	6078      	str	r0, [r7, #4]
 800363c:	6039      	str	r1, [r7, #0]
 800363e:	687b      	ldr	r3, [r7, #4]
 8003640:	689b      	ldr	r3, [r3, #8]
 8003642:	683a      	ldr	r2, [r7, #0]
 8003644:	210c      	movs	r1, #12
 8003646:	6878      	ldr	r0, [r7, #4]
 8003648:	4798      	blx	r3
 800364a:	bf00      	nop
 800364c:	3708      	adds	r7, #8
 800364e:	46bd      	mov	sp, r7
 8003650:	bd80      	pop	{r7, pc}

08003652 <ucg_SetMaxClipRange>:
 8003652:	b580      	push	{r7, lr}
 8003654:	b084      	sub	sp, #16
 8003656:	af00      	add	r7, sp, #0
 8003658:	6078      	str	r0, [r7, #4]
 800365a:	687a      	ldr	r2, [r7, #4]
 800365c:	f107 030c 	add.w	r3, r7, #12
 8003660:	3202      	adds	r2, #2
 8003662:	6810      	ldr	r0, [r2, #0]
 8003664:	6018      	str	r0, [r3, #0]
 8003666:	2300      	movs	r3, #0
 8003668:	813b      	strh	r3, [r7, #8]
 800366a:	2300      	movs	r3, #0
 800366c:	817b      	strh	r3, [r7, #10]
 800366e:	f107 0308 	add.w	r3, r7, #8
 8003672:	4619      	mov	r1, r3
 8003674:	6878      	ldr	r0, [r7, #4]
 8003676:	f7ff ffdd 	bl	8003634 <ucg_SetClipBox>
 800367a:	bf00      	nop
 800367c:	3710      	adds	r7, #16
 800367e:	46bd      	mov	sp, r7
 8003680:	bd80      	pop	{r7, pc}

08003682 <ucg_GetDimension>:
 8003682:	b580      	push	{r7, lr}
 8003684:	b082      	sub	sp, #8
 8003686:	af00      	add	r7, sp, #0
 8003688:	6078      	str	r0, [r7, #4]
 800368a:	687b      	ldr	r3, [r7, #4]
 800368c:	689b      	ldr	r3, [r3, #8]
 800368e:	687a      	ldr	r2, [r7, #4]
 8003690:	3202      	adds	r2, #2
 8003692:	210f      	movs	r1, #15
 8003694:	6878      	ldr	r0, [r7, #4]
 8003696:	4798      	blx	r3
 8003698:	6878      	ldr	r0, [r7, #4]
 800369a:	f7ff ffda 	bl	8003652 <ucg_SetMaxClipRange>
 800369e:	bf00      	nop
 80036a0:	3708      	adds	r7, #8
 80036a2:	46bd      	mov	sp, r7
 80036a4:	bd80      	pop	{r7, pc}

080036a6 <ucg_DrawL90FXWithArg>:
 80036a6:	b580      	push	{r7, lr}
 80036a8:	b082      	sub	sp, #8
 80036aa:	af00      	add	r7, sp, #0
 80036ac:	6078      	str	r0, [r7, #4]
 80036ae:	687b      	ldr	r3, [r7, #4]
 80036b0:	689b      	ldr	r3, [r3, #8]
 80036b2:	687a      	ldr	r2, [r7, #4]
 80036b4:	3224      	adds	r2, #36	@ 0x24
 80036b6:	2115      	movs	r1, #21
 80036b8:	6878      	ldr	r0, [r7, #4]
 80036ba:	4798      	blx	r3
 80036bc:	bf00      	nop
 80036be:	3708      	adds	r7, #8
 80036c0:	46bd      	mov	sp, r7
 80036c2:	bd80      	pop	{r7, pc}

080036c4 <ucg_dev_st7735_18x128x128>:
 80036c4:	b580      	push	{r7, lr}
 80036c6:	b084      	sub	sp, #16
 80036c8:	af00      	add	r7, sp, #0
 80036ca:	60f8      	str	r0, [r7, #12]
 80036cc:	460b      	mov	r3, r1
 80036ce:	607a      	str	r2, [r7, #4]
 80036d0:	817b      	strh	r3, [r7, #10]
 80036d2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80036d6:	2b0b      	cmp	r3, #11
 80036d8:	d015      	beq.n	8003706 <ucg_dev_st7735_18x128x128+0x42>
 80036da:	2b0f      	cmp	r3, #15
 80036dc:	d01c      	beq.n	8003718 <ucg_dev_st7735_18x128x128+0x54>
 80036de:	2b0a      	cmp	r3, #10
 80036e0:	d122      	bne.n	8003728 <ucg_dev_st7735_18x128x128+0x64>
 80036e2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80036e6:	687a      	ldr	r2, [r7, #4]
 80036e8:	4619      	mov	r1, r3
 80036ea:	68f8      	ldr	r0, [r7, #12]
 80036ec:	f7ff feda 	bl	80034a4 <ucg_dev_ic_st7735_18>
 80036f0:	4603      	mov	r3, r0
 80036f2:	2b00      	cmp	r3, #0
 80036f4:	d101      	bne.n	80036fa <ucg_dev_st7735_18x128x128+0x36>
 80036f6:	2300      	movs	r3, #0
 80036f8:	e01e      	b.n	8003738 <ucg_dev_st7735_18x128x128+0x74>
 80036fa:	4911      	ldr	r1, [pc, #68]	@ (8003740 <ucg_dev_st7735_18x128x128+0x7c>)
 80036fc:	68f8      	ldr	r0, [r7, #12]
 80036fe:	f001 fc45 	bl	8004f8c <ucg_com_SendCmdSeq>
 8003702:	2301      	movs	r3, #1
 8003704:	e018      	b.n	8003738 <ucg_dev_st7735_18x128x128+0x74>
 8003706:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800370a:	687a      	ldr	r2, [r7, #4]
 800370c:	4619      	mov	r1, r3
 800370e:	68f8      	ldr	r0, [r7, #12]
 8003710:	f7ff fec8 	bl	80034a4 <ucg_dev_ic_st7735_18>
 8003714:	4603      	mov	r3, r0
 8003716:	e00f      	b.n	8003738 <ucg_dev_st7735_18x128x128+0x74>
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	2280      	movs	r2, #128	@ 0x80
 800371c:	801a      	strh	r2, [r3, #0]
 800371e:	687b      	ldr	r3, [r7, #4]
 8003720:	2280      	movs	r2, #128	@ 0x80
 8003722:	805a      	strh	r2, [r3, #2]
 8003724:	2301      	movs	r3, #1
 8003726:	e007      	b.n	8003738 <ucg_dev_st7735_18x128x128+0x74>
 8003728:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 800372c:	687a      	ldr	r2, [r7, #4]
 800372e:	4619      	mov	r1, r3
 8003730:	68f8      	ldr	r0, [r7, #12]
 8003732:	f7ff feb7 	bl	80034a4 <ucg_dev_ic_st7735_18>
 8003736:	4603      	mov	r3, r0
 8003738:	4618      	mov	r0, r3
 800373a:	3710      	adds	r7, #16
 800373c:	46bd      	mov	sp, r7
 800373e:	bd80      	pop	{r7, pc}
 8003740:	080064f0 	.word	0x080064f0

08003744 <ucg_font_get_byte>:
 8003744:	b480      	push	{r7}
 8003746:	b083      	sub	sp, #12
 8003748:	af00      	add	r7, sp, #0
 800374a:	6078      	str	r0, [r7, #4]
 800374c:	460b      	mov	r3, r1
 800374e:	70fb      	strb	r3, [r7, #3]
 8003750:	78fb      	ldrb	r3, [r7, #3]
 8003752:	687a      	ldr	r2, [r7, #4]
 8003754:	4413      	add	r3, r2
 8003756:	607b      	str	r3, [r7, #4]
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	781b      	ldrb	r3, [r3, #0]
 800375c:	4618      	mov	r0, r3
 800375e:	370c      	adds	r7, #12
 8003760:	46bd      	mov	sp, r7
 8003762:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003766:	4770      	bx	lr

08003768 <ucg_font_get_word>:
 8003768:	b480      	push	{r7}
 800376a:	b085      	sub	sp, #20
 800376c:	af00      	add	r7, sp, #0
 800376e:	6078      	str	r0, [r7, #4]
 8003770:	460b      	mov	r3, r1
 8003772:	70fb      	strb	r3, [r7, #3]
 8003774:	78fb      	ldrb	r3, [r7, #3]
 8003776:	687a      	ldr	r2, [r7, #4]
 8003778:	4413      	add	r3, r2
 800377a:	607b      	str	r3, [r7, #4]
 800377c:	687b      	ldr	r3, [r7, #4]
 800377e:	781b      	ldrb	r3, [r3, #0]
 8003780:	81fb      	strh	r3, [r7, #14]
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	3301      	adds	r3, #1
 8003786:	607b      	str	r3, [r7, #4]
 8003788:	89fb      	ldrh	r3, [r7, #14]
 800378a:	021b      	lsls	r3, r3, #8
 800378c:	81fb      	strh	r3, [r7, #14]
 800378e:	687b      	ldr	r3, [r7, #4]
 8003790:	781b      	ldrb	r3, [r3, #0]
 8003792:	b29a      	uxth	r2, r3
 8003794:	89fb      	ldrh	r3, [r7, #14]
 8003796:	4413      	add	r3, r2
 8003798:	81fb      	strh	r3, [r7, #14]
 800379a:	89fb      	ldrh	r3, [r7, #14]
 800379c:	4618      	mov	r0, r3
 800379e:	3714      	adds	r7, #20
 80037a0:	46bd      	mov	sp, r7
 80037a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80037a6:	4770      	bx	lr

080037a8 <ucg_read_font_info>:
 80037a8:	b580      	push	{r7, lr}
 80037aa:	b082      	sub	sp, #8
 80037ac:	af00      	add	r7, sp, #0
 80037ae:	6078      	str	r0, [r7, #4]
 80037b0:	6039      	str	r1, [r7, #0]
 80037b2:	2100      	movs	r1, #0
 80037b4:	6838      	ldr	r0, [r7, #0]
 80037b6:	f7ff ffc5 	bl	8003744 <ucg_font_get_byte>
 80037ba:	4603      	mov	r3, r0
 80037bc:	461a      	mov	r2, r3
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	701a      	strb	r2, [r3, #0]
 80037c2:	2101      	movs	r1, #1
 80037c4:	6838      	ldr	r0, [r7, #0]
 80037c6:	f7ff ffbd 	bl	8003744 <ucg_font_get_byte>
 80037ca:	4603      	mov	r3, r0
 80037cc:	461a      	mov	r2, r3
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	705a      	strb	r2, [r3, #1]
 80037d2:	2102      	movs	r1, #2
 80037d4:	6838      	ldr	r0, [r7, #0]
 80037d6:	f7ff ffb5 	bl	8003744 <ucg_font_get_byte>
 80037da:	4603      	mov	r3, r0
 80037dc:	461a      	mov	r2, r3
 80037de:	687b      	ldr	r3, [r7, #4]
 80037e0:	709a      	strb	r2, [r3, #2]
 80037e2:	2103      	movs	r1, #3
 80037e4:	6838      	ldr	r0, [r7, #0]
 80037e6:	f7ff ffad 	bl	8003744 <ucg_font_get_byte>
 80037ea:	4603      	mov	r3, r0
 80037ec:	461a      	mov	r2, r3
 80037ee:	687b      	ldr	r3, [r7, #4]
 80037f0:	70da      	strb	r2, [r3, #3]
 80037f2:	2104      	movs	r1, #4
 80037f4:	6838      	ldr	r0, [r7, #0]
 80037f6:	f7ff ffa5 	bl	8003744 <ucg_font_get_byte>
 80037fa:	4603      	mov	r3, r0
 80037fc:	461a      	mov	r2, r3
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	711a      	strb	r2, [r3, #4]
 8003802:	2105      	movs	r1, #5
 8003804:	6838      	ldr	r0, [r7, #0]
 8003806:	f7ff ff9d 	bl	8003744 <ucg_font_get_byte>
 800380a:	4603      	mov	r3, r0
 800380c:	461a      	mov	r2, r3
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	715a      	strb	r2, [r3, #5]
 8003812:	2106      	movs	r1, #6
 8003814:	6838      	ldr	r0, [r7, #0]
 8003816:	f7ff ff95 	bl	8003744 <ucg_font_get_byte>
 800381a:	4603      	mov	r3, r0
 800381c:	461a      	mov	r2, r3
 800381e:	687b      	ldr	r3, [r7, #4]
 8003820:	719a      	strb	r2, [r3, #6]
 8003822:	2107      	movs	r1, #7
 8003824:	6838      	ldr	r0, [r7, #0]
 8003826:	f7ff ff8d 	bl	8003744 <ucg_font_get_byte>
 800382a:	4603      	mov	r3, r0
 800382c:	461a      	mov	r2, r3
 800382e:	687b      	ldr	r3, [r7, #4]
 8003830:	71da      	strb	r2, [r3, #7]
 8003832:	2108      	movs	r1, #8
 8003834:	6838      	ldr	r0, [r7, #0]
 8003836:	f7ff ff85 	bl	8003744 <ucg_font_get_byte>
 800383a:	4603      	mov	r3, r0
 800383c:	461a      	mov	r2, r3
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	721a      	strb	r2, [r3, #8]
 8003842:	2109      	movs	r1, #9
 8003844:	6838      	ldr	r0, [r7, #0]
 8003846:	f7ff ff7d 	bl	8003744 <ucg_font_get_byte>
 800384a:	4603      	mov	r3, r0
 800384c:	b25a      	sxtb	r2, r3
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	725a      	strb	r2, [r3, #9]
 8003852:	210a      	movs	r1, #10
 8003854:	6838      	ldr	r0, [r7, #0]
 8003856:	f7ff ff75 	bl	8003744 <ucg_font_get_byte>
 800385a:	4603      	mov	r3, r0
 800385c:	b25a      	sxtb	r2, r3
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	729a      	strb	r2, [r3, #10]
 8003862:	210b      	movs	r1, #11
 8003864:	6838      	ldr	r0, [r7, #0]
 8003866:	f7ff ff6d 	bl	8003744 <ucg_font_get_byte>
 800386a:	4603      	mov	r3, r0
 800386c:	b25a      	sxtb	r2, r3
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	72da      	strb	r2, [r3, #11]
 8003872:	210c      	movs	r1, #12
 8003874:	6838      	ldr	r0, [r7, #0]
 8003876:	f7ff ff65 	bl	8003744 <ucg_font_get_byte>
 800387a:	4603      	mov	r3, r0
 800387c:	b25a      	sxtb	r2, r3
 800387e:	687b      	ldr	r3, [r7, #4]
 8003880:	731a      	strb	r2, [r3, #12]
 8003882:	210d      	movs	r1, #13
 8003884:	6838      	ldr	r0, [r7, #0]
 8003886:	f7ff ff5d 	bl	8003744 <ucg_font_get_byte>
 800388a:	4603      	mov	r3, r0
 800388c:	b25a      	sxtb	r2, r3
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	735a      	strb	r2, [r3, #13]
 8003892:	210e      	movs	r1, #14
 8003894:	6838      	ldr	r0, [r7, #0]
 8003896:	f7ff ff55 	bl	8003744 <ucg_font_get_byte>
 800389a:	4603      	mov	r3, r0
 800389c:	b25a      	sxtb	r2, r3
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	739a      	strb	r2, [r3, #14]
 80038a2:	210f      	movs	r1, #15
 80038a4:	6838      	ldr	r0, [r7, #0]
 80038a6:	f7ff ff4d 	bl	8003744 <ucg_font_get_byte>
 80038aa:	4603      	mov	r3, r0
 80038ac:	b25a      	sxtb	r2, r3
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	73da      	strb	r2, [r3, #15]
 80038b2:	2110      	movs	r1, #16
 80038b4:	6838      	ldr	r0, [r7, #0]
 80038b6:	f7ff ff45 	bl	8003744 <ucg_font_get_byte>
 80038ba:	4603      	mov	r3, r0
 80038bc:	b25a      	sxtb	r2, r3
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	741a      	strb	r2, [r3, #16]
 80038c2:	2111      	movs	r1, #17
 80038c4:	6838      	ldr	r0, [r7, #0]
 80038c6:	f7ff ff4f 	bl	8003768 <ucg_font_get_word>
 80038ca:	4603      	mov	r3, r0
 80038cc:	461a      	mov	r2, r3
 80038ce:	687b      	ldr	r3, [r7, #4]
 80038d0:	825a      	strh	r2, [r3, #18]
 80038d2:	2113      	movs	r1, #19
 80038d4:	6838      	ldr	r0, [r7, #0]
 80038d6:	f7ff ff47 	bl	8003768 <ucg_font_get_word>
 80038da:	4603      	mov	r3, r0
 80038dc:	461a      	mov	r2, r3
 80038de:	687b      	ldr	r3, [r7, #4]
 80038e0:	829a      	strh	r2, [r3, #20]
 80038e2:	bf00      	nop
 80038e4:	3708      	adds	r7, #8
 80038e6:	46bd      	mov	sp, r7
 80038e8:	bd80      	pop	{r7, pc}

080038ea <ucg_font_decode_get_unsigned_bits>:
 80038ea:	b480      	push	{r7}
 80038ec:	b085      	sub	sp, #20
 80038ee:	af00      	add	r7, sp, #0
 80038f0:	6078      	str	r0, [r7, #4]
 80038f2:	460b      	mov	r3, r1
 80038f4:	70fb      	strb	r3, [r7, #3]
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	7b1b      	ldrb	r3, [r3, #12]
 80038fa:	737b      	strb	r3, [r7, #13]
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	681b      	ldr	r3, [r3, #0]
 8003900:	781b      	ldrb	r3, [r3, #0]
 8003902:	73fb      	strb	r3, [r7, #15]
 8003904:	7bfa      	ldrb	r2, [r7, #15]
 8003906:	7b7b      	ldrb	r3, [r7, #13]
 8003908:	fa42 f303 	asr.w	r3, r2, r3
 800390c:	73fb      	strb	r3, [r7, #15]
 800390e:	7b7b      	ldrb	r3, [r7, #13]
 8003910:	73bb      	strb	r3, [r7, #14]
 8003912:	7bba      	ldrb	r2, [r7, #14]
 8003914:	78fb      	ldrb	r3, [r7, #3]
 8003916:	4413      	add	r3, r2
 8003918:	73bb      	strb	r3, [r7, #14]
 800391a:	7bbb      	ldrb	r3, [r7, #14]
 800391c:	2b07      	cmp	r3, #7
 800391e:	d91a      	bls.n	8003956 <ucg_font_decode_get_unsigned_bits+0x6c>
 8003920:	2308      	movs	r3, #8
 8003922:	733b      	strb	r3, [r7, #12]
 8003924:	7b3a      	ldrb	r2, [r7, #12]
 8003926:	7b7b      	ldrb	r3, [r7, #13]
 8003928:	1ad3      	subs	r3, r2, r3
 800392a:	733b      	strb	r3, [r7, #12]
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	1c5a      	adds	r2, r3, #1
 8003932:	687b      	ldr	r3, [r7, #4]
 8003934:	601a      	str	r2, [r3, #0]
 8003936:	687b      	ldr	r3, [r7, #4]
 8003938:	681b      	ldr	r3, [r3, #0]
 800393a:	781b      	ldrb	r3, [r3, #0]
 800393c:	461a      	mov	r2, r3
 800393e:	7b3b      	ldrb	r3, [r7, #12]
 8003940:	fa02 f303 	lsl.w	r3, r2, r3
 8003944:	b25a      	sxtb	r2, r3
 8003946:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800394a:	4313      	orrs	r3, r2
 800394c:	b25b      	sxtb	r3, r3
 800394e:	73fb      	strb	r3, [r7, #15]
 8003950:	7bbb      	ldrb	r3, [r7, #14]
 8003952:	3b08      	subs	r3, #8
 8003954:	73bb      	strb	r3, [r7, #14]
 8003956:	78fb      	ldrb	r3, [r7, #3]
 8003958:	f04f 32ff 	mov.w	r2, #4294967295
 800395c:	fa02 f303 	lsl.w	r3, r2, r3
 8003960:	b2db      	uxtb	r3, r3
 8003962:	43db      	mvns	r3, r3
 8003964:	b2da      	uxtb	r2, r3
 8003966:	7bfb      	ldrb	r3, [r7, #15]
 8003968:	4013      	ands	r3, r2
 800396a:	73fb      	strb	r3, [r7, #15]
 800396c:	687b      	ldr	r3, [r7, #4]
 800396e:	7bba      	ldrb	r2, [r7, #14]
 8003970:	731a      	strb	r2, [r3, #12]
 8003972:	7bfb      	ldrb	r3, [r7, #15]
 8003974:	4618      	mov	r0, r3
 8003976:	3714      	adds	r7, #20
 8003978:	46bd      	mov	sp, r7
 800397a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800397e:	4770      	bx	lr

08003980 <ucg_font_decode_get_signed_bits>:
 8003980:	b580      	push	{r7, lr}
 8003982:	b084      	sub	sp, #16
 8003984:	af00      	add	r7, sp, #0
 8003986:	6078      	str	r0, [r7, #4]
 8003988:	460b      	mov	r3, r1
 800398a:	70fb      	strb	r3, [r7, #3]
 800398c:	78fb      	ldrb	r3, [r7, #3]
 800398e:	4619      	mov	r1, r3
 8003990:	6878      	ldr	r0, [r7, #4]
 8003992:	f7ff ffaa 	bl	80038ea <ucg_font_decode_get_unsigned_bits>
 8003996:	4603      	mov	r3, r0
 8003998:	73fb      	strb	r3, [r7, #15]
 800399a:	2301      	movs	r3, #1
 800399c:	73bb      	strb	r3, [r7, #14]
 800399e:	78fb      	ldrb	r3, [r7, #3]
 80039a0:	3b01      	subs	r3, #1
 80039a2:	70fb      	strb	r3, [r7, #3]
 80039a4:	f997 200e 	ldrsb.w	r2, [r7, #14]
 80039a8:	78fb      	ldrb	r3, [r7, #3]
 80039aa:	fa02 f303 	lsl.w	r3, r2, r3
 80039ae:	73bb      	strb	r3, [r7, #14]
 80039b0:	7bfa      	ldrb	r2, [r7, #15]
 80039b2:	7bbb      	ldrb	r3, [r7, #14]
 80039b4:	1ad3      	subs	r3, r2, r3
 80039b6:	b2db      	uxtb	r3, r3
 80039b8:	73fb      	strb	r3, [r7, #15]
 80039ba:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80039be:	4618      	mov	r0, r3
 80039c0:	3710      	adds	r7, #16
 80039c2:	46bd      	mov	sp, r7
 80039c4:	bd80      	pop	{r7, pc}

080039c6 <ucg_add_vector_y>:
 80039c6:	b490      	push	{r4, r7}
 80039c8:	b082      	sub	sp, #8
 80039ca:	af00      	add	r7, sp, #0
 80039cc:	4604      	mov	r4, r0
 80039ce:	4608      	mov	r0, r1
 80039d0:	4611      	mov	r1, r2
 80039d2:	461a      	mov	r2, r3
 80039d4:	4623      	mov	r3, r4
 80039d6:	80fb      	strh	r3, [r7, #6]
 80039d8:	4603      	mov	r3, r0
 80039da:	717b      	strb	r3, [r7, #5]
 80039dc:	460b      	mov	r3, r1
 80039de:	713b      	strb	r3, [r7, #4]
 80039e0:	4613      	mov	r3, r2
 80039e2:	70fb      	strb	r3, [r7, #3]
 80039e4:	78fb      	ldrb	r3, [r7, #3]
 80039e6:	2b01      	cmp	r3, #1
 80039e8:	d00b      	beq.n	8003a02 <ucg_add_vector_y+0x3c>
 80039ea:	2b02      	cmp	r3, #2
 80039ec:	d011      	beq.n	8003a12 <ucg_add_vector_y+0x4c>
 80039ee:	2b00      	cmp	r3, #0
 80039f0:	d117      	bne.n	8003a22 <ucg_add_vector_y+0x5c>
 80039f2:	f997 3004 	ldrsb.w	r3, [r7, #4]
 80039f6:	b29a      	uxth	r2, r3
 80039f8:	88fb      	ldrh	r3, [r7, #6]
 80039fa:	4413      	add	r3, r2
 80039fc:	b29b      	uxth	r3, r3
 80039fe:	80fb      	strh	r3, [r7, #6]
 8003a00:	e017      	b.n	8003a32 <ucg_add_vector_y+0x6c>
 8003a02:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003a06:	b29a      	uxth	r2, r3
 8003a08:	88fb      	ldrh	r3, [r7, #6]
 8003a0a:	4413      	add	r3, r2
 8003a0c:	b29b      	uxth	r3, r3
 8003a0e:	80fb      	strh	r3, [r7, #6]
 8003a10:	e00f      	b.n	8003a32 <ucg_add_vector_y+0x6c>
 8003a12:	88fa      	ldrh	r2, [r7, #6]
 8003a14:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003a18:	b29b      	uxth	r3, r3
 8003a1a:	1ad3      	subs	r3, r2, r3
 8003a1c:	b29b      	uxth	r3, r3
 8003a1e:	80fb      	strh	r3, [r7, #6]
 8003a20:	e007      	b.n	8003a32 <ucg_add_vector_y+0x6c>
 8003a22:	88fa      	ldrh	r2, [r7, #6]
 8003a24:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003a28:	b29b      	uxth	r3, r3
 8003a2a:	1ad3      	subs	r3, r2, r3
 8003a2c:	b29b      	uxth	r3, r3
 8003a2e:	80fb      	strh	r3, [r7, #6]
 8003a30:	bf00      	nop
 8003a32:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003a36:	4618      	mov	r0, r3
 8003a38:	3708      	adds	r7, #8
 8003a3a:	46bd      	mov	sp, r7
 8003a3c:	bc90      	pop	{r4, r7}
 8003a3e:	4770      	bx	lr

08003a40 <ucg_add_vector_x>:
 8003a40:	b490      	push	{r4, r7}
 8003a42:	b082      	sub	sp, #8
 8003a44:	af00      	add	r7, sp, #0
 8003a46:	4604      	mov	r4, r0
 8003a48:	4608      	mov	r0, r1
 8003a4a:	4611      	mov	r1, r2
 8003a4c:	461a      	mov	r2, r3
 8003a4e:	4623      	mov	r3, r4
 8003a50:	80fb      	strh	r3, [r7, #6]
 8003a52:	4603      	mov	r3, r0
 8003a54:	717b      	strb	r3, [r7, #5]
 8003a56:	460b      	mov	r3, r1
 8003a58:	713b      	strb	r3, [r7, #4]
 8003a5a:	4613      	mov	r3, r2
 8003a5c:	70fb      	strb	r3, [r7, #3]
 8003a5e:	78fb      	ldrb	r3, [r7, #3]
 8003a60:	2b01      	cmp	r3, #1
 8003a62:	d00b      	beq.n	8003a7c <ucg_add_vector_x+0x3c>
 8003a64:	2b02      	cmp	r3, #2
 8003a66:	d011      	beq.n	8003a8c <ucg_add_vector_x+0x4c>
 8003a68:	2b00      	cmp	r3, #0
 8003a6a:	d117      	bne.n	8003a9c <ucg_add_vector_x+0x5c>
 8003a6c:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003a70:	b29a      	uxth	r2, r3
 8003a72:	88fb      	ldrh	r3, [r7, #6]
 8003a74:	4413      	add	r3, r2
 8003a76:	b29b      	uxth	r3, r3
 8003a78:	80fb      	strh	r3, [r7, #6]
 8003a7a:	e017      	b.n	8003aac <ucg_add_vector_x+0x6c>
 8003a7c:	88fa      	ldrh	r2, [r7, #6]
 8003a7e:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003a82:	b29b      	uxth	r3, r3
 8003a84:	1ad3      	subs	r3, r2, r3
 8003a86:	b29b      	uxth	r3, r3
 8003a88:	80fb      	strh	r3, [r7, #6]
 8003a8a:	e00f      	b.n	8003aac <ucg_add_vector_x+0x6c>
 8003a8c:	88fa      	ldrh	r2, [r7, #6]
 8003a8e:	f997 3005 	ldrsb.w	r3, [r7, #5]
 8003a92:	b29b      	uxth	r3, r3
 8003a94:	1ad3      	subs	r3, r2, r3
 8003a96:	b29b      	uxth	r3, r3
 8003a98:	80fb      	strh	r3, [r7, #6]
 8003a9a:	e007      	b.n	8003aac <ucg_add_vector_x+0x6c>
 8003a9c:	f997 3004 	ldrsb.w	r3, [r7, #4]
 8003aa0:	b29a      	uxth	r2, r3
 8003aa2:	88fb      	ldrh	r3, [r7, #6]
 8003aa4:	4413      	add	r3, r2
 8003aa6:	b29b      	uxth	r3, r3
 8003aa8:	80fb      	strh	r3, [r7, #6]
 8003aaa:	bf00      	nop
 8003aac:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8003ab0:	4618      	mov	r0, r3
 8003ab2:	3708      	adds	r7, #8
 8003ab4:	46bd      	mov	sp, r7
 8003ab6:	bc90      	pop	{r4, r7}
 8003ab8:	4770      	bx	lr

08003aba <ucg_font_decode_len>:
 8003aba:	b590      	push	{r4, r7, lr}
 8003abc:	b089      	sub	sp, #36	@ 0x24
 8003abe:	af02      	add	r7, sp, #8
 8003ac0:	6078      	str	r0, [r7, #4]
 8003ac2:	460b      	mov	r3, r1
 8003ac4:	70fb      	strb	r3, [r7, #3]
 8003ac6:	4613      	mov	r3, r2
 8003ac8:	70bb      	strb	r3, [r7, #2]
 8003aca:	687b      	ldr	r3, [r7, #4]
 8003acc:	3380      	adds	r3, #128	@ 0x80
 8003ace:	613b      	str	r3, [r7, #16]
 8003ad0:	78fb      	ldrb	r3, [r7, #3]
 8003ad2:	75fb      	strb	r3, [r7, #23]
 8003ad4:	693b      	ldr	r3, [r7, #16]
 8003ad6:	f993 3008 	ldrsb.w	r3, [r3, #8]
 8003ada:	757b      	strb	r3, [r7, #21]
 8003adc:	693b      	ldr	r3, [r7, #16]
 8003ade:	f993 3009 	ldrsb.w	r3, [r3, #9]
 8003ae2:	753b      	strb	r3, [r7, #20]
 8003ae4:	693b      	ldr	r3, [r7, #16]
 8003ae6:	f993 300a 	ldrsb.w	r3, [r3, #10]
 8003aea:	73fb      	strb	r3, [r7, #15]
 8003aec:	7bfa      	ldrb	r2, [r7, #15]
 8003aee:	7d7b      	ldrb	r3, [r7, #21]
 8003af0:	1ad3      	subs	r3, r2, r3
 8003af2:	73fb      	strb	r3, [r7, #15]
 8003af4:	7bfb      	ldrb	r3, [r7, #15]
 8003af6:	75bb      	strb	r3, [r7, #22]
 8003af8:	7dfa      	ldrb	r2, [r7, #23]
 8003afa:	7bfb      	ldrb	r3, [r7, #15]
 8003afc:	429a      	cmp	r2, r3
 8003afe:	d201      	bcs.n	8003b04 <ucg_font_decode_len+0x4a>
 8003b00:	7dfb      	ldrb	r3, [r7, #23]
 8003b02:	75bb      	strb	r3, [r7, #22]
 8003b04:	693b      	ldr	r3, [r7, #16]
 8003b06:	889b      	ldrh	r3, [r3, #4]
 8003b08:	81bb      	strh	r3, [r7, #12]
 8003b0a:	693b      	ldr	r3, [r7, #16]
 8003b0c:	88db      	ldrh	r3, [r3, #6]
 8003b0e:	817b      	strh	r3, [r7, #10]
 8003b10:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8003b14:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8003b18:	693b      	ldr	r3, [r7, #16]
 8003b1a:	7b9b      	ldrb	r3, [r3, #14]
 8003b1c:	f9b7 000c 	ldrsh.w	r0, [r7, #12]
 8003b20:	f7ff ff8e 	bl	8003a40 <ucg_add_vector_x>
 8003b24:	4603      	mov	r3, r0
 8003b26:	81bb      	strh	r3, [r7, #12]
 8003b28:	f997 1015 	ldrsb.w	r1, [r7, #21]
 8003b2c:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8003b30:	693b      	ldr	r3, [r7, #16]
 8003b32:	7b9b      	ldrb	r3, [r3, #14]
 8003b34:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003b38:	f7ff ff45 	bl	80039c6 <ucg_add_vector_y>
 8003b3c:	4603      	mov	r3, r0
 8003b3e:	817b      	strh	r3, [r7, #10]
 8003b40:	78bb      	ldrb	r3, [r7, #2]
 8003b42:	2b00      	cmp	r3, #0
 8003b44:	d011      	beq.n	8003b6a <ucg_font_decode_len+0xb0>
 8003b46:	7dbb      	ldrb	r3, [r7, #22]
 8003b48:	b21c      	sxth	r4, r3
 8003b4a:	693b      	ldr	r3, [r7, #16]
 8003b4c:	7b9b      	ldrb	r3, [r3, #14]
 8003b4e:	b21b      	sxth	r3, r3
 8003b50:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003b54:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8003b58:	2200      	movs	r2, #0
 8003b5a:	9201      	str	r2, [sp, #4]
 8003b5c:	9300      	str	r3, [sp, #0]
 8003b5e:	4623      	mov	r3, r4
 8003b60:	4602      	mov	r2, r0
 8003b62:	6878      	ldr	r0, [r7, #4]
 8003b64:	f000 fbc0 	bl	80042e8 <ucg_Draw90Line>
 8003b68:	e014      	b.n	8003b94 <ucg_font_decode_len+0xda>
 8003b6a:	693b      	ldr	r3, [r7, #16]
 8003b6c:	7b5b      	ldrb	r3, [r3, #13]
 8003b6e:	2b00      	cmp	r3, #0
 8003b70:	d110      	bne.n	8003b94 <ucg_font_decode_len+0xda>
 8003b72:	7dbb      	ldrb	r3, [r7, #22]
 8003b74:	b21c      	sxth	r4, r3
 8003b76:	693b      	ldr	r3, [r7, #16]
 8003b78:	7b9b      	ldrb	r3, [r3, #14]
 8003b7a:	b21b      	sxth	r3, r3
 8003b7c:	f9b7 000a 	ldrsh.w	r0, [r7, #10]
 8003b80:	f9b7 100c 	ldrsh.w	r1, [r7, #12]
 8003b84:	2201      	movs	r2, #1
 8003b86:	9201      	str	r2, [sp, #4]
 8003b88:	9300      	str	r3, [sp, #0]
 8003b8a:	4623      	mov	r3, r4
 8003b8c:	4602      	mov	r2, r0
 8003b8e:	6878      	ldr	r0, [r7, #4]
 8003b90:	f000 fbaa 	bl	80042e8 <ucg_Draw90Line>
 8003b94:	7dfa      	ldrb	r2, [r7, #23]
 8003b96:	7bfb      	ldrb	r3, [r7, #15]
 8003b98:	429a      	cmp	r2, r3
 8003b9a:	d309      	bcc.n	8003bb0 <ucg_font_decode_len+0xf6>
 8003b9c:	7dfa      	ldrb	r2, [r7, #23]
 8003b9e:	7bfb      	ldrb	r3, [r7, #15]
 8003ba0:	1ad3      	subs	r3, r2, r3
 8003ba2:	75fb      	strb	r3, [r7, #23]
 8003ba4:	2300      	movs	r3, #0
 8003ba6:	757b      	strb	r3, [r7, #21]
 8003ba8:	7d3b      	ldrb	r3, [r7, #20]
 8003baa:	3301      	adds	r3, #1
 8003bac:	753b      	strb	r3, [r7, #20]
 8003bae:	e799      	b.n	8003ae4 <ucg_font_decode_len+0x2a>
 8003bb0:	bf00      	nop
 8003bb2:	7d7a      	ldrb	r2, [r7, #21]
 8003bb4:	7dfb      	ldrb	r3, [r7, #23]
 8003bb6:	4413      	add	r3, r2
 8003bb8:	757b      	strb	r3, [r7, #21]
 8003bba:	f997 2015 	ldrsb.w	r2, [r7, #21]
 8003bbe:	693b      	ldr	r3, [r7, #16]
 8003bc0:	721a      	strb	r2, [r3, #8]
 8003bc2:	f997 2014 	ldrsb.w	r2, [r7, #20]
 8003bc6:	693b      	ldr	r3, [r7, #16]
 8003bc8:	725a      	strb	r2, [r3, #9]
 8003bca:	bf00      	nop
 8003bcc:	371c      	adds	r7, #28
 8003bce:	46bd      	mov	sp, r7
 8003bd0:	bd90      	pop	{r4, r7, pc}

08003bd2 <ucg_font_setup_decode>:
 8003bd2:	b580      	push	{r7, lr}
 8003bd4:	b084      	sub	sp, #16
 8003bd6:	af00      	add	r7, sp, #0
 8003bd8:	6078      	str	r0, [r7, #4]
 8003bda:	6039      	str	r1, [r7, #0]
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	3380      	adds	r3, #128	@ 0x80
 8003be0:	60fb      	str	r3, [r7, #12]
 8003be2:	68fb      	ldr	r3, [r7, #12]
 8003be4:	683a      	ldr	r2, [r7, #0]
 8003be6:	601a      	str	r2, [r3, #0]
 8003be8:	68fb      	ldr	r3, [r7, #12]
 8003bea:	2200      	movs	r2, #0
 8003bec:	731a      	strb	r2, [r3, #12]
 8003bee:	68fb      	ldr	r3, [r7, #12]
 8003bf0:	681b      	ldr	r3, [r3, #0]
 8003bf2:	1c5a      	adds	r2, r3, #1
 8003bf4:	68fb      	ldr	r3, [r7, #12]
 8003bf6:	601a      	str	r2, [r3, #0]
 8003bf8:	68fb      	ldr	r3, [r7, #12]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	1c5a      	adds	r2, r3, #1
 8003bfe:	68fb      	ldr	r3, [r7, #12]
 8003c00:	601a      	str	r2, [r3, #0]
 8003c02:	687b      	ldr	r3, [r7, #4]
 8003c04:	f893 3094 	ldrb.w	r3, [r3, #148]	@ 0x94
 8003c08:	4619      	mov	r1, r3
 8003c0a:	68f8      	ldr	r0, [r7, #12]
 8003c0c:	f7ff fe6d 	bl	80038ea <ucg_font_decode_get_unsigned_bits>
 8003c10:	4603      	mov	r3, r0
 8003c12:	b25a      	sxtb	r2, r3
 8003c14:	68fb      	ldr	r3, [r7, #12]
 8003c16:	729a      	strb	r2, [r3, #10]
 8003c18:	687b      	ldr	r3, [r7, #4]
 8003c1a:	f893 3095 	ldrb.w	r3, [r3, #149]	@ 0x95
 8003c1e:	4619      	mov	r1, r3
 8003c20:	68f8      	ldr	r0, [r7, #12]
 8003c22:	f7ff fe62 	bl	80038ea <ucg_font_decode_get_unsigned_bits>
 8003c26:	4603      	mov	r3, r0
 8003c28:	b25a      	sxtb	r2, r3
 8003c2a:	68fb      	ldr	r3, [r7, #12]
 8003c2c:	72da      	strb	r2, [r3, #11]
 8003c2e:	bf00      	nop
 8003c30:	3710      	adds	r7, #16
 8003c32:	46bd      	mov	sp, r7
 8003c34:	bd80      	pop	{r7, pc}

08003c36 <ucg_font_decode_glyph>:
 8003c36:	b580      	push	{r7, lr}
 8003c38:	b084      	sub	sp, #16
 8003c3a:	af00      	add	r7, sp, #0
 8003c3c:	6078      	str	r0, [r7, #4]
 8003c3e:	6039      	str	r1, [r7, #0]
 8003c40:	6839      	ldr	r1, [r7, #0]
 8003c42:	6878      	ldr	r0, [r7, #4]
 8003c44:	f7ff ffc5 	bl	8003bd2 <ucg_font_setup_decode>
 8003c48:	687b      	ldr	r3, [r7, #4]
 8003c4a:	f893 308b 	ldrb.w	r3, [r3, #139]	@ 0x8b
 8003c4e:	73fb      	strb	r3, [r7, #15]
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 8003c56:	687b      	ldr	r3, [r7, #4]
 8003c58:	f893 3096 	ldrb.w	r3, [r3, #150]	@ 0x96
 8003c5c:	4619      	mov	r1, r3
 8003c5e:	4610      	mov	r0, r2
 8003c60:	f7ff fe8e 	bl	8003980 <ucg_font_decode_get_signed_bits>
 8003c64:	4603      	mov	r3, r0
 8003c66:	73bb      	strb	r3, [r7, #14]
 8003c68:	687b      	ldr	r3, [r7, #4]
 8003c6a:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	f893 3097 	ldrb.w	r3, [r3, #151]	@ 0x97
 8003c74:	4619      	mov	r1, r3
 8003c76:	4610      	mov	r0, r2
 8003c78:	f7ff fe82 	bl	8003980 <ucg_font_decode_get_signed_bits>
 8003c7c:	4603      	mov	r3, r0
 8003c7e:	737b      	strb	r3, [r7, #13]
 8003c80:	687b      	ldr	r3, [r7, #4]
 8003c82:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	f893 3098 	ldrb.w	r3, [r3, #152]	@ 0x98
 8003c8c:	4619      	mov	r1, r3
 8003c8e:	4610      	mov	r0, r2
 8003c90:	f7ff fe76 	bl	8003980 <ucg_font_decode_get_signed_bits>
 8003c94:	4603      	mov	r3, r0
 8003c96:	733b      	strb	r3, [r7, #12]
 8003c98:	687b      	ldr	r3, [r7, #4]
 8003c9a:	f993 308a 	ldrsb.w	r3, [r3, #138]	@ 0x8a
 8003c9e:	2b00      	cmp	r3, #0
 8003ca0:	dd69      	ble.n	8003d76 <ucg_font_decode_glyph+0x140>
 8003ca2:	687b      	ldr	r3, [r7, #4]
 8003ca4:	f9b3 0084 	ldrsh.w	r0, [r3, #132]	@ 0x84
 8003ca8:	7bfa      	ldrb	r2, [r7, #15]
 8003caa:	7b7b      	ldrb	r3, [r7, #13]
 8003cac:	4413      	add	r3, r2
 8003cae:	b2db      	uxtb	r3, r3
 8003cb0:	425b      	negs	r3, r3
 8003cb2:	b2db      	uxtb	r3, r3
 8003cb4:	b25a      	sxtb	r2, r3
 8003cb6:	687b      	ldr	r3, [r7, #4]
 8003cb8:	f893 308e 	ldrb.w	r3, [r3, #142]	@ 0x8e
 8003cbc:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8003cc0:	f7ff febe 	bl	8003a40 <ucg_add_vector_x>
 8003cc4:	4603      	mov	r3, r0
 8003cc6:	461a      	mov	r2, r3
 8003cc8:	687b      	ldr	r3, [r7, #4]
 8003cca:	f8a3 2084 	strh.w	r2, [r3, #132]	@ 0x84
 8003cce:	687b      	ldr	r3, [r7, #4]
 8003cd0:	f9b3 0086 	ldrsh.w	r0, [r3, #134]	@ 0x86
 8003cd4:	7bfa      	ldrb	r2, [r7, #15]
 8003cd6:	7b7b      	ldrb	r3, [r7, #13]
 8003cd8:	4413      	add	r3, r2
 8003cda:	b2db      	uxtb	r3, r3
 8003cdc:	425b      	negs	r3, r3
 8003cde:	b2db      	uxtb	r3, r3
 8003ce0:	b25a      	sxtb	r2, r3
 8003ce2:	687b      	ldr	r3, [r7, #4]
 8003ce4:	f893 308e 	ldrb.w	r3, [r3, #142]	@ 0x8e
 8003ce8:	f997 100e 	ldrsb.w	r1, [r7, #14]
 8003cec:	f7ff fe6b 	bl	80039c6 <ucg_add_vector_y>
 8003cf0:	4603      	mov	r3, r0
 8003cf2:	461a      	mov	r2, r3
 8003cf4:	687b      	ldr	r3, [r7, #4]
 8003cf6:	f8a3 2086 	strh.w	r2, [r3, #134]	@ 0x86
 8003cfa:	687b      	ldr	r3, [r7, #4]
 8003cfc:	2200      	movs	r2, #0
 8003cfe:	f883 2088 	strb.w	r2, [r3, #136]	@ 0x88
 8003d02:	687b      	ldr	r3, [r7, #4]
 8003d04:	2200      	movs	r2, #0
 8003d06:	f883 2089 	strb.w	r2, [r3, #137]	@ 0x89
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 8003d10:	687b      	ldr	r3, [r7, #4]
 8003d12:	f893 3092 	ldrb.w	r3, [r3, #146]	@ 0x92
 8003d16:	4619      	mov	r1, r3
 8003d18:	4610      	mov	r0, r2
 8003d1a:	f7ff fde6 	bl	80038ea <ucg_font_decode_get_unsigned_bits>
 8003d1e:	4603      	mov	r3, r0
 8003d20:	72fb      	strb	r3, [r7, #11]
 8003d22:	687b      	ldr	r3, [r7, #4]
 8003d24:	f103 0280 	add.w	r2, r3, #128	@ 0x80
 8003d28:	687b      	ldr	r3, [r7, #4]
 8003d2a:	f893 3093 	ldrb.w	r3, [r3, #147]	@ 0x93
 8003d2e:	4619      	mov	r1, r3
 8003d30:	4610      	mov	r0, r2
 8003d32:	f7ff fdda 	bl	80038ea <ucg_font_decode_get_unsigned_bits>
 8003d36:	4603      	mov	r3, r0
 8003d38:	72bb      	strb	r3, [r7, #10]
 8003d3a:	7afb      	ldrb	r3, [r7, #11]
 8003d3c:	2200      	movs	r2, #0
 8003d3e:	4619      	mov	r1, r3
 8003d40:	6878      	ldr	r0, [r7, #4]
 8003d42:	f7ff feba 	bl	8003aba <ucg_font_decode_len>
 8003d46:	7abb      	ldrb	r3, [r7, #10]
 8003d48:	2201      	movs	r2, #1
 8003d4a:	4619      	mov	r1, r3
 8003d4c:	6878      	ldr	r0, [r7, #4]
 8003d4e:	f7ff feb4 	bl	8003aba <ucg_font_decode_len>
 8003d52:	687b      	ldr	r3, [r7, #4]
 8003d54:	3380      	adds	r3, #128	@ 0x80
 8003d56:	2101      	movs	r1, #1
 8003d58:	4618      	mov	r0, r3
 8003d5a:	f7ff fdc6 	bl	80038ea <ucg_font_decode_get_unsigned_bits>
 8003d5e:	4603      	mov	r3, r0
 8003d60:	2b00      	cmp	r3, #0
 8003d62:	d1ea      	bne.n	8003d3a <ucg_font_decode_glyph+0x104>
 8003d64:	687b      	ldr	r3, [r7, #4]
 8003d66:	f993 3089 	ldrsb.w	r3, [r3, #137]	@ 0x89
 8003d6a:	f997 200f 	ldrsb.w	r2, [r7, #15]
 8003d6e:	429a      	cmp	r2, r3
 8003d70:	dd00      	ble.n	8003d74 <ucg_font_decode_glyph+0x13e>
 8003d72:	e7ca      	b.n	8003d0a <ucg_font_decode_glyph+0xd4>
 8003d74:	bf00      	nop
 8003d76:	f997 300c 	ldrsb.w	r3, [r7, #12]
 8003d7a:	4618      	mov	r0, r3
 8003d7c:	3710      	adds	r7, #16
 8003d7e:	46bd      	mov	sp, r7
 8003d80:	bd80      	pop	{r7, pc}

08003d82 <ucg_font_get_glyph_data>:
 8003d82:	b480      	push	{r7}
 8003d84:	b085      	sub	sp, #20
 8003d86:	af00      	add	r7, sp, #0
 8003d88:	6078      	str	r0, [r7, #4]
 8003d8a:	460b      	mov	r3, r1
 8003d8c:	70fb      	strb	r3, [r7, #3]
 8003d8e:	687b      	ldr	r3, [r7, #4]
 8003d90:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8003d92:	60fb      	str	r3, [r7, #12]
 8003d94:	68fb      	ldr	r3, [r7, #12]
 8003d96:	3315      	adds	r3, #21
 8003d98:	60fb      	str	r3, [r7, #12]
 8003d9a:	78fb      	ldrb	r3, [r7, #3]
 8003d9c:	2b60      	cmp	r3, #96	@ 0x60
 8003d9e:	d907      	bls.n	8003db0 <ucg_font_get_glyph_data+0x2e>
 8003da0:	687b      	ldr	r3, [r7, #4]
 8003da2:	f8b3 30a4 	ldrh.w	r3, [r3, #164]	@ 0xa4
 8003da6:	461a      	mov	r2, r3
 8003da8:	68fb      	ldr	r3, [r7, #12]
 8003daa:	4413      	add	r3, r2
 8003dac:	60fb      	str	r3, [r7, #12]
 8003dae:	e009      	b.n	8003dc4 <ucg_font_get_glyph_data+0x42>
 8003db0:	78fb      	ldrb	r3, [r7, #3]
 8003db2:	2b40      	cmp	r3, #64	@ 0x40
 8003db4:	d906      	bls.n	8003dc4 <ucg_font_get_glyph_data+0x42>
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	f8b3 30a2 	ldrh.w	r3, [r3, #162]	@ 0xa2
 8003dbc:	461a      	mov	r2, r3
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	4413      	add	r3, r2
 8003dc2:	60fb      	str	r3, [r7, #12]
 8003dc4:	68fb      	ldr	r3, [r7, #12]
 8003dc6:	3301      	adds	r3, #1
 8003dc8:	781b      	ldrb	r3, [r3, #0]
 8003dca:	2b00      	cmp	r3, #0
 8003dcc:	d00e      	beq.n	8003dec <ucg_font_get_glyph_data+0x6a>
 8003dce:	68fb      	ldr	r3, [r7, #12]
 8003dd0:	781b      	ldrb	r3, [r3, #0]
 8003dd2:	78fa      	ldrb	r2, [r7, #3]
 8003dd4:	429a      	cmp	r2, r3
 8003dd6:	d101      	bne.n	8003ddc <ucg_font_get_glyph_data+0x5a>
 8003dd8:	68fb      	ldr	r3, [r7, #12]
 8003dda:	e009      	b.n	8003df0 <ucg_font_get_glyph_data+0x6e>
 8003ddc:	68fb      	ldr	r3, [r7, #12]
 8003dde:	3301      	adds	r3, #1
 8003de0:	781b      	ldrb	r3, [r3, #0]
 8003de2:	461a      	mov	r2, r3
 8003de4:	68fb      	ldr	r3, [r7, #12]
 8003de6:	4413      	add	r3, r2
 8003de8:	60fb      	str	r3, [r7, #12]
 8003dea:	e7eb      	b.n	8003dc4 <ucg_font_get_glyph_data+0x42>
 8003dec:	bf00      	nop
 8003dee:	2300      	movs	r3, #0
 8003df0:	4618      	mov	r0, r3
 8003df2:	3714      	adds	r7, #20
 8003df4:	46bd      	mov	sp, r7
 8003df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003dfa:	4770      	bx	lr

08003dfc <ucg_font_draw_glyph>:
 8003dfc:	b580      	push	{r7, lr}
 8003dfe:	b086      	sub	sp, #24
 8003e00:	af00      	add	r7, sp, #0
 8003e02:	60f8      	str	r0, [r7, #12]
 8003e04:	4608      	mov	r0, r1
 8003e06:	4611      	mov	r1, r2
 8003e08:	461a      	mov	r2, r3
 8003e0a:	4603      	mov	r3, r0
 8003e0c:	817b      	strh	r3, [r7, #10]
 8003e0e:	460b      	mov	r3, r1
 8003e10:	813b      	strh	r3, [r7, #8]
 8003e12:	4613      	mov	r3, r2
 8003e14:	71fb      	strb	r3, [r7, #7]
 8003e16:	2300      	movs	r3, #0
 8003e18:	82fb      	strh	r3, [r7, #22]
 8003e1a:	68fb      	ldr	r3, [r7, #12]
 8003e1c:	897a      	ldrh	r2, [r7, #10]
 8003e1e:	f8a3 2084 	strh.w	r2, [r3, #132]	@ 0x84
 8003e22:	68fb      	ldr	r3, [r7, #12]
 8003e24:	893a      	ldrh	r2, [r7, #8]
 8003e26:	f8a3 2086 	strh.w	r2, [r3, #134]	@ 0x86
 8003e2a:	68fb      	ldr	r3, [r7, #12]
 8003e2c:	79fa      	ldrb	r2, [r7, #7]
 8003e2e:	f883 208e 	strb.w	r2, [r3, #142]	@ 0x8e
 8003e32:	f897 3020 	ldrb.w	r3, [r7, #32]
 8003e36:	4619      	mov	r1, r3
 8003e38:	68f8      	ldr	r0, [r7, #12]
 8003e3a:	f7ff ffa2 	bl	8003d82 <ucg_font_get_glyph_data>
 8003e3e:	6138      	str	r0, [r7, #16]
 8003e40:	693b      	ldr	r3, [r7, #16]
 8003e42:	2b00      	cmp	r3, #0
 8003e44:	d005      	beq.n	8003e52 <ucg_font_draw_glyph+0x56>
 8003e46:	6939      	ldr	r1, [r7, #16]
 8003e48:	68f8      	ldr	r0, [r7, #12]
 8003e4a:	f7ff fef4 	bl	8003c36 <ucg_font_decode_glyph>
 8003e4e:	4603      	mov	r3, r0
 8003e50:	82fb      	strh	r3, [r7, #22]
 8003e52:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 8003e56:	4618      	mov	r0, r3
 8003e58:	3718      	adds	r7, #24
 8003e5a:	46bd      	mov	sp, r7
 8003e5c:	bd80      	pop	{r7, pc}

08003e5e <ucg_SetFontMode>:
 8003e5e:	b480      	push	{r7}
 8003e60:	b083      	sub	sp, #12
 8003e62:	af00      	add	r7, sp, #0
 8003e64:	6078      	str	r0, [r7, #4]
 8003e66:	460b      	mov	r3, r1
 8003e68:	70fb      	strb	r3, [r7, #3]
 8003e6a:	687b      	ldr	r3, [r7, #4]
 8003e6c:	78fa      	ldrb	r2, [r7, #3]
 8003e6e:	f883 208d 	strb.w	r2, [r3, #141]	@ 0x8d
 8003e72:	bf00      	nop
 8003e74:	370c      	adds	r7, #12
 8003e76:	46bd      	mov	sp, r7
 8003e78:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e7c:	4770      	bx	lr
	...

08003e80 <ucg_DrawGlyph>:
 8003e80:	b580      	push	{r7, lr}
 8003e82:	b086      	sub	sp, #24
 8003e84:	af02      	add	r7, sp, #8
 8003e86:	60f8      	str	r0, [r7, #12]
 8003e88:	4608      	mov	r0, r1
 8003e8a:	4611      	mov	r1, r2
 8003e8c:	461a      	mov	r2, r3
 8003e8e:	4603      	mov	r3, r0
 8003e90:	817b      	strh	r3, [r7, #10]
 8003e92:	460b      	mov	r3, r1
 8003e94:	813b      	strh	r3, [r7, #8]
 8003e96:	4613      	mov	r3, r2
 8003e98:	71fb      	strb	r3, [r7, #7]
 8003e9a:	79fb      	ldrb	r3, [r7, #7]
 8003e9c:	2b03      	cmp	r3, #3
 8003e9e:	d837      	bhi.n	8003f10 <ucg_DrawGlyph+0x90>
 8003ea0:	a201      	add	r2, pc, #4	@ (adr r2, 8003ea8 <ucg_DrawGlyph+0x28>)
 8003ea2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003ea6:	bf00      	nop
 8003ea8:	08003eb9 	.word	0x08003eb9
 8003eac:	08003ecf 	.word	0x08003ecf
 8003eb0:	08003ee5 	.word	0x08003ee5
 8003eb4:	08003efb 	.word	0x08003efb
 8003eb8:	68fb      	ldr	r3, [r7, #12]
 8003eba:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003ebc:	68f8      	ldr	r0, [r7, #12]
 8003ebe:	4798      	blx	r3
 8003ec0:	4603      	mov	r3, r0
 8003ec2:	b29a      	uxth	r2, r3
 8003ec4:	893b      	ldrh	r3, [r7, #8]
 8003ec6:	4413      	add	r3, r2
 8003ec8:	b29b      	uxth	r3, r3
 8003eca:	813b      	strh	r3, [r7, #8]
 8003ecc:	e020      	b.n	8003f10 <ucg_DrawGlyph+0x90>
 8003ece:	68fb      	ldr	r3, [r7, #12]
 8003ed0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003ed2:	68f8      	ldr	r0, [r7, #12]
 8003ed4:	4798      	blx	r3
 8003ed6:	4603      	mov	r3, r0
 8003ed8:	897a      	ldrh	r2, [r7, #10]
 8003eda:	b29b      	uxth	r3, r3
 8003edc:	1ad3      	subs	r3, r2, r3
 8003ede:	b29b      	uxth	r3, r3
 8003ee0:	817b      	strh	r3, [r7, #10]
 8003ee2:	e015      	b.n	8003f10 <ucg_DrawGlyph+0x90>
 8003ee4:	68fb      	ldr	r3, [r7, #12]
 8003ee6:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003ee8:	68f8      	ldr	r0, [r7, #12]
 8003eea:	4798      	blx	r3
 8003eec:	4603      	mov	r3, r0
 8003eee:	893a      	ldrh	r2, [r7, #8]
 8003ef0:	b29b      	uxth	r3, r3
 8003ef2:	1ad3      	subs	r3, r2, r3
 8003ef4:	b29b      	uxth	r3, r3
 8003ef6:	813b      	strh	r3, [r7, #8]
 8003ef8:	e00a      	b.n	8003f10 <ucg_DrawGlyph+0x90>
 8003efa:	68fb      	ldr	r3, [r7, #12]
 8003efc:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8003efe:	68f8      	ldr	r0, [r7, #12]
 8003f00:	4798      	blx	r3
 8003f02:	4603      	mov	r3, r0
 8003f04:	b29a      	uxth	r2, r3
 8003f06:	897b      	ldrh	r3, [r7, #10]
 8003f08:	4413      	add	r3, r2
 8003f0a:	b29b      	uxth	r3, r3
 8003f0c:	817b      	strh	r3, [r7, #10]
 8003f0e:	bf00      	nop
 8003f10:	79f8      	ldrb	r0, [r7, #7]
 8003f12:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8003f16:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8003f1a:	7e3b      	ldrb	r3, [r7, #24]
 8003f1c:	9300      	str	r3, [sp, #0]
 8003f1e:	4603      	mov	r3, r0
 8003f20:	68f8      	ldr	r0, [r7, #12]
 8003f22:	f7ff ff6b 	bl	8003dfc <ucg_font_draw_glyph>
 8003f26:	4603      	mov	r3, r0
 8003f28:	4618      	mov	r0, r3
 8003f2a:	3710      	adds	r7, #16
 8003f2c:	46bd      	mov	sp, r7
 8003f2e:	bd80      	pop	{r7, pc}

08003f30 <task_drawString>:
 8003f30:	b580      	push	{r7, lr}
 8003f32:	b086      	sub	sp, #24
 8003f34:	af02      	add	r7, sp, #8
 8003f36:	6078      	str	r0, [r7, #4]
 8003f38:	2300      	movs	r3, #0
 8003f3a:	81fb      	strh	r3, [r7, #14]
 8003f3c:	687b      	ldr	r3, [r7, #4]
 8003f3e:	60bb      	str	r3, [r7, #8]
 8003f40:	4b45      	ldr	r3, [pc, #276]	@ (8004058 <task_drawString+0x128>)
 8003f42:	781b      	ldrb	r3, [r3, #0]
 8003f44:	2b00      	cmp	r3, #0
 8003f46:	d002      	beq.n	8003f4e <task_drawString+0x1e>
 8003f48:	2b01      	cmp	r3, #1
 8003f4a:	d01e      	beq.n	8003f8a <task_drawString+0x5a>
 8003f4c:	e07b      	b.n	8004046 <task_drawString+0x116>
 8003f4e:	4843      	ldr	r0, [pc, #268]	@ (800405c <task_drawString+0x12c>)
 8003f50:	f000 fb5d 	bl	800460e <bufNumItems>
 8003f54:	4603      	mov	r3, r0
 8003f56:	2b00      	cmp	r3, #0
 8003f58:	d007      	beq.n	8003f6a <task_drawString+0x3a>
 8003f5a:	4941      	ldr	r1, [pc, #260]	@ (8004060 <task_drawString+0x130>)
 8003f5c:	483f      	ldr	r0, [pc, #252]	@ (800405c <task_drawString+0x12c>)
 8003f5e:	f000 fbef 	bl	8004740 <bufDeDat>
 8003f62:	4b3d      	ldr	r3, [pc, #244]	@ (8004058 <task_drawString+0x128>)
 8003f64:	2201      	movs	r2, #1
 8003f66:	701a      	strb	r2, [r3, #0]
 8003f68:	e071      	b.n	800404e <task_drawString+0x11e>
 8003f6a:	4b3e      	ldr	r3, [pc, #248]	@ (8004064 <task_drawString+0x134>)
 8003f6c:	781b      	ldrb	r3, [r3, #0]
 8003f6e:	2bff      	cmp	r3, #255	@ 0xff
 8003f70:	d007      	beq.n	8003f82 <task_drawString+0x52>
 8003f72:	4b3c      	ldr	r3, [pc, #240]	@ (8004064 <task_drawString+0x134>)
 8003f74:	781b      	ldrb	r3, [r3, #0]
 8003f76:	4618      	mov	r0, r3
 8003f78:	f7fe fd00 	bl	800297c <TimerStop>
 8003f7c:	4b39      	ldr	r3, [pc, #228]	@ (8004064 <task_drawString+0x134>)
 8003f7e:	22ff      	movs	r2, #255	@ 0xff
 8003f80:	701a      	strb	r2, [r3, #0]
 8003f82:	4b35      	ldr	r3, [pc, #212]	@ (8004058 <task_drawString+0x128>)
 8003f84:	2200      	movs	r2, #0
 8003f86:	701a      	strb	r2, [r3, #0]
 8003f88:	e061      	b.n	800404e <task_drawString+0x11e>
 8003f8a:	4b35      	ldr	r3, [pc, #212]	@ (8004060 <task_drawString+0x130>)
 8003f8c:	689b      	ldr	r3, [r3, #8]
 8003f8e:	781b      	ldrb	r3, [r3, #0]
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d054      	beq.n	800403e <task_drawString+0x10e>
 8003f94:	4b32      	ldr	r3, [pc, #200]	@ (8004060 <task_drawString+0x130>)
 8003f96:	f9b3 1000 	ldrsh.w	r1, [r3]
 8003f9a:	4b31      	ldr	r3, [pc, #196]	@ (8004060 <task_drawString+0x130>)
 8003f9c:	f9b3 2002 	ldrsh.w	r2, [r3, #2]
 8003fa0:	4b2f      	ldr	r3, [pc, #188]	@ (8004060 <task_drawString+0x130>)
 8003fa2:	7918      	ldrb	r0, [r3, #4]
 8003fa4:	4b2e      	ldr	r3, [pc, #184]	@ (8004060 <task_drawString+0x130>)
 8003fa6:	689b      	ldr	r3, [r3, #8]
 8003fa8:	781b      	ldrb	r3, [r3, #0]
 8003faa:	9300      	str	r3, [sp, #0]
 8003fac:	4603      	mov	r3, r0
 8003fae:	68b8      	ldr	r0, [r7, #8]
 8003fb0:	f7ff ff66 	bl	8003e80 <ucg_DrawGlyph>
 8003fb4:	4603      	mov	r3, r0
 8003fb6:	81fb      	strh	r3, [r7, #14]
 8003fb8:	4b29      	ldr	r3, [pc, #164]	@ (8004060 <task_drawString+0x130>)
 8003fba:	791b      	ldrb	r3, [r3, #4]
 8003fbc:	2b03      	cmp	r3, #3
 8003fbe:	d837      	bhi.n	8004030 <task_drawString+0x100>
 8003fc0:	a201      	add	r2, pc, #4	@ (adr r2, 8003fc8 <task_drawString+0x98>)
 8003fc2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003fc6:	bf00      	nop
 8003fc8:	08003fd9 	.word	0x08003fd9
 8003fcc:	08003fef 	.word	0x08003fef
 8003fd0:	08004005 	.word	0x08004005
 8003fd4:	0800401b 	.word	0x0800401b
 8003fd8:	4b21      	ldr	r3, [pc, #132]	@ (8004060 <task_drawString+0x130>)
 8003fda:	f9b3 3000 	ldrsh.w	r3, [r3]
 8003fde:	b29a      	uxth	r2, r3
 8003fe0:	89fb      	ldrh	r3, [r7, #14]
 8003fe2:	4413      	add	r3, r2
 8003fe4:	b29b      	uxth	r3, r3
 8003fe6:	b21a      	sxth	r2, r3
 8003fe8:	4b1d      	ldr	r3, [pc, #116]	@ (8004060 <task_drawString+0x130>)
 8003fea:	801a      	strh	r2, [r3, #0]
 8003fec:	e021      	b.n	8004032 <task_drawString+0x102>
 8003fee:	4b1c      	ldr	r3, [pc, #112]	@ (8004060 <task_drawString+0x130>)
 8003ff0:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8003ff4:	b29a      	uxth	r2, r3
 8003ff6:	89fb      	ldrh	r3, [r7, #14]
 8003ff8:	4413      	add	r3, r2
 8003ffa:	b29b      	uxth	r3, r3
 8003ffc:	b21a      	sxth	r2, r3
 8003ffe:	4b18      	ldr	r3, [pc, #96]	@ (8004060 <task_drawString+0x130>)
 8004000:	805a      	strh	r2, [r3, #2]
 8004002:	e016      	b.n	8004032 <task_drawString+0x102>
 8004004:	4b16      	ldr	r3, [pc, #88]	@ (8004060 <task_drawString+0x130>)
 8004006:	f9b3 3000 	ldrsh.w	r3, [r3]
 800400a:	b29a      	uxth	r2, r3
 800400c:	89fb      	ldrh	r3, [r7, #14]
 800400e:	1ad3      	subs	r3, r2, r3
 8004010:	b29b      	uxth	r3, r3
 8004012:	b21a      	sxth	r2, r3
 8004014:	4b12      	ldr	r3, [pc, #72]	@ (8004060 <task_drawString+0x130>)
 8004016:	801a      	strh	r2, [r3, #0]
 8004018:	e00b      	b.n	8004032 <task_drawString+0x102>
 800401a:	4b11      	ldr	r3, [pc, #68]	@ (8004060 <task_drawString+0x130>)
 800401c:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004020:	b29a      	uxth	r2, r3
 8004022:	89fb      	ldrh	r3, [r7, #14]
 8004024:	1ad3      	subs	r3, r2, r3
 8004026:	b29b      	uxth	r3, r3
 8004028:	b21a      	sxth	r2, r3
 800402a:	4b0d      	ldr	r3, [pc, #52]	@ (8004060 <task_drawString+0x130>)
 800402c:	805a      	strh	r2, [r3, #2]
 800402e:	e000      	b.n	8004032 <task_drawString+0x102>
 8004030:	bf00      	nop
 8004032:	4b0b      	ldr	r3, [pc, #44]	@ (8004060 <task_drawString+0x130>)
 8004034:	689b      	ldr	r3, [r3, #8]
 8004036:	3301      	adds	r3, #1
 8004038:	4a09      	ldr	r2, [pc, #36]	@ (8004060 <task_drawString+0x130>)
 800403a:	6093      	str	r3, [r2, #8]
 800403c:	e007      	b.n	800404e <task_drawString+0x11e>
 800403e:	4b06      	ldr	r3, [pc, #24]	@ (8004058 <task_drawString+0x128>)
 8004040:	2200      	movs	r2, #0
 8004042:	701a      	strb	r2, [r3, #0]
 8004044:	e003      	b.n	800404e <task_drawString+0x11e>
 8004046:	4b04      	ldr	r3, [pc, #16]	@ (8004058 <task_drawString+0x128>)
 8004048:	2200      	movs	r2, #0
 800404a:	701a      	strb	r2, [r3, #0]
 800404c:	bf00      	nop
 800404e:	bf00      	nop
 8004050:	3710      	adds	r7, #16
 8004052:	46bd      	mov	sp, r7
 8004054:	bd80      	pop	{r7, pc}
 8004056:	bf00      	nop
 8004058:	20001864 	.word	0x20001864
 800405c:	20000854 	.word	0x20000854
 8004060:	200019b4 	.word	0x200019b4
 8004064:	20000079 	.word	0x20000079

08004068 <ucg_DrawString>:
 8004068:	b580      	push	{r7, lr}
 800406a:	b08a      	sub	sp, #40	@ 0x28
 800406c:	af02      	add	r7, sp, #8
 800406e:	60f8      	str	r0, [r7, #12]
 8004070:	4608      	mov	r0, r1
 8004072:	4611      	mov	r1, r2
 8004074:	461a      	mov	r2, r3
 8004076:	4603      	mov	r3, r0
 8004078:	817b      	strh	r3, [r7, #10]
 800407a:	460b      	mov	r3, r1
 800407c:	813b      	strh	r3, [r7, #8]
 800407e:	4613      	mov	r3, r2
 8004080:	71fb      	strb	r3, [r7, #7]
 8004082:	2300      	movs	r3, #0
 8004084:	83fb      	strh	r3, [r7, #30]
 8004086:	897b      	ldrh	r3, [r7, #10]
 8004088:	823b      	strh	r3, [r7, #16]
 800408a:	893b      	ldrh	r3, [r7, #8]
 800408c:	827b      	strh	r3, [r7, #18]
 800408e:	79fb      	ldrb	r3, [r7, #7]
 8004090:	753b      	strb	r3, [r7, #20]
 8004092:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004094:	61bb      	str	r3, [r7, #24]
 8004096:	f107 0310 	add.w	r3, r7, #16
 800409a:	4619      	mov	r1, r3
 800409c:	480c      	ldr	r0, [pc, #48]	@ (80040d0 <ucg_DrawString+0x68>)
 800409e:	f000 fb01 	bl	80046a4 <bufEnDat>
 80040a2:	4b0c      	ldr	r3, [pc, #48]	@ (80040d4 <ucg_DrawString+0x6c>)
 80040a4:	781b      	ldrb	r3, [r3, #0]
 80040a6:	2bff      	cmp	r3, #255	@ 0xff
 80040a8:	d10b      	bne.n	80040c2 <ucg_DrawString+0x5a>
 80040aa:	68fb      	ldr	r3, [r7, #12]
 80040ac:	9300      	str	r3, [sp, #0]
 80040ae:	4b0a      	ldr	r3, [pc, #40]	@ (80040d8 <ucg_DrawString+0x70>)
 80040b0:	22ff      	movs	r2, #255	@ 0xff
 80040b2:	211e      	movs	r1, #30
 80040b4:	4809      	ldr	r0, [pc, #36]	@ (80040dc <ucg_DrawString+0x74>)
 80040b6:	f7fe fbff 	bl	80028b8 <TimerStart>
 80040ba:	4603      	mov	r3, r0
 80040bc:	461a      	mov	r2, r3
 80040be:	4b05      	ldr	r3, [pc, #20]	@ (80040d4 <ucg_DrawString+0x6c>)
 80040c0:	701a      	strb	r2, [r3, #0]
 80040c2:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 80040c6:	4618      	mov	r0, r3
 80040c8:	3720      	adds	r7, #32
 80040ca:	46bd      	mov	sp, r7
 80040cc:	bd80      	pop	{r7, pc}
 80040ce:	bf00      	nop
 80040d0:	20000854 	.word	0x20000854
 80040d4:	20000079 	.word	0x20000079
 80040d8:	08003f31 	.word	0x08003f31
 80040dc:	0800642c 	.word	0x0800642c

080040e0 <ucg_UpdateRefHeight>:
 80040e0:	b480      	push	{r7}
 80040e2:	b083      	sub	sp, #12
 80040e4:	af00      	add	r7, sp, #0
 80040e6:	6078      	str	r0, [r7, #4]
 80040e8:	687b      	ldr	r3, [r7, #4]
 80040ea:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80040ec:	2b00      	cmp	r3, #0
 80040ee:	d05d      	beq.n	80041ac <ucg_UpdateRefHeight+0xcc>
 80040f0:	687b      	ldr	r3, [r7, #4]
 80040f2:	f993 209d 	ldrsb.w	r2, [r3, #157]	@ 0x9d
 80040f6:	687b      	ldr	r3, [r7, #4]
 80040f8:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	f993 209e 	ldrsb.w	r2, [r3, #158]	@ 0x9e
 8004102:	687b      	ldr	r3, [r7, #4]
 8004104:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 8004108:	687b      	ldr	r3, [r7, #4]
 800410a:	f893 30ab 	ldrb.w	r3, [r3, #171]	@ 0xab
 800410e:	2b00      	cmp	r3, #0
 8004110:	d04d      	beq.n	80041ae <ucg_UpdateRefHeight+0xce>
 8004112:	687b      	ldr	r3, [r7, #4]
 8004114:	f893 30ab 	ldrb.w	r3, [r3, #171]	@ 0xab
 8004118:	2b01      	cmp	r3, #1
 800411a:	d11c      	bne.n	8004156 <ucg_UpdateRefHeight+0x76>
 800411c:	687b      	ldr	r3, [r7, #4]
 800411e:	f993 20ac 	ldrsb.w	r2, [r3, #172]	@ 0xac
 8004122:	687b      	ldr	r3, [r7, #4]
 8004124:	f993 309f 	ldrsb.w	r3, [r3, #159]	@ 0x9f
 8004128:	429a      	cmp	r2, r3
 800412a:	da05      	bge.n	8004138 <ucg_UpdateRefHeight+0x58>
 800412c:	687b      	ldr	r3, [r7, #4]
 800412e:	f993 209f 	ldrsb.w	r2, [r3, #159]	@ 0x9f
 8004132:	687b      	ldr	r3, [r7, #4]
 8004134:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 8004138:	687b      	ldr	r3, [r7, #4]
 800413a:	f993 20ad 	ldrsb.w	r2, [r3, #173]	@ 0xad
 800413e:	687b      	ldr	r3, [r7, #4]
 8004140:	f993 30a0 	ldrsb.w	r3, [r3, #160]	@ 0xa0
 8004144:	429a      	cmp	r2, r3
 8004146:	dd32      	ble.n	80041ae <ucg_UpdateRefHeight+0xce>
 8004148:	687b      	ldr	r3, [r7, #4]
 800414a:	f993 20a0 	ldrsb.w	r2, [r3, #160]	@ 0xa0
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 8004154:	e02b      	b.n	80041ae <ucg_UpdateRefHeight+0xce>
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	f993 30ac 	ldrsb.w	r3, [r3, #172]	@ 0xac
 800415c:	461a      	mov	r2, r3
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	f993 309a 	ldrsb.w	r3, [r3, #154]	@ 0x9a
 8004164:	4619      	mov	r1, r3
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 800416c:	440b      	add	r3, r1
 800416e:	429a      	cmp	r2, r3
 8004170:	da0d      	bge.n	800418e <ucg_UpdateRefHeight+0xae>
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	f993 309a 	ldrsb.w	r3, [r3, #154]	@ 0x9a
 8004178:	b2da      	uxtb	r2, r3
 800417a:	687b      	ldr	r3, [r7, #4]
 800417c:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 8004180:	b2db      	uxtb	r3, r3
 8004182:	4413      	add	r3, r2
 8004184:	b2db      	uxtb	r3, r3
 8004186:	b25a      	sxtb	r2, r3
 8004188:	687b      	ldr	r3, [r7, #4]
 800418a:	f883 20ac 	strb.w	r2, [r3, #172]	@ 0xac
 800418e:	687b      	ldr	r3, [r7, #4]
 8004190:	f993 20ad 	ldrsb.w	r2, [r3, #173]	@ 0xad
 8004194:	687b      	ldr	r3, [r7, #4]
 8004196:	f993 309c 	ldrsb.w	r3, [r3, #156]	@ 0x9c
 800419a:	429a      	cmp	r2, r3
 800419c:	dd07      	ble.n	80041ae <ucg_UpdateRefHeight+0xce>
 800419e:	687b      	ldr	r3, [r7, #4]
 80041a0:	f993 209c 	ldrsb.w	r2, [r3, #156]	@ 0x9c
 80041a4:	687b      	ldr	r3, [r7, #4]
 80041a6:	f883 20ad 	strb.w	r2, [r3, #173]	@ 0xad
 80041aa:	e000      	b.n	80041ae <ucg_UpdateRefHeight+0xce>
 80041ac:	bf00      	nop
 80041ae:	370c      	adds	r7, #12
 80041b0:	46bd      	mov	sp, r7
 80041b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041b6:	4770      	bx	lr

080041b8 <ucg_font_calc_vref_font>:
 80041b8:	b480      	push	{r7}
 80041ba:	b083      	sub	sp, #12
 80041bc:	af00      	add	r7, sp, #0
 80041be:	6078      	str	r0, [r7, #4]
 80041c0:	2300      	movs	r3, #0
 80041c2:	4618      	mov	r0, r3
 80041c4:	370c      	adds	r7, #12
 80041c6:	46bd      	mov	sp, r7
 80041c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041cc:	4770      	bx	lr
	...

080041d0 <ucg_SetFontPosBaseline>:
 80041d0:	b480      	push	{r7}
 80041d2:	b083      	sub	sp, #12
 80041d4:	af00      	add	r7, sp, #0
 80041d6:	6078      	str	r0, [r7, #4]
 80041d8:	687b      	ldr	r3, [r7, #4]
 80041da:	4a04      	ldr	r2, [pc, #16]	@ (80041ec <ucg_SetFontPosBaseline+0x1c>)
 80041dc:	67da      	str	r2, [r3, #124]	@ 0x7c
 80041de:	bf00      	nop
 80041e0:	370c      	adds	r7, #12
 80041e2:	46bd      	mov	sp, r7
 80041e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80041e8:	4770      	bx	lr
 80041ea:	bf00      	nop
 80041ec:	080041b9 	.word	0x080041b9

080041f0 <ucg_SetFont>:
 80041f0:	b580      	push	{r7, lr}
 80041f2:	b082      	sub	sp, #8
 80041f4:	af00      	add	r7, sp, #0
 80041f6:	6078      	str	r0, [r7, #4]
 80041f8:	6039      	str	r1, [r7, #0]
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 80041fe:	683a      	ldr	r2, [r7, #0]
 8004200:	429a      	cmp	r2, r3
 8004202:	d012      	beq.n	800422a <ucg_SetFont+0x3a>
 8004204:	687b      	ldr	r3, [r7, #4]
 8004206:	683a      	ldr	r2, [r7, #0]
 8004208:	679a      	str	r2, [r3, #120]	@ 0x78
 800420a:	687b      	ldr	r3, [r7, #4]
 800420c:	3390      	adds	r3, #144	@ 0x90
 800420e:	6839      	ldr	r1, [r7, #0]
 8004210:	4618      	mov	r0, r3
 8004212:	f7ff fac9 	bl	80037a8 <ucg_read_font_info>
 8004216:	6878      	ldr	r0, [r7, #4]
 8004218:	f7ff ff62 	bl	80040e0 <ucg_UpdateRefHeight>
 800421c:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8004220:	220c      	movs	r2, #12
 8004222:	4904      	ldr	r1, [pc, #16]	@ (8004234 <ucg_SetFont+0x44>)
 8004224:	4804      	ldr	r0, [pc, #16]	@ (8004238 <ucg_SetFont+0x48>)
 8004226:	f000 f9d7 	bl	80045d8 <bufInit>
 800422a:	bf00      	nop
 800422c:	3708      	adds	r7, #8
 800422e:	46bd      	mov	sp, r7
 8004230:	bd80      	pop	{r7, pc}
 8004232:	bf00      	nop
 8004234:	20000854 	.word	0x20000854
 8004238:	20000864 	.word	0x20000864

0800423c <ucg_init_struct>:
 800423c:	b480      	push	{r7}
 800423e:	b083      	sub	sp, #12
 8004240:	af00      	add	r7, sp, #0
 8004242:	6078      	str	r0, [r7, #4]
 8004244:	687a      	ldr	r2, [r7, #4]
 8004246:	7813      	ldrb	r3, [r2, #0]
 8004248:	f36f 0300 	bfc	r3, #0, #1
 800424c:	7013      	strb	r3, [r2, #0]
 800424e:	687b      	ldr	r3, [r7, #4]
 8004250:	2200      	movs	r2, #0
 8004252:	611a      	str	r2, [r3, #16]
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	2201      	movs	r2, #1
 8004258:	865a      	strh	r2, [r3, #50]	@ 0x32
 800425a:	687b      	ldr	r3, [r7, #4]
 800425c:	2200      	movs	r2, #0
 800425e:	679a      	str	r2, [r3, #120]	@ 0x78
 8004260:	687b      	ldr	r3, [r7, #4]
 8004262:	2201      	movs	r2, #1
 8004264:	f883 208d 	strb.w	r2, [r3, #141]	@ 0x8d
 8004268:	687b      	ldr	r3, [r7, #4]
 800426a:	2200      	movs	r2, #0
 800426c:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8004270:	687b      	ldr	r3, [r7, #4]
 8004272:	2200      	movs	r2, #0
 8004274:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	2200      	movs	r2, #0
 800427c:	f883 20b0 	strb.w	r2, [r3, #176]	@ 0xb0
 8004280:	bf00      	nop
 8004282:	370c      	adds	r7, #12
 8004284:	46bd      	mov	sp, r7
 8004286:	f85d 7b04 	ldr.w	r7, [sp], #4
 800428a:	4770      	bx	lr

0800428c <ucg_Init>:
 800428c:	b580      	push	{r7, lr}
 800428e:	b086      	sub	sp, #24
 8004290:	af00      	add	r7, sp, #0
 8004292:	60f8      	str	r0, [r7, #12]
 8004294:	60b9      	str	r1, [r7, #8]
 8004296:	607a      	str	r2, [r7, #4]
 8004298:	603b      	str	r3, [r7, #0]
 800429a:	68f8      	ldr	r0, [r7, #12]
 800429c:	f7ff ffce 	bl	800423c <ucg_init_struct>
 80042a0:	687b      	ldr	r3, [r7, #4]
 80042a2:	2b00      	cmp	r3, #0
 80042a4:	d103      	bne.n	80042ae <ucg_Init+0x22>
 80042a6:	68fb      	ldr	r3, [r7, #12]
 80042a8:	4a0e      	ldr	r2, [pc, #56]	@ (80042e4 <ucg_Init+0x58>)
 80042aa:	60da      	str	r2, [r3, #12]
 80042ac:	e002      	b.n	80042b4 <ucg_Init+0x28>
 80042ae:	68fb      	ldr	r3, [r7, #12]
 80042b0:	687a      	ldr	r2, [r7, #4]
 80042b2:	60da      	str	r2, [r3, #12]
 80042b4:	68fb      	ldr	r3, [r7, #12]
 80042b6:	68ba      	ldr	r2, [r7, #8]
 80042b8:	609a      	str	r2, [r3, #8]
 80042ba:	68fb      	ldr	r3, [r7, #12]
 80042bc:	683a      	ldr	r2, [r7, #0]
 80042be:	61da      	str	r2, [r3, #28]
 80042c0:	68f8      	ldr	r0, [r7, #12]
 80042c2:	f7ff ff85 	bl	80041d0 <ucg_SetFontPosBaseline>
 80042c6:	68f8      	ldr	r0, [r7, #12]
 80042c8:	f7ff f996 	bl	80035f8 <ucg_PowerUp>
 80042cc:	4603      	mov	r3, r0
 80042ce:	82fb      	strh	r3, [r7, #22]
 80042d0:	68f8      	ldr	r0, [r7, #12]
 80042d2:	f7ff f9d6 	bl	8003682 <ucg_GetDimension>
 80042d6:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 80042da:	4618      	mov	r0, r3
 80042dc:	3718      	adds	r7, #24
 80042de:	46bd      	mov	sp, r7
 80042e0:	bd80      	pop	{r7, pc}
 80042e2:	bf00      	nop
 80042e4:	0800325d 	.word	0x0800325d

080042e8 <ucg_Draw90Line>:
 80042e8:	b580      	push	{r7, lr}
 80042ea:	b084      	sub	sp, #16
 80042ec:	af00      	add	r7, sp, #0
 80042ee:	60f8      	str	r0, [r7, #12]
 80042f0:	4608      	mov	r0, r1
 80042f2:	4611      	mov	r1, r2
 80042f4:	461a      	mov	r2, r3
 80042f6:	4603      	mov	r3, r0
 80042f8:	817b      	strh	r3, [r7, #10]
 80042fa:	460b      	mov	r3, r1
 80042fc:	813b      	strh	r3, [r7, #8]
 80042fe:	4613      	mov	r3, r2
 8004300:	80fb      	strh	r3, [r7, #6]
 8004302:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8004306:	68f9      	ldr	r1, [r7, #12]
 8004308:	4613      	mov	r3, r2
 800430a:	005b      	lsls	r3, r3, #1
 800430c:	4413      	add	r3, r2
 800430e:	440b      	add	r3, r1
 8004310:	333a      	adds	r3, #58	@ 0x3a
 8004312:	781a      	ldrb	r2, [r3, #0]
 8004314:	68fb      	ldr	r3, [r7, #12]
 8004316:	f883 2028 	strb.w	r2, [r3, #40]	@ 0x28
 800431a:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 800431e:	68f9      	ldr	r1, [r7, #12]
 8004320:	4613      	mov	r3, r2
 8004322:	005b      	lsls	r3, r3, #1
 8004324:	4413      	add	r3, r2
 8004326:	440b      	add	r3, r1
 8004328:	333b      	adds	r3, #59	@ 0x3b
 800432a:	781a      	ldrb	r2, [r3, #0]
 800432c:	68fb      	ldr	r3, [r7, #12]
 800432e:	f883 2029 	strb.w	r2, [r3, #41]	@ 0x29
 8004332:	f9b7 201c 	ldrsh.w	r2, [r7, #28]
 8004336:	68f9      	ldr	r1, [r7, #12]
 8004338:	4613      	mov	r3, r2
 800433a:	005b      	lsls	r3, r3, #1
 800433c:	4413      	add	r3, r2
 800433e:	440b      	add	r3, r1
 8004340:	333c      	adds	r3, #60	@ 0x3c
 8004342:	781a      	ldrb	r2, [r3, #0]
 8004344:	68fb      	ldr	r3, [r7, #12]
 8004346:	f883 202a 	strb.w	r2, [r3, #42]	@ 0x2a
 800434a:	68fb      	ldr	r3, [r7, #12]
 800434c:	897a      	ldrh	r2, [r7, #10]
 800434e:	849a      	strh	r2, [r3, #36]	@ 0x24
 8004350:	68fb      	ldr	r3, [r7, #12]
 8004352:	893a      	ldrh	r2, [r7, #8]
 8004354:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004356:	68fb      	ldr	r3, [r7, #12]
 8004358:	88fa      	ldrh	r2, [r7, #6]
 800435a:	859a      	strh	r2, [r3, #44]	@ 0x2c
 800435c:	68fb      	ldr	r3, [r7, #12]
 800435e:	8b3a      	ldrh	r2, [r7, #24]
 8004360:	85da      	strh	r2, [r3, #46]	@ 0x2e
 8004362:	68f8      	ldr	r0, [r7, #12]
 8004364:	f7ff f99f 	bl	80036a6 <ucg_DrawL90FXWithArg>
 8004368:	bf00      	nop
 800436a:	3710      	adds	r7, #16
 800436c:	46bd      	mov	sp, r7
 800436e:	bd80      	pop	{r7, pc}

08004370 <ucg_DrawHLine>:
 8004370:	b580      	push	{r7, lr}
 8004372:	b086      	sub	sp, #24
 8004374:	af02      	add	r7, sp, #8
 8004376:	60f8      	str	r0, [r7, #12]
 8004378:	4608      	mov	r0, r1
 800437a:	4611      	mov	r1, r2
 800437c:	461a      	mov	r2, r3
 800437e:	4603      	mov	r3, r0
 8004380:	817b      	strh	r3, [r7, #10]
 8004382:	460b      	mov	r3, r1
 8004384:	813b      	strh	r3, [r7, #8]
 8004386:	4613      	mov	r3, r2
 8004388:	80fb      	strh	r3, [r7, #6]
 800438a:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 800438e:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8004392:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004396:	2300      	movs	r3, #0
 8004398:	9301      	str	r3, [sp, #4]
 800439a:	2300      	movs	r3, #0
 800439c:	9300      	str	r3, [sp, #0]
 800439e:	4603      	mov	r3, r0
 80043a0:	68f8      	ldr	r0, [r7, #12]
 80043a2:	f7ff ffa1 	bl	80042e8 <ucg_Draw90Line>
 80043a6:	bf00      	nop
 80043a8:	3710      	adds	r7, #16
 80043aa:	46bd      	mov	sp, r7
 80043ac:	bd80      	pop	{r7, pc}

080043ae <ucg_SetColor>:
 80043ae:	b480      	push	{r7}
 80043b0:	b083      	sub	sp, #12
 80043b2:	af00      	add	r7, sp, #0
 80043b4:	6078      	str	r0, [r7, #4]
 80043b6:	4608      	mov	r0, r1
 80043b8:	4611      	mov	r1, r2
 80043ba:	461a      	mov	r2, r3
 80043bc:	4603      	mov	r3, r0
 80043be:	70fb      	strb	r3, [r7, #3]
 80043c0:	460b      	mov	r3, r1
 80043c2:	70bb      	strb	r3, [r7, #2]
 80043c4:	4613      	mov	r3, r2
 80043c6:	707b      	strb	r3, [r7, #1]
 80043c8:	78fa      	ldrb	r2, [r7, #3]
 80043ca:	6879      	ldr	r1, [r7, #4]
 80043cc:	4613      	mov	r3, r2
 80043ce:	005b      	lsls	r3, r3, #1
 80043d0:	4413      	add	r3, r2
 80043d2:	440b      	add	r3, r1
 80043d4:	333a      	adds	r3, #58	@ 0x3a
 80043d6:	78ba      	ldrb	r2, [r7, #2]
 80043d8:	701a      	strb	r2, [r3, #0]
 80043da:	78fa      	ldrb	r2, [r7, #3]
 80043dc:	6879      	ldr	r1, [r7, #4]
 80043de:	4613      	mov	r3, r2
 80043e0:	005b      	lsls	r3, r3, #1
 80043e2:	4413      	add	r3, r2
 80043e4:	440b      	add	r3, r1
 80043e6:	333b      	adds	r3, #59	@ 0x3b
 80043e8:	787a      	ldrb	r2, [r7, #1]
 80043ea:	701a      	strb	r2, [r3, #0]
 80043ec:	78fa      	ldrb	r2, [r7, #3]
 80043ee:	6879      	ldr	r1, [r7, #4]
 80043f0:	4613      	mov	r3, r2
 80043f2:	005b      	lsls	r3, r3, #1
 80043f4:	4413      	add	r3, r2
 80043f6:	440b      	add	r3, r1
 80043f8:	333c      	adds	r3, #60	@ 0x3c
 80043fa:	7c3a      	ldrb	r2, [r7, #16]
 80043fc:	701a      	strb	r2, [r3, #0]
 80043fe:	bf00      	nop
 8004400:	370c      	adds	r7, #12
 8004402:	46bd      	mov	sp, r7
 8004404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004408:	4770      	bx	lr

0800440a <ucg_UndoRotate>:
 800440a:	b580      	push	{r7, lr}
 800440c:	b082      	sub	sp, #8
 800440e:	af00      	add	r7, sp, #0
 8004410:	6078      	str	r0, [r7, #4]
 8004412:	687b      	ldr	r3, [r7, #4]
 8004414:	691b      	ldr	r3, [r3, #16]
 8004416:	2b00      	cmp	r3, #0
 8004418:	d006      	beq.n	8004428 <ucg_UndoRotate+0x1e>
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	691a      	ldr	r2, [r3, #16]
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	609a      	str	r2, [r3, #8]
 8004422:	687b      	ldr	r3, [r7, #4]
 8004424:	2200      	movs	r2, #0
 8004426:	611a      	str	r2, [r3, #16]
 8004428:	6878      	ldr	r0, [r7, #4]
 800442a:	f7ff f92a 	bl	8003682 <ucg_GetDimension>
 800442e:	6878      	ldr	r0, [r7, #4]
 8004430:	f7ff f90f 	bl	8003652 <ucg_SetMaxClipRange>
 8004434:	bf00      	nop
 8004436:	3708      	adds	r7, #8
 8004438:	46bd      	mov	sp, r7
 800443a:	bd80      	pop	{r7, pc}

0800443c <ucg_rotate_180_xy>:
 800443c:	b480      	push	{r7}
 800443e:	b085      	sub	sp, #20
 8004440:	af00      	add	r7, sp, #0
 8004442:	6078      	str	r0, [r7, #4]
 8004444:	6039      	str	r1, [r7, #0]
 8004446:	687b      	ldr	r3, [r7, #4]
 8004448:	8adb      	ldrh	r3, [r3, #22]
 800444a:	81fb      	strh	r3, [r7, #14]
 800444c:	89fa      	ldrh	r2, [r7, #14]
 800444e:	683b      	ldr	r3, [r7, #0]
 8004450:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004454:	b29b      	uxth	r3, r3
 8004456:	1ad3      	subs	r3, r2, r3
 8004458:	b29b      	uxth	r3, r3
 800445a:	81fb      	strh	r3, [r7, #14]
 800445c:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004460:	b29b      	uxth	r3, r3
 8004462:	3b01      	subs	r3, #1
 8004464:	b29b      	uxth	r3, r3
 8004466:	81fb      	strh	r3, [r7, #14]
 8004468:	683b      	ldr	r3, [r7, #0]
 800446a:	89fa      	ldrh	r2, [r7, #14]
 800446c:	805a      	strh	r2, [r3, #2]
 800446e:	687b      	ldr	r3, [r7, #4]
 8004470:	8a9b      	ldrh	r3, [r3, #20]
 8004472:	81bb      	strh	r3, [r7, #12]
 8004474:	89ba      	ldrh	r2, [r7, #12]
 8004476:	683b      	ldr	r3, [r7, #0]
 8004478:	f9b3 3000 	ldrsh.w	r3, [r3]
 800447c:	b29b      	uxth	r3, r3
 800447e:	1ad3      	subs	r3, r2, r3
 8004480:	b29b      	uxth	r3, r3
 8004482:	81bb      	strh	r3, [r7, #12]
 8004484:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004488:	b29b      	uxth	r3, r3
 800448a:	3b01      	subs	r3, #1
 800448c:	b29b      	uxth	r3, r3
 800448e:	81bb      	strh	r3, [r7, #12]
 8004490:	683b      	ldr	r3, [r7, #0]
 8004492:	89ba      	ldrh	r2, [r7, #12]
 8004494:	801a      	strh	r2, [r3, #0]
 8004496:	bf00      	nop
 8004498:	3714      	adds	r7, #20
 800449a:	46bd      	mov	sp, r7
 800449c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044a0:	4770      	bx	lr
	...

080044a4 <ucg_dev_rotate180>:
 80044a4:	b580      	push	{r7, lr}
 80044a6:	b084      	sub	sp, #16
 80044a8:	af00      	add	r7, sp, #0
 80044aa:	60f8      	str	r0, [r7, #12]
 80044ac:	460b      	mov	r3, r1
 80044ae:	607a      	str	r2, [r7, #4]
 80044b0:	817b      	strh	r3, [r7, #10]
 80044b2:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 80044b6:	3b0c      	subs	r3, #12
 80044b8:	2b0b      	cmp	r3, #11
 80044ba:	d866      	bhi.n	800458a <ucg_dev_rotate180+0xe6>
 80044bc:	a201      	add	r2, pc, #4	@ (adr r2, 80044c4 <ucg_dev_rotate180+0x20>)
 80044be:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80044c2:	bf00      	nop
 80044c4:	08004513 	.word	0x08004513
 80044c8:	0800458b 	.word	0x0800458b
 80044cc:	0800458b 	.word	0x0800458b
 80044d0:	080044f5 	.word	0x080044f5
 80044d4:	0800458b 	.word	0x0800458b
 80044d8:	0800458b 	.word	0x0800458b
 80044dc:	0800458b 	.word	0x0800458b
 80044e0:	0800458b 	.word	0x0800458b
 80044e4:	0800455b 	.word	0x0800455b
 80044e8:	0800455b 	.word	0x0800455b
 80044ec:	0800458b 	.word	0x0800458b
 80044f0:	0800455b 	.word	0x0800455b
 80044f4:	68fb      	ldr	r3, [r7, #12]
 80044f6:	691b      	ldr	r3, [r3, #16]
 80044f8:	68fa      	ldr	r2, [r7, #12]
 80044fa:	3214      	adds	r2, #20
 80044fc:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004500:	68f8      	ldr	r0, [r7, #12]
 8004502:	4798      	blx	r3
 8004504:	687a      	ldr	r2, [r7, #4]
 8004506:	68fb      	ldr	r3, [r7, #12]
 8004508:	3314      	adds	r3, #20
 800450a:	6818      	ldr	r0, [r3, #0]
 800450c:	6010      	str	r0, [r2, #0]
 800450e:	2301      	movs	r3, #1
 8004510:	e043      	b.n	800459a <ucg_dev_rotate180+0xf6>
 8004512:	687b      	ldr	r3, [r7, #4]
 8004514:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8004518:	b29a      	uxth	r2, r3
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 8004520:	b29b      	uxth	r3, r3
 8004522:	4413      	add	r3, r2
 8004524:	b29b      	uxth	r3, r3
 8004526:	3b01      	subs	r3, #1
 8004528:	b29b      	uxth	r3, r3
 800452a:	b21a      	sxth	r2, r3
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	805a      	strh	r2, [r3, #2]
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	f9b3 3000 	ldrsh.w	r3, [r3]
 8004536:	b29a      	uxth	r2, r3
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	f9b3 3004 	ldrsh.w	r3, [r3, #4]
 800453e:	b29b      	uxth	r3, r3
 8004540:	4413      	add	r3, r2
 8004542:	b29b      	uxth	r3, r3
 8004544:	3b01      	subs	r3, #1
 8004546:	b29b      	uxth	r3, r3
 8004548:	b21a      	sxth	r2, r3
 800454a:	687b      	ldr	r3, [r7, #4]
 800454c:	801a      	strh	r2, [r3, #0]
 800454e:	687b      	ldr	r3, [r7, #4]
 8004550:	4619      	mov	r1, r3
 8004552:	68f8      	ldr	r0, [r7, #12]
 8004554:	f7ff ff72 	bl	800443c <ucg_rotate_180_xy>
 8004558:	e017      	b.n	800458a <ucg_dev_rotate180+0xe6>
 800455a:	68fb      	ldr	r3, [r7, #12]
 800455c:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8004560:	b29b      	uxth	r3, r3
 8004562:	3302      	adds	r3, #2
 8004564:	b29b      	uxth	r3, r3
 8004566:	b21a      	sxth	r2, r3
 8004568:	68fb      	ldr	r3, [r7, #12]
 800456a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800456c:	68fb      	ldr	r3, [r7, #12]
 800456e:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8004572:	f003 0303 	and.w	r3, r3, #3
 8004576:	b21a      	sxth	r2, r3
 8004578:	68fb      	ldr	r3, [r7, #12]
 800457a:	85da      	strh	r2, [r3, #46]	@ 0x2e
 800457c:	68fb      	ldr	r3, [r7, #12]
 800457e:	3324      	adds	r3, #36	@ 0x24
 8004580:	4619      	mov	r1, r3
 8004582:	68f8      	ldr	r0, [r7, #12]
 8004584:	f7ff ff5a 	bl	800443c <ucg_rotate_180_xy>
 8004588:	bf00      	nop
 800458a:	68fb      	ldr	r3, [r7, #12]
 800458c:	691b      	ldr	r3, [r3, #16]
 800458e:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 8004592:	687a      	ldr	r2, [r7, #4]
 8004594:	68f8      	ldr	r0, [r7, #12]
 8004596:	4798      	blx	r3
 8004598:	4603      	mov	r3, r0
 800459a:	4618      	mov	r0, r3
 800459c:	3710      	adds	r7, #16
 800459e:	46bd      	mov	sp, r7
 80045a0:	bd80      	pop	{r7, pc}
 80045a2:	bf00      	nop

080045a4 <ucg_SetRotate180>:
 80045a4:	b580      	push	{r7, lr}
 80045a6:	b082      	sub	sp, #8
 80045a8:	af00      	add	r7, sp, #0
 80045aa:	6078      	str	r0, [r7, #4]
 80045ac:	6878      	ldr	r0, [r7, #4]
 80045ae:	f7ff ff2c 	bl	800440a <ucg_UndoRotate>
 80045b2:	687b      	ldr	r3, [r7, #4]
 80045b4:	689a      	ldr	r2, [r3, #8]
 80045b6:	687b      	ldr	r3, [r7, #4]
 80045b8:	611a      	str	r2, [r3, #16]
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	4a05      	ldr	r2, [pc, #20]	@ (80045d4 <ucg_SetRotate180+0x30>)
 80045be:	609a      	str	r2, [r3, #8]
 80045c0:	6878      	ldr	r0, [r7, #4]
 80045c2:	f7ff f85e 	bl	8003682 <ucg_GetDimension>
 80045c6:	6878      	ldr	r0, [r7, #4]
 80045c8:	f7ff f843 	bl	8003652 <ucg_SetMaxClipRange>
 80045cc:	bf00      	nop
 80045ce:	3708      	adds	r7, #8
 80045d0:	46bd      	mov	sp, r7
 80045d2:	bd80      	pop	{r7, pc}
 80045d4:	080044a5 	.word	0x080044a5

080045d8 <bufInit>:
 80045d8:	b580      	push	{r7, lr}
 80045da:	b084      	sub	sp, #16
 80045dc:	af00      	add	r7, sp, #0
 80045de:	60f8      	str	r0, [r7, #12]
 80045e0:	60b9      	str	r1, [r7, #8]
 80045e2:	4611      	mov	r1, r2
 80045e4:	461a      	mov	r2, r3
 80045e6:	460b      	mov	r3, r1
 80045e8:	71fb      	strb	r3, [r7, #7]
 80045ea:	4613      	mov	r3, r2
 80045ec:	80bb      	strh	r3, [r7, #4]
 80045ee:	68bb      	ldr	r3, [r7, #8]
 80045f0:	88ba      	ldrh	r2, [r7, #4]
 80045f2:	801a      	strh	r2, [r3, #0]
 80045f4:	68bb      	ldr	r3, [r7, #8]
 80045f6:	79fa      	ldrb	r2, [r7, #7]
 80045f8:	711a      	strb	r2, [r3, #4]
 80045fa:	68bb      	ldr	r3, [r7, #8]
 80045fc:	68fa      	ldr	r2, [r7, #12]
 80045fe:	60da      	str	r2, [r3, #12]
 8004600:	68b8      	ldr	r0, [r7, #8]
 8004602:	f000 f836 	bl	8004672 <bufFlush>
 8004606:	bf00      	nop
 8004608:	3710      	adds	r7, #16
 800460a:	46bd      	mov	sp, r7
 800460c:	bd80      	pop	{r7, pc}

0800460e <bufNumItems>:
 800460e:	b480      	push	{r7}
 8004610:	b083      	sub	sp, #12
 8004612:	af00      	add	r7, sp, #0
 8004614:	6078      	str	r0, [r7, #4]
 8004616:	687b      	ldr	r3, [r7, #4]
 8004618:	885b      	ldrh	r3, [r3, #2]
 800461a:	4618      	mov	r0, r3
 800461c:	370c      	adds	r7, #12
 800461e:	46bd      	mov	sp, r7
 8004620:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004624:	4770      	bx	lr

08004626 <bufIsFull>:
 8004626:	b480      	push	{r7}
 8004628:	b083      	sub	sp, #12
 800462a:	af00      	add	r7, sp, #0
 800462c:	6078      	str	r0, [r7, #4]
 800462e:	687b      	ldr	r3, [r7, #4]
 8004630:	885a      	ldrh	r2, [r3, #2]
 8004632:	687b      	ldr	r3, [r7, #4]
 8004634:	881b      	ldrh	r3, [r3, #0]
 8004636:	429a      	cmp	r2, r3
 8004638:	bf2c      	ite	cs
 800463a:	2301      	movcs	r3, #1
 800463c:	2300      	movcc	r3, #0
 800463e:	b2db      	uxtb	r3, r3
 8004640:	4618      	mov	r0, r3
 8004642:	370c      	adds	r7, #12
 8004644:	46bd      	mov	sp, r7
 8004646:	f85d 7b04 	ldr.w	r7, [sp], #4
 800464a:	4770      	bx	lr

0800464c <bufIsEmpty>:
 800464c:	b480      	push	{r7}
 800464e:	b083      	sub	sp, #12
 8004650:	af00      	add	r7, sp, #0
 8004652:	6078      	str	r0, [r7, #4]
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	88da      	ldrh	r2, [r3, #6]
 8004658:	687b      	ldr	r3, [r7, #4]
 800465a:	891b      	ldrh	r3, [r3, #8]
 800465c:	429a      	cmp	r2, r3
 800465e:	bf0c      	ite	eq
 8004660:	2301      	moveq	r3, #1
 8004662:	2300      	movne	r3, #0
 8004664:	b2db      	uxtb	r3, r3
 8004666:	4618      	mov	r0, r3
 8004668:	370c      	adds	r7, #12
 800466a:	46bd      	mov	sp, r7
 800466c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004670:	4770      	bx	lr

08004672 <bufFlush>:
 8004672:	b580      	push	{r7, lr}
 8004674:	b082      	sub	sp, #8
 8004676:	af00      	add	r7, sp, #0
 8004678:	6078      	str	r0, [r7, #4]
 800467a:	687b      	ldr	r3, [r7, #4]
 800467c:	2200      	movs	r2, #0
 800467e:	80da      	strh	r2, [r3, #6]
 8004680:	687b      	ldr	r3, [r7, #4]
 8004682:	2200      	movs	r2, #0
 8004684:	811a      	strh	r2, [r3, #8]
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	2200      	movs	r2, #0
 800468a:	805a      	strh	r2, [r3, #2]
 800468c:	687b      	ldr	r3, [r7, #4]
 800468e:	68d8      	ldr	r0, [r3, #12]
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	881b      	ldrh	r3, [r3, #0]
 8004694:	461a      	mov	r2, r3
 8004696:	2100      	movs	r1, #0
 8004698:	f000 f894 	bl	80047c4 <memsetl>
 800469c:	bf00      	nop
 800469e:	3708      	adds	r7, #8
 80046a0:	46bd      	mov	sp, r7
 80046a2:	bd80      	pop	{r7, pc}

080046a4 <bufEnDat>:
 80046a4:	b580      	push	{r7, lr}
 80046a6:	b084      	sub	sp, #16
 80046a8:	af00      	add	r7, sp, #0
 80046aa:	6078      	str	r0, [r7, #4]
 80046ac:	6039      	str	r1, [r7, #0]
 80046ae:	b672      	cpsid	i
 80046b0:	2300      	movs	r3, #0
 80046b2:	73fb      	strb	r3, [r7, #15]
 80046b4:	e021      	b.n	80046fa <bufEnDat+0x56>
 80046b6:	7bfb      	ldrb	r3, [r7, #15]
 80046b8:	683a      	ldr	r2, [r7, #0]
 80046ba:	441a      	add	r2, r3
 80046bc:	687b      	ldr	r3, [r7, #4]
 80046be:	68db      	ldr	r3, [r3, #12]
 80046c0:	6879      	ldr	r1, [r7, #4]
 80046c2:	88c9      	ldrh	r1, [r1, #6]
 80046c4:	440b      	add	r3, r1
 80046c6:	7812      	ldrb	r2, [r2, #0]
 80046c8:	701a      	strb	r2, [r3, #0]
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	88db      	ldrh	r3, [r3, #6]
 80046ce:	3301      	adds	r3, #1
 80046d0:	b29b      	uxth	r3, r3
 80046d2:	b21a      	sxth	r2, r3
 80046d4:	687b      	ldr	r3, [r7, #4]
 80046d6:	881b      	ldrh	r3, [r3, #0]
 80046d8:	3b01      	subs	r3, #1
 80046da:	b29b      	uxth	r3, r3
 80046dc:	b21b      	sxth	r3, r3
 80046de:	4013      	ands	r3, r2
 80046e0:	b21b      	sxth	r3, r3
 80046e2:	b29a      	uxth	r2, r3
 80046e4:	687b      	ldr	r3, [r7, #4]
 80046e6:	80da      	strh	r2, [r3, #6]
 80046e8:	687b      	ldr	r3, [r7, #4]
 80046ea:	885b      	ldrh	r3, [r3, #2]
 80046ec:	3301      	adds	r3, #1
 80046ee:	b29a      	uxth	r2, r3
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	805a      	strh	r2, [r3, #2]
 80046f4:	7bfb      	ldrb	r3, [r7, #15]
 80046f6:	3301      	adds	r3, #1
 80046f8:	73fb      	strb	r3, [r7, #15]
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	791b      	ldrb	r3, [r3, #4]
 80046fe:	7bfa      	ldrb	r2, [r7, #15]
 8004700:	429a      	cmp	r2, r3
 8004702:	d3d8      	bcc.n	80046b6 <bufEnDat+0x12>
 8004704:	6878      	ldr	r0, [r7, #4]
 8004706:	f7ff ff8e 	bl	8004626 <bufIsFull>
 800470a:	4603      	mov	r3, r0
 800470c:	2b00      	cmp	r3, #0
 800470e:	d011      	beq.n	8004734 <bufEnDat+0x90>
 8004710:	687b      	ldr	r3, [r7, #4]
 8004712:	891a      	ldrh	r2, [r3, #8]
 8004714:	687b      	ldr	r3, [r7, #4]
 8004716:	791b      	ldrb	r3, [r3, #4]
 8004718:	b29b      	uxth	r3, r3
 800471a:	4413      	add	r3, r2
 800471c:	b29b      	uxth	r3, r3
 800471e:	b21a      	sxth	r2, r3
 8004720:	687b      	ldr	r3, [r7, #4]
 8004722:	881b      	ldrh	r3, [r3, #0]
 8004724:	3b01      	subs	r3, #1
 8004726:	b29b      	uxth	r3, r3
 8004728:	b21b      	sxth	r3, r3
 800472a:	4013      	ands	r3, r2
 800472c:	b21b      	sxth	r3, r3
 800472e:	b29a      	uxth	r2, r3
 8004730:	687b      	ldr	r3, [r7, #4]
 8004732:	811a      	strh	r2, [r3, #8]
 8004734:	b662      	cpsie	i
 8004736:	2300      	movs	r3, #0
 8004738:	4618      	mov	r0, r3
 800473a:	3710      	adds	r7, #16
 800473c:	46bd      	mov	sp, r7
 800473e:	bd80      	pop	{r7, pc}

08004740 <bufDeDat>:
 8004740:	b580      	push	{r7, lr}
 8004742:	b084      	sub	sp, #16
 8004744:	af00      	add	r7, sp, #0
 8004746:	6078      	str	r0, [r7, #4]
 8004748:	6039      	str	r1, [r7, #0]
 800474a:	b672      	cpsid	i
 800474c:	6878      	ldr	r0, [r7, #4]
 800474e:	f7ff ff7d 	bl	800464c <bufIsEmpty>
 8004752:	4603      	mov	r3, r0
 8004754:	2b00      	cmp	r3, #0
 8004756:	d005      	beq.n	8004764 <bufDeDat+0x24>
 8004758:	687b      	ldr	r3, [r7, #4]
 800475a:	2200      	movs	r2, #0
 800475c:	805a      	strh	r2, [r3, #2]
 800475e:	b662      	cpsie	i
 8004760:	2302      	movs	r3, #2
 8004762:	e02b      	b.n	80047bc <bufDeDat+0x7c>
 8004764:	2300      	movs	r3, #0
 8004766:	73fb      	strb	r3, [r7, #15]
 8004768:	e021      	b.n	80047ae <bufDeDat+0x6e>
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	68db      	ldr	r3, [r3, #12]
 800476e:	687a      	ldr	r2, [r7, #4]
 8004770:	8912      	ldrh	r2, [r2, #8]
 8004772:	441a      	add	r2, r3
 8004774:	7bfb      	ldrb	r3, [r7, #15]
 8004776:	6839      	ldr	r1, [r7, #0]
 8004778:	440b      	add	r3, r1
 800477a:	7812      	ldrb	r2, [r2, #0]
 800477c:	701a      	strb	r2, [r3, #0]
 800477e:	687b      	ldr	r3, [r7, #4]
 8004780:	891b      	ldrh	r3, [r3, #8]
 8004782:	3301      	adds	r3, #1
 8004784:	b29b      	uxth	r3, r3
 8004786:	b21a      	sxth	r2, r3
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	881b      	ldrh	r3, [r3, #0]
 800478c:	3b01      	subs	r3, #1
 800478e:	b29b      	uxth	r3, r3
 8004790:	b21b      	sxth	r3, r3
 8004792:	4013      	ands	r3, r2
 8004794:	b21b      	sxth	r3, r3
 8004796:	b29a      	uxth	r2, r3
 8004798:	687b      	ldr	r3, [r7, #4]
 800479a:	811a      	strh	r2, [r3, #8]
 800479c:	687b      	ldr	r3, [r7, #4]
 800479e:	885b      	ldrh	r3, [r3, #2]
 80047a0:	3b01      	subs	r3, #1
 80047a2:	b29a      	uxth	r2, r3
 80047a4:	687b      	ldr	r3, [r7, #4]
 80047a6:	805a      	strh	r2, [r3, #2]
 80047a8:	7bfb      	ldrb	r3, [r7, #15]
 80047aa:	3301      	adds	r3, #1
 80047ac:	73fb      	strb	r3, [r7, #15]
 80047ae:	687b      	ldr	r3, [r7, #4]
 80047b0:	791b      	ldrb	r3, [r3, #4]
 80047b2:	7bfa      	ldrb	r2, [r7, #15]
 80047b4:	429a      	cmp	r2, r3
 80047b6:	d3d8      	bcc.n	800476a <bufDeDat+0x2a>
 80047b8:	b662      	cpsie	i
 80047ba:	2300      	movs	r3, #0
 80047bc:	4618      	mov	r0, r3
 80047be:	3710      	adds	r7, #16
 80047c0:	46bd      	mov	sp, r7
 80047c2:	bd80      	pop	{r7, pc}

080047c4 <memsetl>:
 80047c4:	b480      	push	{r7}
 80047c6:	b083      	sub	sp, #12
 80047c8:	af00      	add	r7, sp, #0
 80047ca:	6078      	str	r0, [r7, #4]
 80047cc:	460b      	mov	r3, r1
 80047ce:	70fb      	strb	r3, [r7, #3]
 80047d0:	4613      	mov	r3, r2
 80047d2:	803b      	strh	r3, [r7, #0]
 80047d4:	e004      	b.n	80047e0 <memsetl+0x1c>
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	1c5a      	adds	r2, r3, #1
 80047da:	607a      	str	r2, [r7, #4]
 80047dc:	78fa      	ldrb	r2, [r7, #3]
 80047de:	701a      	strb	r2, [r3, #0]
 80047e0:	883b      	ldrh	r3, [r7, #0]
 80047e2:	1e5a      	subs	r2, r3, #1
 80047e4:	803a      	strh	r2, [r7, #0]
 80047e6:	2b00      	cmp	r3, #0
 80047e8:	d1f5      	bne.n	80047d6 <memsetl+0x12>
 80047ea:	bf00      	nop
 80047ec:	370c      	adds	r7, #12
 80047ee:	46bd      	mov	sp, r7
 80047f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047f4:	4770      	bx	lr

080047f6 <ucg_clip_is_x_visible>:
 80047f6:	b480      	push	{r7}
 80047f8:	b085      	sub	sp, #20
 80047fa:	af00      	add	r7, sp, #0
 80047fc:	6078      	str	r0, [r7, #4]
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	8c9b      	ldrh	r3, [r3, #36]	@ 0x24
 8004802:	81fb      	strh	r3, [r7, #14]
 8004804:	89fa      	ldrh	r2, [r7, #14]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 800480c:	b29b      	uxth	r3, r3
 800480e:	1ad3      	subs	r3, r2, r3
 8004810:	b29b      	uxth	r3, r3
 8004812:	81fb      	strh	r3, [r7, #14]
 8004814:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004818:	2b00      	cmp	r3, #0
 800481a:	da01      	bge.n	8004820 <ucg_clip_is_x_visible+0x2a>
 800481c:	2300      	movs	r3, #0
 800481e:	e009      	b.n	8004834 <ucg_clip_is_x_visible+0x3e>
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 8004826:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 800482a:	429a      	cmp	r2, r3
 800482c:	db01      	blt.n	8004832 <ucg_clip_is_x_visible+0x3c>
 800482e:	2300      	movs	r3, #0
 8004830:	e000      	b.n	8004834 <ucg_clip_is_x_visible+0x3e>
 8004832:	2301      	movs	r3, #1
 8004834:	4618      	mov	r0, r3
 8004836:	3714      	adds	r7, #20
 8004838:	46bd      	mov	sp, r7
 800483a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800483e:	4770      	bx	lr

08004840 <ucg_clip_is_y_visible>:
 8004840:	b480      	push	{r7}
 8004842:	b085      	sub	sp, #20
 8004844:	af00      	add	r7, sp, #0
 8004846:	6078      	str	r0, [r7, #4]
 8004848:	687b      	ldr	r3, [r7, #4]
 800484a:	8cdb      	ldrh	r3, [r3, #38]	@ 0x26
 800484c:	81fb      	strh	r3, [r7, #14]
 800484e:	89fa      	ldrh	r2, [r7, #14]
 8004850:	687b      	ldr	r3, [r7, #4]
 8004852:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 8004856:	b29b      	uxth	r3, r3
 8004858:	1ad3      	subs	r3, r2, r3
 800485a:	b29b      	uxth	r3, r3
 800485c:	81fb      	strh	r3, [r7, #14]
 800485e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004862:	2b00      	cmp	r3, #0
 8004864:	da01      	bge.n	800486a <ucg_clip_is_y_visible+0x2a>
 8004866:	2300      	movs	r3, #0
 8004868:	e009      	b.n	800487e <ucg_clip_is_y_visible+0x3e>
 800486a:	687b      	ldr	r3, [r7, #4]
 800486c:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 8004870:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004874:	429a      	cmp	r2, r3
 8004876:	db01      	blt.n	800487c <ucg_clip_is_y_visible+0x3c>
 8004878:	2300      	movs	r3, #0
 800487a:	e000      	b.n	800487e <ucg_clip_is_y_visible+0x3e>
 800487c:	2301      	movs	r3, #1
 800487e:	4618      	mov	r0, r3
 8004880:	3714      	adds	r7, #20
 8004882:	46bd      	mov	sp, r7
 8004884:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004888:	4770      	bx	lr

0800488a <ucg_clip_intersection>:
 800488a:	b480      	push	{r7}
 800488c:	b087      	sub	sp, #28
 800488e:	af00      	add	r7, sp, #0
 8004890:	60f8      	str	r0, [r7, #12]
 8004892:	60b9      	str	r1, [r7, #8]
 8004894:	4611      	mov	r1, r2
 8004896:	461a      	mov	r2, r3
 8004898:	460b      	mov	r3, r1
 800489a:	80fb      	strh	r3, [r7, #6]
 800489c:	4613      	mov	r3, r2
 800489e:	80bb      	strh	r3, [r7, #4]
 80048a0:	68fb      	ldr	r3, [r7, #12]
 80048a2:	881b      	ldrh	r3, [r3, #0]
 80048a4:	82fb      	strh	r3, [r7, #22]
 80048a6:	68bb      	ldr	r3, [r7, #8]
 80048a8:	881b      	ldrh	r3, [r3, #0]
 80048aa:	82bb      	strh	r3, [r7, #20]
 80048ac:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 80048b0:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80048b4:	429a      	cmp	r2, r3
 80048b6:	db01      	blt.n	80048bc <ucg_clip_intersection+0x32>
 80048b8:	2300      	movs	r3, #0
 80048ba:	e01a      	b.n	80048f2 <ucg_clip_intersection+0x68>
 80048bc:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80048c0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80048c4:	429a      	cmp	r2, r3
 80048c6:	dc01      	bgt.n	80048cc <ucg_clip_intersection+0x42>
 80048c8:	2300      	movs	r3, #0
 80048ca:	e012      	b.n	80048f2 <ucg_clip_intersection+0x68>
 80048cc:	f9b7 2016 	ldrsh.w	r2, [r7, #22]
 80048d0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80048d4:	429a      	cmp	r2, r3
 80048d6:	da02      	bge.n	80048de <ucg_clip_intersection+0x54>
 80048d8:	68fb      	ldr	r3, [r7, #12]
 80048da:	88fa      	ldrh	r2, [r7, #6]
 80048dc:	801a      	strh	r2, [r3, #0]
 80048de:	f9b7 2014 	ldrsh.w	r2, [r7, #20]
 80048e2:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80048e6:	429a      	cmp	r2, r3
 80048e8:	dd02      	ble.n	80048f0 <ucg_clip_intersection+0x66>
 80048ea:	68bb      	ldr	r3, [r7, #8]
 80048ec:	88ba      	ldrh	r2, [r7, #4]
 80048ee:	801a      	strh	r2, [r3, #0]
 80048f0:	2301      	movs	r3, #1
 80048f2:	4618      	mov	r0, r3
 80048f4:	371c      	adds	r7, #28
 80048f6:	46bd      	mov	sp, r7
 80048f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048fc:	4770      	bx	lr

080048fe <ucg_clip_is_pixel_visible>:
 80048fe:	b580      	push	{r7, lr}
 8004900:	b082      	sub	sp, #8
 8004902:	af00      	add	r7, sp, #0
 8004904:	6078      	str	r0, [r7, #4]
 8004906:	6878      	ldr	r0, [r7, #4]
 8004908:	f7ff ff75 	bl	80047f6 <ucg_clip_is_x_visible>
 800490c:	4603      	mov	r3, r0
 800490e:	2b00      	cmp	r3, #0
 8004910:	d101      	bne.n	8004916 <ucg_clip_is_pixel_visible+0x18>
 8004912:	2300      	movs	r3, #0
 8004914:	e008      	b.n	8004928 <ucg_clip_is_pixel_visible+0x2a>
 8004916:	6878      	ldr	r0, [r7, #4]
 8004918:	f7ff ff92 	bl	8004840 <ucg_clip_is_y_visible>
 800491c:	4603      	mov	r3, r0
 800491e:	2b00      	cmp	r3, #0
 8004920:	d101      	bne.n	8004926 <ucg_clip_is_pixel_visible+0x28>
 8004922:	2300      	movs	r3, #0
 8004924:	e000      	b.n	8004928 <ucg_clip_is_pixel_visible+0x2a>
 8004926:	2301      	movs	r3, #1
 8004928:	4618      	mov	r0, r3
 800492a:	3708      	adds	r7, #8
 800492c:	46bd      	mov	sp, r7
 800492e:	bd80      	pop	{r7, pc}

08004930 <ucg_clip_l90fx>:
 8004930:	b590      	push	{r4, r7, lr}
 8004932:	b085      	sub	sp, #20
 8004934:	af00      	add	r7, sp, #0
 8004936:	6078      	str	r0, [r7, #4]
 8004938:	687b      	ldr	r3, [r7, #4]
 800493a:	2200      	movs	r2, #0
 800493c:	861a      	strh	r2, [r3, #48]	@ 0x30
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	f9b3 302e 	ldrsh.w	r3, [r3, #46]	@ 0x2e
 8004944:	2b03      	cmp	r3, #3
 8004946:	f200 816d 	bhi.w	8004c24 <ucg_clip_l90fx+0x2f4>
 800494a:	a201      	add	r2, pc, #4	@ (adr r2, 8004950 <ucg_clip_l90fx+0x20>)
 800494c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004950:	08004961 	.word	0x08004961
 8004954:	08004a07 	.word	0x08004a07
 8004958:	08004aad 	.word	0x08004aad
 800495c:	08004b69 	.word	0x08004b69
 8004960:	6878      	ldr	r0, [r7, #4]
 8004962:	f7ff ff6d 	bl	8004840 <ucg_clip_is_y_visible>
 8004966:	4603      	mov	r3, r0
 8004968:	2b00      	cmp	r3, #0
 800496a:	d101      	bne.n	8004970 <ucg_clip_l90fx+0x40>
 800496c:	2300      	movs	r3, #0
 800496e:	e15a      	b.n	8004c26 <ucg_clip_l90fx+0x2f6>
 8004970:	687b      	ldr	r3, [r7, #4]
 8004972:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8004976:	81fb      	strh	r3, [r7, #14]
 8004978:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800497c:	81bb      	strh	r3, [r7, #12]
 800497e:	687b      	ldr	r3, [r7, #4]
 8004980:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8004984:	b29a      	uxth	r2, r3
 8004986:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 800498a:	b29b      	uxth	r3, r3
 800498c:	4413      	add	r3, r2
 800498e:	b29b      	uxth	r3, r3
 8004990:	b21b      	sxth	r3, r3
 8004992:	81bb      	strh	r3, [r7, #12]
 8004994:	687b      	ldr	r3, [r7, #4]
 8004996:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	@ 0x70
 800499a:	687b      	ldr	r3, [r7, #4]
 800499c:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 80049a0:	b29a      	uxth	r2, r3
 80049a2:	687b      	ldr	r3, [r7, #4]
 80049a4:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 80049a8:	b29b      	uxth	r3, r3
 80049aa:	4413      	add	r3, r2
 80049ac:	b29b      	uxth	r3, r3
 80049ae:	b21b      	sxth	r3, r3
 80049b0:	f107 010c 	add.w	r1, r7, #12
 80049b4:	f107 000e 	add.w	r0, r7, #14
 80049b8:	4622      	mov	r2, r4
 80049ba:	f7ff ff66 	bl	800488a <ucg_clip_intersection>
 80049be:	4603      	mov	r3, r0
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d101      	bne.n	80049c8 <ucg_clip_l90fx+0x98>
 80049c4:	2300      	movs	r3, #0
 80049c6:	e12e      	b.n	8004c26 <ucg_clip_l90fx+0x2f6>
 80049c8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80049cc:	b29a      	uxth	r2, r3
 80049ce:	687b      	ldr	r3, [r7, #4]
 80049d0:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 80049d4:	b29b      	uxth	r3, r3
 80049d6:	1ad3      	subs	r3, r2, r3
 80049d8:	b29b      	uxth	r3, r3
 80049da:	b21a      	sxth	r2, r3
 80049dc:	687b      	ldr	r3, [r7, #4]
 80049de:	861a      	strh	r2, [r3, #48]	@ 0x30
 80049e0:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 80049e4:	687b      	ldr	r3, [r7, #4]
 80049e6:	849a      	strh	r2, [r3, #36]	@ 0x24
 80049e8:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 80049ec:	b29a      	uxth	r2, r3
 80049ee:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 80049f2:	b29b      	uxth	r3, r3
 80049f4:	1ad3      	subs	r3, r2, r3
 80049f6:	b29b      	uxth	r3, r3
 80049f8:	b21b      	sxth	r3, r3
 80049fa:	81bb      	strh	r3, [r7, #12]
 80049fc:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004a00:	687b      	ldr	r3, [r7, #4]
 8004a02:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004a04:	e10e      	b.n	8004c24 <ucg_clip_l90fx+0x2f4>
 8004a06:	6878      	ldr	r0, [r7, #4]
 8004a08:	f7ff fef5 	bl	80047f6 <ucg_clip_is_x_visible>
 8004a0c:	4603      	mov	r3, r0
 8004a0e:	2b00      	cmp	r3, #0
 8004a10:	d101      	bne.n	8004a16 <ucg_clip_l90fx+0xe6>
 8004a12:	2300      	movs	r3, #0
 8004a14:	e107      	b.n	8004c26 <ucg_clip_l90fx+0x2f6>
 8004a16:	687b      	ldr	r3, [r7, #4]
 8004a18:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8004a1c:	81fb      	strh	r3, [r7, #14]
 8004a1e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004a22:	81bb      	strh	r3, [r7, #12]
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8004a2a:	b29a      	uxth	r2, r3
 8004a2c:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004a30:	b29b      	uxth	r3, r3
 8004a32:	4413      	add	r3, r2
 8004a34:	b29b      	uxth	r3, r3
 8004a36:	b21b      	sxth	r3, r3
 8004a38:	81bb      	strh	r3, [r7, #12]
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	@ 0x72
 8004a40:	687b      	ldr	r3, [r7, #4]
 8004a42:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 8004a46:	b29a      	uxth	r2, r3
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 8004a4e:	b29b      	uxth	r3, r3
 8004a50:	4413      	add	r3, r2
 8004a52:	b29b      	uxth	r3, r3
 8004a54:	b21b      	sxth	r3, r3
 8004a56:	f107 010c 	add.w	r1, r7, #12
 8004a5a:	f107 000e 	add.w	r0, r7, #14
 8004a5e:	4622      	mov	r2, r4
 8004a60:	f7ff ff13 	bl	800488a <ucg_clip_intersection>
 8004a64:	4603      	mov	r3, r0
 8004a66:	2b00      	cmp	r3, #0
 8004a68:	d101      	bne.n	8004a6e <ucg_clip_l90fx+0x13e>
 8004a6a:	2300      	movs	r3, #0
 8004a6c:	e0db      	b.n	8004c26 <ucg_clip_l90fx+0x2f6>
 8004a6e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004a72:	b29a      	uxth	r2, r3
 8004a74:	687b      	ldr	r3, [r7, #4]
 8004a76:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8004a7a:	b29b      	uxth	r3, r3
 8004a7c:	1ad3      	subs	r3, r2, r3
 8004a7e:	b29b      	uxth	r3, r3
 8004a80:	b21a      	sxth	r2, r3
 8004a82:	687b      	ldr	r3, [r7, #4]
 8004a84:	861a      	strh	r2, [r3, #48]	@ 0x30
 8004a86:	f9b7 200e 	ldrsh.w	r2, [r7, #14]
 8004a8a:	687b      	ldr	r3, [r7, #4]
 8004a8c:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004a8e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004a92:	b29a      	uxth	r2, r3
 8004a94:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004a98:	b29b      	uxth	r3, r3
 8004a9a:	1ad3      	subs	r3, r2, r3
 8004a9c:	b29b      	uxth	r3, r3
 8004a9e:	b21b      	sxth	r3, r3
 8004aa0:	81bb      	strh	r3, [r7, #12]
 8004aa2:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004aa6:	687b      	ldr	r3, [r7, #4]
 8004aa8:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004aaa:	e0bb      	b.n	8004c24 <ucg_clip_l90fx+0x2f4>
 8004aac:	6878      	ldr	r0, [r7, #4]
 8004aae:	f7ff fec7 	bl	8004840 <ucg_clip_is_y_visible>
 8004ab2:	4603      	mov	r3, r0
 8004ab4:	2b00      	cmp	r3, #0
 8004ab6:	d101      	bne.n	8004abc <ucg_clip_l90fx+0x18c>
 8004ab8:	2300      	movs	r3, #0
 8004aba:	e0b4      	b.n	8004c26 <ucg_clip_l90fx+0x2f6>
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8004ac2:	81bb      	strh	r3, [r7, #12]
 8004ac4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004ac8:	b29b      	uxth	r3, r3
 8004aca:	3301      	adds	r3, #1
 8004acc:	b29b      	uxth	r3, r3
 8004ace:	b21b      	sxth	r3, r3
 8004ad0:	81bb      	strh	r3, [r7, #12]
 8004ad2:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004ad6:	81fb      	strh	r3, [r7, #14]
 8004ad8:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004adc:	b29a      	uxth	r2, r3
 8004ade:	687b      	ldr	r3, [r7, #4]
 8004ae0:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8004ae4:	b29b      	uxth	r3, r3
 8004ae6:	1ad3      	subs	r3, r2, r3
 8004ae8:	b29b      	uxth	r3, r3
 8004aea:	b21b      	sxth	r3, r3
 8004aec:	81fb      	strh	r3, [r7, #14]
 8004aee:	687b      	ldr	r3, [r7, #4]
 8004af0:	f9b3 4070 	ldrsh.w	r4, [r3, #112]	@ 0x70
 8004af4:	687b      	ldr	r3, [r7, #4]
 8004af6:	f9b3 3070 	ldrsh.w	r3, [r3, #112]	@ 0x70
 8004afa:	b29a      	uxth	r2, r3
 8004afc:	687b      	ldr	r3, [r7, #4]
 8004afe:	f9b3 3074 	ldrsh.w	r3, [r3, #116]	@ 0x74
 8004b02:	b29b      	uxth	r3, r3
 8004b04:	4413      	add	r3, r2
 8004b06:	b29b      	uxth	r3, r3
 8004b08:	b21b      	sxth	r3, r3
 8004b0a:	f107 010c 	add.w	r1, r7, #12
 8004b0e:	f107 000e 	add.w	r0, r7, #14
 8004b12:	4622      	mov	r2, r4
 8004b14:	f7ff feb9 	bl	800488a <ucg_clip_intersection>
 8004b18:	4603      	mov	r3, r0
 8004b1a:	2b00      	cmp	r3, #0
 8004b1c:	d101      	bne.n	8004b22 <ucg_clip_l90fx+0x1f2>
 8004b1e:	2300      	movs	r3, #0
 8004b20:	e081      	b.n	8004c26 <ucg_clip_l90fx+0x2f6>
 8004b22:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004b26:	b29a      	uxth	r2, r3
 8004b28:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004b2c:	b29b      	uxth	r3, r3
 8004b2e:	1ad3      	subs	r3, r2, r3
 8004b30:	b29b      	uxth	r3, r3
 8004b32:	b21a      	sxth	r2, r3
 8004b34:	687b      	ldr	r3, [r7, #4]
 8004b36:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004b38:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004b3c:	b29b      	uxth	r3, r3
 8004b3e:	3b01      	subs	r3, #1
 8004b40:	b29b      	uxth	r3, r3
 8004b42:	b21b      	sxth	r3, r3
 8004b44:	81bb      	strh	r3, [r7, #12]
 8004b46:	687b      	ldr	r3, [r7, #4]
 8004b48:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 8004b4c:	b29a      	uxth	r2, r3
 8004b4e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004b52:	b29b      	uxth	r3, r3
 8004b54:	1ad3      	subs	r3, r2, r3
 8004b56:	b29b      	uxth	r3, r3
 8004b58:	b21a      	sxth	r2, r3
 8004b5a:	687b      	ldr	r3, [r7, #4]
 8004b5c:	861a      	strh	r2, [r3, #48]	@ 0x30
 8004b5e:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	849a      	strh	r2, [r3, #36]	@ 0x24
 8004b66:	e05d      	b.n	8004c24 <ucg_clip_l90fx+0x2f4>
 8004b68:	6878      	ldr	r0, [r7, #4]
 8004b6a:	f7ff fe44 	bl	80047f6 <ucg_clip_is_x_visible>
 8004b6e:	4603      	mov	r3, r0
 8004b70:	2b00      	cmp	r3, #0
 8004b72:	d101      	bne.n	8004b78 <ucg_clip_l90fx+0x248>
 8004b74:	2300      	movs	r3, #0
 8004b76:	e056      	b.n	8004c26 <ucg_clip_l90fx+0x2f6>
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8004b7e:	81bb      	strh	r3, [r7, #12]
 8004b80:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004b84:	b29b      	uxth	r3, r3
 8004b86:	3301      	adds	r3, #1
 8004b88:	b29b      	uxth	r3, r3
 8004b8a:	b21b      	sxth	r3, r3
 8004b8c:	81bb      	strh	r3, [r7, #12]
 8004b8e:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004b92:	81fb      	strh	r3, [r7, #14]
 8004b94:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004b98:	b29a      	uxth	r2, r3
 8004b9a:	687b      	ldr	r3, [r7, #4]
 8004b9c:	f9b3 302c 	ldrsh.w	r3, [r3, #44]	@ 0x2c
 8004ba0:	b29b      	uxth	r3, r3
 8004ba2:	1ad3      	subs	r3, r2, r3
 8004ba4:	b29b      	uxth	r3, r3
 8004ba6:	b21b      	sxth	r3, r3
 8004ba8:	81fb      	strh	r3, [r7, #14]
 8004baa:	687b      	ldr	r3, [r7, #4]
 8004bac:	f9b3 4072 	ldrsh.w	r4, [r3, #114]	@ 0x72
 8004bb0:	687b      	ldr	r3, [r7, #4]
 8004bb2:	f9b3 3072 	ldrsh.w	r3, [r3, #114]	@ 0x72
 8004bb6:	b29a      	uxth	r2, r3
 8004bb8:	687b      	ldr	r3, [r7, #4]
 8004bba:	f9b3 3076 	ldrsh.w	r3, [r3, #118]	@ 0x76
 8004bbe:	b29b      	uxth	r3, r3
 8004bc0:	4413      	add	r3, r2
 8004bc2:	b29b      	uxth	r3, r3
 8004bc4:	b21b      	sxth	r3, r3
 8004bc6:	f107 010c 	add.w	r1, r7, #12
 8004bca:	f107 000e 	add.w	r0, r7, #14
 8004bce:	4622      	mov	r2, r4
 8004bd0:	f7ff fe5b 	bl	800488a <ucg_clip_intersection>
 8004bd4:	4603      	mov	r3, r0
 8004bd6:	2b00      	cmp	r3, #0
 8004bd8:	d101      	bne.n	8004bde <ucg_clip_l90fx+0x2ae>
 8004bda:	2300      	movs	r3, #0
 8004bdc:	e023      	b.n	8004c26 <ucg_clip_l90fx+0x2f6>
 8004bde:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004be2:	b29a      	uxth	r2, r3
 8004be4:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004be8:	b29b      	uxth	r3, r3
 8004bea:	1ad3      	subs	r3, r2, r3
 8004bec:	b29b      	uxth	r3, r3
 8004bee:	b21a      	sxth	r2, r3
 8004bf0:	687b      	ldr	r3, [r7, #4]
 8004bf2:	859a      	strh	r2, [r3, #44]	@ 0x2c
 8004bf4:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004bf8:	b29b      	uxth	r3, r3
 8004bfa:	3b01      	subs	r3, #1
 8004bfc:	b29b      	uxth	r3, r3
 8004bfe:	b21b      	sxth	r3, r3
 8004c00:	81bb      	strh	r3, [r7, #12]
 8004c02:	687b      	ldr	r3, [r7, #4]
 8004c04:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 8004c08:	b29a      	uxth	r2, r3
 8004c0a:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 8004c0e:	b29b      	uxth	r3, r3
 8004c10:	1ad3      	subs	r3, r2, r3
 8004c12:	b29b      	uxth	r3, r3
 8004c14:	b21a      	sxth	r2, r3
 8004c16:	687b      	ldr	r3, [r7, #4]
 8004c18:	861a      	strh	r2, [r3, #48]	@ 0x30
 8004c1a:	f9b7 200c 	ldrsh.w	r2, [r7, #12]
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	84da      	strh	r2, [r3, #38]	@ 0x26
 8004c22:	bf00      	nop
 8004c24:	2301      	movs	r3, #1
 8004c26:	4618      	mov	r0, r3
 8004c28:	3714      	adds	r7, #20
 8004c2a:	46bd      	mov	sp, r7
 8004c2c:	bd90      	pop	{r4, r7, pc}
 8004c2e:	bf00      	nop

08004c30 <ucg_clip_l90se>:
 8004c30:	b580      	push	{r7, lr}
 8004c32:	b084      	sub	sp, #16
 8004c34:	af00      	add	r7, sp, #0
 8004c36:	6078      	str	r0, [r7, #4]
 8004c38:	6878      	ldr	r0, [r7, #4]
 8004c3a:	f7ff fe79 	bl	8004930 <ucg_clip_l90fx>
 8004c3e:	4603      	mov	r3, r0
 8004c40:	2b00      	cmp	r3, #0
 8004c42:	d101      	bne.n	8004c48 <ucg_clip_l90se+0x18>
 8004c44:	2300      	movs	r3, #0
 8004c46:	e019      	b.n	8004c7c <ucg_clip_l90se+0x4c>
 8004c48:	2300      	movs	r3, #0
 8004c4a:	73fb      	strb	r3, [r7, #15]
 8004c4c:	e012      	b.n	8004c74 <ucg_clip_l90se+0x44>
 8004c4e:	687b      	ldr	r3, [r7, #4]
 8004c50:	f103 0146 	add.w	r1, r3, #70	@ 0x46
 8004c54:	7bfa      	ldrb	r2, [r7, #15]
 8004c56:	4613      	mov	r3, r2
 8004c58:	00db      	lsls	r3, r3, #3
 8004c5a:	1a9b      	subs	r3, r3, r2
 8004c5c:	005b      	lsls	r3, r3, #1
 8004c5e:	18ca      	adds	r2, r1, r3
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	f9b3 3030 	ldrsh.w	r3, [r3, #48]	@ 0x30
 8004c66:	4619      	mov	r1, r3
 8004c68:	4610      	mov	r0, r2
 8004c6a:	f7fe fa70 	bl	800314e <ucg_ccs_seek>
 8004c6e:	7bfb      	ldrb	r3, [r7, #15]
 8004c70:	3301      	adds	r3, #1
 8004c72:	73fb      	strb	r3, [r7, #15]
 8004c74:	7bfb      	ldrb	r3, [r7, #15]
 8004c76:	2b02      	cmp	r3, #2
 8004c78:	d9e9      	bls.n	8004c4e <ucg_clip_l90se+0x1e>
 8004c7a:	2301      	movs	r3, #1
 8004c7c:	4618      	mov	r0, r3
 8004c7e:	3710      	adds	r7, #16
 8004c80:	46bd      	mov	sp, r7
 8004c82:	bd80      	pop	{r7, pc}

08004c84 <ucg_com_PowerDown>:
 8004c84:	b590      	push	{r4, r7, lr}
 8004c86:	b083      	sub	sp, #12
 8004c88:	af00      	add	r7, sp, #0
 8004c8a:	6078      	str	r0, [r7, #4]
 8004c8c:	687b      	ldr	r3, [r7, #4]
 8004c8e:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 8004c92:	f003 0308 	and.w	r3, r3, #8
 8004c96:	2b00      	cmp	r3, #0
 8004c98:	d006      	beq.n	8004ca8 <ucg_com_PowerDown+0x24>
 8004c9a:	687b      	ldr	r3, [r7, #4]
 8004c9c:	69dc      	ldr	r4, [r3, #28]
 8004c9e:	2300      	movs	r3, #0
 8004ca0:	2200      	movs	r2, #0
 8004ca2:	210b      	movs	r1, #11
 8004ca4:	6878      	ldr	r0, [r7, #4]
 8004ca6:	47a0      	blx	r4
 8004ca8:	687b      	ldr	r3, [r7, #4]
 8004caa:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 8004cae:	f023 0308 	bic.w	r3, r3, #8
 8004cb2:	b2da      	uxtb	r2, r3
 8004cb4:	687b      	ldr	r3, [r7, #4]
 8004cb6:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8004cba:	bf00      	nop
 8004cbc:	370c      	adds	r7, #12
 8004cbe:	46bd      	mov	sp, r7
 8004cc0:	bd90      	pop	{r4, r7, pc}

08004cc2 <ucg_com_PowerUp>:
 8004cc2:	b590      	push	{r4, r7, lr}
 8004cc4:	b085      	sub	sp, #20
 8004cc6:	af00      	add	r7, sp, #0
 8004cc8:	6078      	str	r0, [r7, #4]
 8004cca:	460b      	mov	r3, r1
 8004ccc:	807b      	strh	r3, [r7, #2]
 8004cce:	4613      	mov	r3, r2
 8004cd0:	803b      	strh	r3, [r7, #0]
 8004cd2:	887b      	ldrh	r3, [r7, #2]
 8004cd4:	813b      	strh	r3, [r7, #8]
 8004cd6:	883b      	ldrh	r3, [r7, #0]
 8004cd8:	817b      	strh	r3, [r7, #10]
 8004cda:	6878      	ldr	r0, [r7, #4]
 8004cdc:	f7ff ffd2 	bl	8004c84 <ucg_com_PowerDown>
 8004ce0:	687b      	ldr	r3, [r7, #4]
 8004ce2:	2200      	movs	r2, #0
 8004ce4:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	69dc      	ldr	r4, [r3, #28]
 8004cec:	f107 0308 	add.w	r3, r7, #8
 8004cf0:	2200      	movs	r2, #0
 8004cf2:	210a      	movs	r1, #10
 8004cf4:	6878      	ldr	r0, [r7, #4]
 8004cf6:	47a0      	blx	r4
 8004cf8:	4603      	mov	r3, r0
 8004cfa:	81fb      	strh	r3, [r7, #14]
 8004cfc:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d00:	2b00      	cmp	r3, #0
 8004d02:	d008      	beq.n	8004d16 <ucg_com_PowerUp+0x54>
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 8004d0a:	f043 0308 	orr.w	r3, r3, #8
 8004d0e:	b2da      	uxtb	r2, r3
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8004d16:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8004d1a:	4618      	mov	r0, r3
 8004d1c:	3714      	adds	r7, #20
 8004d1e:	46bd      	mov	sp, r7
 8004d20:	bd90      	pop	{r4, r7, pc}

08004d22 <ucg_com_SetLineStatus>:
 8004d22:	b590      	push	{r4, r7, lr}
 8004d24:	b083      	sub	sp, #12
 8004d26:	af00      	add	r7, sp, #0
 8004d28:	6078      	str	r0, [r7, #4]
 8004d2a:	4608      	mov	r0, r1
 8004d2c:	4611      	mov	r1, r2
 8004d2e:	461a      	mov	r2, r3
 8004d30:	4603      	mov	r3, r0
 8004d32:	70fb      	strb	r3, [r7, #3]
 8004d34:	460b      	mov	r3, r1
 8004d36:	70bb      	strb	r3, [r7, #2]
 8004d38:	4613      	mov	r3, r2
 8004d3a:	707b      	strb	r3, [r7, #1]
 8004d3c:	78fb      	ldrb	r3, [r7, #3]
 8004d3e:	2b00      	cmp	r3, #0
 8004d40:	d131      	bne.n	8004da6 <ucg_com_SetLineStatus+0x84>
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8004d48:	78bb      	ldrb	r3, [r7, #2]
 8004d4a:	4013      	ands	r3, r2
 8004d4c:	b2db      	uxtb	r3, r3
 8004d4e:	2b00      	cmp	r3, #0
 8004d50:	d008      	beq.n	8004d64 <ucg_com_SetLineStatus+0x42>
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 8004d58:	78bb      	ldrb	r3, [r7, #2]
 8004d5a:	4013      	ands	r3, r2
 8004d5c:	b2db      	uxtb	r3, r3
 8004d5e:	78ba      	ldrb	r2, [r7, #2]
 8004d60:	429a      	cmp	r2, r3
 8004d62:	d14b      	bne.n	8004dfc <ucg_com_SetLineStatus+0xda>
 8004d64:	687b      	ldr	r3, [r7, #4]
 8004d66:	69dc      	ldr	r4, [r3, #28]
 8004d68:	787b      	ldrb	r3, [r7, #1]
 8004d6a:	b219      	sxth	r1, r3
 8004d6c:	78fb      	ldrb	r3, [r7, #3]
 8004d6e:	b29a      	uxth	r2, r3
 8004d70:	2300      	movs	r3, #0
 8004d72:	6878      	ldr	r0, [r7, #4]
 8004d74:	47a0      	blx	r4
 8004d76:	687b      	ldr	r3, [r7, #4]
 8004d78:	f893 30af 	ldrb.w	r3, [r3, #175]	@ 0xaf
 8004d7c:	b25a      	sxtb	r2, r3
 8004d7e:	f997 3002 	ldrsb.w	r3, [r7, #2]
 8004d82:	43db      	mvns	r3, r3
 8004d84:	b25b      	sxtb	r3, r3
 8004d86:	4013      	ands	r3, r2
 8004d88:	b25b      	sxtb	r3, r3
 8004d8a:	b2da      	uxtb	r2, r3
 8004d8c:	687b      	ldr	r3, [r7, #4]
 8004d8e:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8004d92:	687b      	ldr	r3, [r7, #4]
 8004d94:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8004d98:	78bb      	ldrb	r3, [r7, #2]
 8004d9a:	4313      	orrs	r3, r2
 8004d9c:	b2da      	uxtb	r2, r3
 8004d9e:	687b      	ldr	r3, [r7, #4]
 8004da0:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8004da4:	e02a      	b.n	8004dfc <ucg_com_SetLineStatus+0xda>
 8004da6:	687b      	ldr	r3, [r7, #4]
 8004da8:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8004dac:	78bb      	ldrb	r3, [r7, #2]
 8004dae:	4013      	ands	r3, r2
 8004db0:	b2db      	uxtb	r3, r3
 8004db2:	2b00      	cmp	r3, #0
 8004db4:	d007      	beq.n	8004dc6 <ucg_com_SetLineStatus+0xa4>
 8004db6:	687b      	ldr	r3, [r7, #4]
 8004db8:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 8004dbc:	78bb      	ldrb	r3, [r7, #2]
 8004dbe:	4013      	ands	r3, r2
 8004dc0:	b2db      	uxtb	r3, r3
 8004dc2:	2b00      	cmp	r3, #0
 8004dc4:	d11a      	bne.n	8004dfc <ucg_com_SetLineStatus+0xda>
 8004dc6:	687b      	ldr	r3, [r7, #4]
 8004dc8:	69dc      	ldr	r4, [r3, #28]
 8004dca:	787b      	ldrb	r3, [r7, #1]
 8004dcc:	b219      	sxth	r1, r3
 8004dce:	78fb      	ldrb	r3, [r7, #3]
 8004dd0:	b29a      	uxth	r2, r3
 8004dd2:	2300      	movs	r3, #0
 8004dd4:	6878      	ldr	r0, [r7, #4]
 8004dd6:	47a0      	blx	r4
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	f893 20af 	ldrb.w	r2, [r3, #175]	@ 0xaf
 8004dde:	78bb      	ldrb	r3, [r7, #2]
 8004de0:	4313      	orrs	r3, r2
 8004de2:	b2da      	uxtb	r2, r3
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	f883 20af 	strb.w	r2, [r3, #175]	@ 0xaf
 8004dea:	687b      	ldr	r3, [r7, #4]
 8004dec:	f893 20ae 	ldrb.w	r2, [r3, #174]	@ 0xae
 8004df0:	78bb      	ldrb	r3, [r7, #2]
 8004df2:	4313      	orrs	r3, r2
 8004df4:	b2da      	uxtb	r2, r3
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	f883 20ae 	strb.w	r2, [r3, #174]	@ 0xae
 8004dfc:	bf00      	nop
 8004dfe:	370c      	adds	r7, #12
 8004e00:	46bd      	mov	sp, r7
 8004e02:	bd90      	pop	{r4, r7, pc}

08004e04 <ucg_com_SetResetLineStatus>:
 8004e04:	b580      	push	{r7, lr}
 8004e06:	b082      	sub	sp, #8
 8004e08:	af00      	add	r7, sp, #0
 8004e0a:	6078      	str	r0, [r7, #4]
 8004e0c:	460b      	mov	r3, r1
 8004e0e:	70fb      	strb	r3, [r7, #3]
 8004e10:	78f9      	ldrb	r1, [r7, #3]
 8004e12:	230d      	movs	r3, #13
 8004e14:	2204      	movs	r2, #4
 8004e16:	6878      	ldr	r0, [r7, #4]
 8004e18:	f7ff ff83 	bl	8004d22 <ucg_com_SetLineStatus>
 8004e1c:	bf00      	nop
 8004e1e:	3708      	adds	r7, #8
 8004e20:	46bd      	mov	sp, r7
 8004e22:	bd80      	pop	{r7, pc}

08004e24 <ucg_com_SetCSLineStatus>:
 8004e24:	b580      	push	{r7, lr}
 8004e26:	b082      	sub	sp, #8
 8004e28:	af00      	add	r7, sp, #0
 8004e2a:	6078      	str	r0, [r7, #4]
 8004e2c:	460b      	mov	r3, r1
 8004e2e:	70fb      	strb	r3, [r7, #3]
 8004e30:	78f9      	ldrb	r1, [r7, #3]
 8004e32:	230e      	movs	r3, #14
 8004e34:	2202      	movs	r2, #2
 8004e36:	6878      	ldr	r0, [r7, #4]
 8004e38:	f7ff ff73 	bl	8004d22 <ucg_com_SetLineStatus>
 8004e3c:	bf00      	nop
 8004e3e:	3708      	adds	r7, #8
 8004e40:	46bd      	mov	sp, r7
 8004e42:	bd80      	pop	{r7, pc}

08004e44 <ucg_com_SetCDLineStatus>:
 8004e44:	b580      	push	{r7, lr}
 8004e46:	b082      	sub	sp, #8
 8004e48:	af00      	add	r7, sp, #0
 8004e4a:	6078      	str	r0, [r7, #4]
 8004e4c:	460b      	mov	r3, r1
 8004e4e:	70fb      	strb	r3, [r7, #3]
 8004e50:	78f9      	ldrb	r1, [r7, #3]
 8004e52:	230f      	movs	r3, #15
 8004e54:	2201      	movs	r2, #1
 8004e56:	6878      	ldr	r0, [r7, #4]
 8004e58:	f7ff ff63 	bl	8004d22 <ucg_com_SetLineStatus>
 8004e5c:	bf00      	nop
 8004e5e:	3708      	adds	r7, #8
 8004e60:	46bd      	mov	sp, r7
 8004e62:	bd80      	pop	{r7, pc}

08004e64 <ucg_com_DelayMicroseconds>:
 8004e64:	b590      	push	{r4, r7, lr}
 8004e66:	b083      	sub	sp, #12
 8004e68:	af00      	add	r7, sp, #0
 8004e6a:	6078      	str	r0, [r7, #4]
 8004e6c:	460b      	mov	r3, r1
 8004e6e:	807b      	strh	r3, [r7, #2]
 8004e70:	687b      	ldr	r3, [r7, #4]
 8004e72:	69dc      	ldr	r4, [r3, #28]
 8004e74:	887a      	ldrh	r2, [r7, #2]
 8004e76:	2300      	movs	r3, #0
 8004e78:	210c      	movs	r1, #12
 8004e7a:	6878      	ldr	r0, [r7, #4]
 8004e7c:	47a0      	blx	r4
 8004e7e:	bf00      	nop
 8004e80:	370c      	adds	r7, #12
 8004e82:	46bd      	mov	sp, r7
 8004e84:	bd90      	pop	{r4, r7, pc}

08004e86 <ucg_com_DelayMilliseconds>:
 8004e86:	b580      	push	{r7, lr}
 8004e88:	b082      	sub	sp, #8
 8004e8a:	af00      	add	r7, sp, #0
 8004e8c:	6078      	str	r0, [r7, #4]
 8004e8e:	460b      	mov	r3, r1
 8004e90:	807b      	strh	r3, [r7, #2]
 8004e92:	e007      	b.n	8004ea4 <ucg_com_DelayMilliseconds+0x1e>
 8004e94:	f44f 717a 	mov.w	r1, #1000	@ 0x3e8
 8004e98:	6878      	ldr	r0, [r7, #4]
 8004e9a:	f7ff ffe3 	bl	8004e64 <ucg_com_DelayMicroseconds>
 8004e9e:	887b      	ldrh	r3, [r7, #2]
 8004ea0:	3b01      	subs	r3, #1
 8004ea2:	807b      	strh	r3, [r7, #2]
 8004ea4:	887b      	ldrh	r3, [r7, #2]
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d1f4      	bne.n	8004e94 <ucg_com_DelayMilliseconds+0xe>
 8004eaa:	bf00      	nop
 8004eac:	3708      	adds	r7, #8
 8004eae:	46bd      	mov	sp, r7
 8004eb0:	bd80      	pop	{r7, pc}

08004eb2 <ucg_com_SendByte>:
 8004eb2:	b590      	push	{r4, r7, lr}
 8004eb4:	b083      	sub	sp, #12
 8004eb6:	af00      	add	r7, sp, #0
 8004eb8:	6078      	str	r0, [r7, #4]
 8004eba:	460b      	mov	r3, r1
 8004ebc:	70fb      	strb	r3, [r7, #3]
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	69dc      	ldr	r4, [r3, #28]
 8004ec2:	78fb      	ldrb	r3, [r7, #3]
 8004ec4:	b29a      	uxth	r2, r3
 8004ec6:	2300      	movs	r3, #0
 8004ec8:	2110      	movs	r1, #16
 8004eca:	6878      	ldr	r0, [r7, #4]
 8004ecc:	47a0      	blx	r4
 8004ece:	bf00      	nop
 8004ed0:	370c      	adds	r7, #12
 8004ed2:	46bd      	mov	sp, r7
 8004ed4:	bd90      	pop	{r4, r7, pc}

08004ed6 <ucg_com_SendStringP>:
 8004ed6:	b590      	push	{r4, r7, lr}
 8004ed8:	b087      	sub	sp, #28
 8004eda:	af00      	add	r7, sp, #0
 8004edc:	60f8      	str	r0, [r7, #12]
 8004ede:	460b      	mov	r3, r1
 8004ee0:	607a      	str	r2, [r7, #4]
 8004ee2:	817b      	strh	r3, [r7, #10]
 8004ee4:	e010      	b.n	8004f08 <ucg_com_SendStringP+0x32>
 8004ee6:	687b      	ldr	r3, [r7, #4]
 8004ee8:	781b      	ldrb	r3, [r3, #0]
 8004eea:	75fb      	strb	r3, [r7, #23]
 8004eec:	68fb      	ldr	r3, [r7, #12]
 8004eee:	69dc      	ldr	r4, [r3, #28]
 8004ef0:	7dfb      	ldrb	r3, [r7, #23]
 8004ef2:	b29a      	uxth	r2, r3
 8004ef4:	2300      	movs	r3, #0
 8004ef6:	2110      	movs	r1, #16
 8004ef8:	68f8      	ldr	r0, [r7, #12]
 8004efa:	47a0      	blx	r4
 8004efc:	687b      	ldr	r3, [r7, #4]
 8004efe:	3301      	adds	r3, #1
 8004f00:	607b      	str	r3, [r7, #4]
 8004f02:	897b      	ldrh	r3, [r7, #10]
 8004f04:	3b01      	subs	r3, #1
 8004f06:	817b      	strh	r3, [r7, #10]
 8004f08:	897b      	ldrh	r3, [r7, #10]
 8004f0a:	2b00      	cmp	r3, #0
 8004f0c:	d1eb      	bne.n	8004ee6 <ucg_com_SendStringP+0x10>
 8004f0e:	bf00      	nop
 8004f10:	371c      	adds	r7, #28
 8004f12:	46bd      	mov	sp, r7
 8004f14:	bd90      	pop	{r4, r7, pc}

08004f16 <ucg_com_SendCmdArg>:
 8004f16:	b580      	push	{r7, lr}
 8004f18:	b084      	sub	sp, #16
 8004f1a:	af00      	add	r7, sp, #0
 8004f1c:	60f8      	str	r0, [r7, #12]
 8004f1e:	60b9      	str	r1, [r7, #8]
 8004f20:	4611      	mov	r1, r2
 8004f22:	461a      	mov	r2, r3
 8004f24:	460b      	mov	r3, r1
 8004f26:	71fb      	strb	r3, [r7, #7]
 8004f28:	4613      	mov	r3, r2
 8004f2a:	71bb      	strb	r3, [r7, #6]
 8004f2c:	68fb      	ldr	r3, [r7, #12]
 8004f2e:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8004f32:	085b      	lsrs	r3, r3, #1
 8004f34:	b2db      	uxtb	r3, r3
 8004f36:	f003 0301 	and.w	r3, r3, #1
 8004f3a:	b2db      	uxtb	r3, r3
 8004f3c:	4619      	mov	r1, r3
 8004f3e:	68f8      	ldr	r0, [r7, #12]
 8004f40:	f7ff ff80 	bl	8004e44 <ucg_com_SetCDLineStatus>
 8004f44:	79fb      	ldrb	r3, [r7, #7]
 8004f46:	b29b      	uxth	r3, r3
 8004f48:	68ba      	ldr	r2, [r7, #8]
 8004f4a:	4619      	mov	r1, r3
 8004f4c:	68f8      	ldr	r0, [r7, #12]
 8004f4e:	f7ff ffc2 	bl	8004ed6 <ucg_com_SendStringP>
 8004f52:	79bb      	ldrb	r3, [r7, #6]
 8004f54:	2b00      	cmp	r3, #0
 8004f56:	d014      	beq.n	8004f82 <ucg_com_SendCmdArg+0x6c>
 8004f58:	79fb      	ldrb	r3, [r7, #7]
 8004f5a:	68ba      	ldr	r2, [r7, #8]
 8004f5c:	4413      	add	r3, r2
 8004f5e:	60bb      	str	r3, [r7, #8]
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8004f66:	f003 0301 	and.w	r3, r3, #1
 8004f6a:	b2db      	uxtb	r3, r3
 8004f6c:	4619      	mov	r1, r3
 8004f6e:	68f8      	ldr	r0, [r7, #12]
 8004f70:	f7ff ff68 	bl	8004e44 <ucg_com_SetCDLineStatus>
 8004f74:	79bb      	ldrb	r3, [r7, #6]
 8004f76:	b29b      	uxth	r3, r3
 8004f78:	68ba      	ldr	r2, [r7, #8]
 8004f7a:	4619      	mov	r1, r3
 8004f7c:	68f8      	ldr	r0, [r7, #12]
 8004f7e:	f7ff ffaa 	bl	8004ed6 <ucg_com_SendStringP>
 8004f82:	bf00      	nop
 8004f84:	3710      	adds	r7, #16
 8004f86:	46bd      	mov	sp, r7
 8004f88:	bd80      	pop	{r7, pc}
	...

08004f8c <ucg_com_SendCmdSeq>:
 8004f8c:	b580      	push	{r7, lr}
 8004f8e:	b084      	sub	sp, #16
 8004f90:	af00      	add	r7, sp, #0
 8004f92:	6078      	str	r0, [r7, #4]
 8004f94:	6039      	str	r1, [r7, #0]
 8004f96:	683b      	ldr	r3, [r7, #0]
 8004f98:	781b      	ldrb	r3, [r3, #0]
 8004f9a:	73fb      	strb	r3, [r7, #15]
 8004f9c:	7bfb      	ldrb	r3, [r7, #15]
 8004f9e:	091b      	lsrs	r3, r3, #4
 8004fa0:	73bb      	strb	r3, [r7, #14]
 8004fa2:	7bfb      	ldrb	r3, [r7, #15]
 8004fa4:	f003 030f 	and.w	r3, r3, #15
 8004fa8:	737b      	strb	r3, [r7, #13]
 8004faa:	7bbb      	ldrb	r3, [r7, #14]
 8004fac:	2b0f      	cmp	r3, #15
 8004fae:	f200 8124 	bhi.w	80051fa <ucg_com_SendCmdSeq+0x26e>
 8004fb2:	a201      	add	r2, pc, #4	@ (adr r2, 8004fb8 <ucg_com_SendCmdSeq+0x2c>)
 8004fb4:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8004fb8:	080051fb 	.word	0x080051fb
 8004fbc:	08004ff9 	.word	0x08004ff9
 8004fc0:	08004ff9 	.word	0x08004ff9
 8004fc4:	08004ff9 	.word	0x08004ff9
 8004fc8:	080051fb 	.word	0x080051fb
 8004fcc:	080051fb 	.word	0x080051fb
 8004fd0:	08005019 	.word	0x08005019
 8004fd4:	0800504b 	.word	0x0800504b
 8004fd8:	0800508f 	.word	0x0800508f
 8004fdc:	080050bb 	.word	0x080050bb
 8004fe0:	080050e7 	.word	0x080050e7
 8004fe4:	08005147 	.word	0x08005147
 8004fe8:	080051fb 	.word	0x080051fb
 8004fec:	080051fb 	.word	0x080051fb
 8004ff0:	080051fb 	.word	0x080051fb
 8004ff4:	080051a7 	.word	0x080051a7
 8004ff8:	683b      	ldr	r3, [r7, #0]
 8004ffa:	1c59      	adds	r1, r3, #1
 8004ffc:	7b7b      	ldrb	r3, [r7, #13]
 8004ffe:	7bba      	ldrb	r2, [r7, #14]
 8005000:	6878      	ldr	r0, [r7, #4]
 8005002:	f7ff ff88 	bl	8004f16 <ucg_com_SendCmdArg>
 8005006:	7bbb      	ldrb	r3, [r7, #14]
 8005008:	1c5a      	adds	r2, r3, #1
 800500a:	7b7b      	ldrb	r3, [r7, #13]
 800500c:	4413      	add	r3, r2
 800500e:	461a      	mov	r2, r3
 8005010:	683b      	ldr	r3, [r7, #0]
 8005012:	4413      	add	r3, r2
 8005014:	603b      	str	r3, [r7, #0]
 8005016:	e0ef      	b.n	80051f8 <ucg_com_SendCmdSeq+0x26c>
 8005018:	687b      	ldr	r3, [r7, #4]
 800501a:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 800501e:	f003 0301 	and.w	r3, r3, #1
 8005022:	b2db      	uxtb	r3, r3
 8005024:	4619      	mov	r1, r3
 8005026:	6878      	ldr	r0, [r7, #4]
 8005028:	f7ff ff0c 	bl	8004e44 <ucg_com_SetCDLineStatus>
 800502c:	7b7b      	ldrb	r3, [r7, #13]
 800502e:	b299      	uxth	r1, r3
 8005030:	683b      	ldr	r3, [r7, #0]
 8005032:	3301      	adds	r3, #1
 8005034:	461a      	mov	r2, r3
 8005036:	6878      	ldr	r0, [r7, #4]
 8005038:	f7ff ff4d 	bl	8004ed6 <ucg_com_SendStringP>
 800503c:	7b7b      	ldrb	r3, [r7, #13]
 800503e:	3301      	adds	r3, #1
 8005040:	461a      	mov	r2, r3
 8005042:	683b      	ldr	r3, [r7, #0]
 8005044:	4413      	add	r3, r2
 8005046:	603b      	str	r3, [r7, #0]
 8005048:	e0d6      	b.n	80051f8 <ucg_com_SendCmdSeq+0x26c>
 800504a:	687b      	ldr	r3, [r7, #4]
 800504c:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 8005050:	085b      	lsrs	r3, r3, #1
 8005052:	b2db      	uxtb	r3, r3
 8005054:	f003 0301 	and.w	r3, r3, #1
 8005058:	2b00      	cmp	r3, #0
 800505a:	bf0c      	ite	eq
 800505c:	2301      	moveq	r3, #1
 800505e:	2300      	movne	r3, #0
 8005060:	b2db      	uxtb	r3, r3
 8005062:	4619      	mov	r1, r3
 8005064:	6878      	ldr	r0, [r7, #4]
 8005066:	f7ff feed 	bl	8004e44 <ucg_com_SetCDLineStatus>
 800506a:	7b7b      	ldrb	r3, [r7, #13]
 800506c:	2b00      	cmp	r3, #0
 800506e:	d007      	beq.n	8005080 <ucg_com_SendCmdSeq+0xf4>
 8005070:	7b7b      	ldrb	r3, [r7, #13]
 8005072:	b299      	uxth	r1, r3
 8005074:	683b      	ldr	r3, [r7, #0]
 8005076:	3301      	adds	r3, #1
 8005078:	461a      	mov	r2, r3
 800507a:	6878      	ldr	r0, [r7, #4]
 800507c:	f7ff ff2b 	bl	8004ed6 <ucg_com_SendStringP>
 8005080:	7b7b      	ldrb	r3, [r7, #13]
 8005082:	3301      	adds	r3, #1
 8005084:	461a      	mov	r2, r3
 8005086:	683b      	ldr	r3, [r7, #0]
 8005088:	4413      	add	r3, r2
 800508a:	603b      	str	r3, [r7, #0]
 800508c:	e0b4      	b.n	80051f8 <ucg_com_SendCmdSeq+0x26c>
 800508e:	683b      	ldr	r3, [r7, #0]
 8005090:	3301      	adds	r3, #1
 8005092:	603b      	str	r3, [r7, #0]
 8005094:	683b      	ldr	r3, [r7, #0]
 8005096:	781b      	ldrb	r3, [r3, #0]
 8005098:	73fb      	strb	r3, [r7, #15]
 800509a:	7b7b      	ldrb	r3, [r7, #13]
 800509c:	b29b      	uxth	r3, r3
 800509e:	021b      	lsls	r3, r3, #8
 80050a0:	b29a      	uxth	r2, r3
 80050a2:	7bfb      	ldrb	r3, [r7, #15]
 80050a4:	b29b      	uxth	r3, r3
 80050a6:	4413      	add	r3, r2
 80050a8:	b29b      	uxth	r3, r3
 80050aa:	4619      	mov	r1, r3
 80050ac:	6878      	ldr	r0, [r7, #4]
 80050ae:	f7ff feea 	bl	8004e86 <ucg_com_DelayMilliseconds>
 80050b2:	683b      	ldr	r3, [r7, #0]
 80050b4:	3301      	adds	r3, #1
 80050b6:	603b      	str	r3, [r7, #0]
 80050b8:	e09e      	b.n	80051f8 <ucg_com_SendCmdSeq+0x26c>
 80050ba:	683b      	ldr	r3, [r7, #0]
 80050bc:	3301      	adds	r3, #1
 80050be:	603b      	str	r3, [r7, #0]
 80050c0:	683b      	ldr	r3, [r7, #0]
 80050c2:	781b      	ldrb	r3, [r3, #0]
 80050c4:	73fb      	strb	r3, [r7, #15]
 80050c6:	7b7b      	ldrb	r3, [r7, #13]
 80050c8:	b29b      	uxth	r3, r3
 80050ca:	021b      	lsls	r3, r3, #8
 80050cc:	b29a      	uxth	r2, r3
 80050ce:	7bfb      	ldrb	r3, [r7, #15]
 80050d0:	b29b      	uxth	r3, r3
 80050d2:	4413      	add	r3, r2
 80050d4:	b29b      	uxth	r3, r3
 80050d6:	4619      	mov	r1, r3
 80050d8:	6878      	ldr	r0, [r7, #4]
 80050da:	f7ff fec3 	bl	8004e64 <ucg_com_DelayMicroseconds>
 80050de:	683b      	ldr	r3, [r7, #0]
 80050e0:	3301      	adds	r3, #1
 80050e2:	603b      	str	r3, [r7, #0]
 80050e4:	e088      	b.n	80051f8 <ucg_com_SendCmdSeq+0x26c>
 80050e6:	683b      	ldr	r3, [r7, #0]
 80050e8:	3301      	adds	r3, #1
 80050ea:	603b      	str	r3, [r7, #0]
 80050ec:	683b      	ldr	r3, [r7, #0]
 80050ee:	781b      	ldrb	r3, [r3, #0]
 80050f0:	73fb      	strb	r3, [r7, #15]
 80050f2:	683b      	ldr	r3, [r7, #0]
 80050f4:	3301      	adds	r3, #1
 80050f6:	603b      	str	r3, [r7, #0]
 80050f8:	683b      	ldr	r3, [r7, #0]
 80050fa:	781b      	ldrb	r3, [r3, #0]
 80050fc:	733b      	strb	r3, [r7, #12]
 80050fe:	683b      	ldr	r3, [r7, #0]
 8005100:	3301      	adds	r3, #1
 8005102:	603b      	str	r3, [r7, #0]
 8005104:	687b      	ldr	r3, [r7, #4]
 8005106:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 800510a:	f003 0301 	and.w	r3, r3, #1
 800510e:	b2db      	uxtb	r3, r3
 8005110:	4619      	mov	r1, r3
 8005112:	6878      	ldr	r0, [r7, #4]
 8005114:	f7ff fe96 	bl	8004e44 <ucg_com_SetCDLineStatus>
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	f9b3 3024 	ldrsh.w	r3, [r3, #36]	@ 0x24
 800511e:	461a      	mov	r2, r3
 8005120:	687b      	ldr	r3, [r7, #4]
 8005122:	f9b3 3020 	ldrsh.w	r3, [r3, #32]
 8005126:	441a      	add	r2, r3
 8005128:	7b7b      	ldrb	r3, [r7, #13]
 800512a:	fa42 f303 	asr.w	r3, r2, r3
 800512e:	b2da      	uxtb	r2, r3
 8005130:	7bfb      	ldrb	r3, [r7, #15]
 8005132:	4013      	ands	r3, r2
 8005134:	b2da      	uxtb	r2, r3
 8005136:	7b3b      	ldrb	r3, [r7, #12]
 8005138:	4313      	orrs	r3, r2
 800513a:	b2db      	uxtb	r3, r3
 800513c:	4619      	mov	r1, r3
 800513e:	6878      	ldr	r0, [r7, #4]
 8005140:	f7ff feb7 	bl	8004eb2 <ucg_com_SendByte>
 8005144:	e058      	b.n	80051f8 <ucg_com_SendCmdSeq+0x26c>
 8005146:	683b      	ldr	r3, [r7, #0]
 8005148:	3301      	adds	r3, #1
 800514a:	603b      	str	r3, [r7, #0]
 800514c:	683b      	ldr	r3, [r7, #0]
 800514e:	781b      	ldrb	r3, [r3, #0]
 8005150:	73fb      	strb	r3, [r7, #15]
 8005152:	683b      	ldr	r3, [r7, #0]
 8005154:	3301      	adds	r3, #1
 8005156:	603b      	str	r3, [r7, #0]
 8005158:	683b      	ldr	r3, [r7, #0]
 800515a:	781b      	ldrb	r3, [r3, #0]
 800515c:	733b      	strb	r3, [r7, #12]
 800515e:	683b      	ldr	r3, [r7, #0]
 8005160:	3301      	adds	r3, #1
 8005162:	603b      	str	r3, [r7, #0]
 8005164:	687b      	ldr	r3, [r7, #4]
 8005166:	f893 30b0 	ldrb.w	r3, [r3, #176]	@ 0xb0
 800516a:	f003 0301 	and.w	r3, r3, #1
 800516e:	b2db      	uxtb	r3, r3
 8005170:	4619      	mov	r1, r3
 8005172:	6878      	ldr	r0, [r7, #4]
 8005174:	f7ff fe66 	bl	8004e44 <ucg_com_SetCDLineStatus>
 8005178:	687b      	ldr	r3, [r7, #4]
 800517a:	f9b3 3026 	ldrsh.w	r3, [r3, #38]	@ 0x26
 800517e:	461a      	mov	r2, r3
 8005180:	687b      	ldr	r3, [r7, #4]
 8005182:	f9b3 3022 	ldrsh.w	r3, [r3, #34]	@ 0x22
 8005186:	441a      	add	r2, r3
 8005188:	7b7b      	ldrb	r3, [r7, #13]
 800518a:	fa42 f303 	asr.w	r3, r2, r3
 800518e:	b2da      	uxtb	r2, r3
 8005190:	7bfb      	ldrb	r3, [r7, #15]
 8005192:	4013      	ands	r3, r2
 8005194:	b2da      	uxtb	r2, r3
 8005196:	7b3b      	ldrb	r3, [r7, #12]
 8005198:	4313      	orrs	r3, r2
 800519a:	b2db      	uxtb	r3, r3
 800519c:	4619      	mov	r1, r3
 800519e:	6878      	ldr	r0, [r7, #4]
 80051a0:	f7ff fe87 	bl	8004eb2 <ucg_com_SendByte>
 80051a4:	e028      	b.n	80051f8 <ucg_com_SendCmdSeq+0x26c>
 80051a6:	7b7b      	ldrb	r3, [r7, #13]
 80051a8:	089b      	lsrs	r3, r3, #2
 80051aa:	73bb      	strb	r3, [r7, #14]
 80051ac:	7b7b      	ldrb	r3, [r7, #13]
 80051ae:	f003 0303 	and.w	r3, r3, #3
 80051b2:	737b      	strb	r3, [r7, #13]
 80051b4:	7bbb      	ldrb	r3, [r7, #14]
 80051b6:	2b01      	cmp	r3, #1
 80051b8:	d00c      	beq.n	80051d4 <ucg_com_SendCmdSeq+0x248>
 80051ba:	2b03      	cmp	r3, #3
 80051bc:	d013      	beq.n	80051e6 <ucg_com_SendCmdSeq+0x25a>
 80051be:	2b00      	cmp	r3, #0
 80051c0:	d116      	bne.n	80051f0 <ucg_com_SendCmdSeq+0x264>
 80051c2:	7b7b      	ldrb	r3, [r7, #13]
 80051c4:	f003 0301 	and.w	r3, r3, #1
 80051c8:	b2db      	uxtb	r3, r3
 80051ca:	4619      	mov	r1, r3
 80051cc:	6878      	ldr	r0, [r7, #4]
 80051ce:	f7ff fe19 	bl	8004e04 <ucg_com_SetResetLineStatus>
 80051d2:	e00d      	b.n	80051f0 <ucg_com_SendCmdSeq+0x264>
 80051d4:	7b7b      	ldrb	r3, [r7, #13]
 80051d6:	f003 0301 	and.w	r3, r3, #1
 80051da:	b2db      	uxtb	r3, r3
 80051dc:	4619      	mov	r1, r3
 80051de:	6878      	ldr	r0, [r7, #4]
 80051e0:	f7ff fe20 	bl	8004e24 <ucg_com_SetCSLineStatus>
 80051e4:	e004      	b.n	80051f0 <ucg_com_SendCmdSeq+0x264>
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	7b7a      	ldrb	r2, [r7, #13]
 80051ea:	f883 20b0 	strb.w	r2, [r3, #176]	@ 0xb0
 80051ee:	bf00      	nop
 80051f0:	683b      	ldr	r3, [r7, #0]
 80051f2:	3301      	adds	r3, #1
 80051f4:	603b      	str	r3, [r7, #0]
 80051f6:	bf00      	nop
 80051f8:	e6cd      	b.n	8004f96 <ucg_com_SendCmdSeq+0xa>
 80051fa:	bf00      	nop
 80051fc:	3710      	adds	r7, #16
 80051fe:	46bd      	mov	sp, r7
 8005200:	bd80      	pop	{r7, pc}
 8005202:	bf00      	nop

08005204 <std>:
 8005204:	2300      	movs	r3, #0
 8005206:	b510      	push	{r4, lr}
 8005208:	4604      	mov	r4, r0
 800520a:	e9c0 3300 	strd	r3, r3, [r0]
 800520e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8005212:	6083      	str	r3, [r0, #8]
 8005214:	8181      	strh	r1, [r0, #12]
 8005216:	6643      	str	r3, [r0, #100]	@ 0x64
 8005218:	81c2      	strh	r2, [r0, #14]
 800521a:	6183      	str	r3, [r0, #24]
 800521c:	4619      	mov	r1, r3
 800521e:	2208      	movs	r2, #8
 8005220:	305c      	adds	r0, #92	@ 0x5c
 8005222:	f000 fa07 	bl	8005634 <memset>
 8005226:	4b0d      	ldr	r3, [pc, #52]	@ (800525c <std+0x58>)
 8005228:	6263      	str	r3, [r4, #36]	@ 0x24
 800522a:	4b0d      	ldr	r3, [pc, #52]	@ (8005260 <std+0x5c>)
 800522c:	62a3      	str	r3, [r4, #40]	@ 0x28
 800522e:	4b0d      	ldr	r3, [pc, #52]	@ (8005264 <std+0x60>)
 8005230:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8005232:	4b0d      	ldr	r3, [pc, #52]	@ (8005268 <std+0x64>)
 8005234:	6323      	str	r3, [r4, #48]	@ 0x30
 8005236:	4b0d      	ldr	r3, [pc, #52]	@ (800526c <std+0x68>)
 8005238:	6224      	str	r4, [r4, #32]
 800523a:	429c      	cmp	r4, r3
 800523c:	d006      	beq.n	800524c <std+0x48>
 800523e:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 8005242:	4294      	cmp	r4, r2
 8005244:	d002      	beq.n	800524c <std+0x48>
 8005246:	33d0      	adds	r3, #208	@ 0xd0
 8005248:	429c      	cmp	r4, r3
 800524a:	d105      	bne.n	8005258 <std+0x54>
 800524c:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 8005250:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8005254:	f000 ba66 	b.w	8005724 <__retarget_lock_init_recursive>
 8005258:	bd10      	pop	{r4, pc}
 800525a:	bf00      	nop
 800525c:	08005485 	.word	0x08005485
 8005260:	080054a7 	.word	0x080054a7
 8005264:	080054df 	.word	0x080054df
 8005268:	08005503 	.word	0x08005503
 800526c:	20001868 	.word	0x20001868

08005270 <stdio_exit_handler>:
 8005270:	4a02      	ldr	r2, [pc, #8]	@ (800527c <stdio_exit_handler+0xc>)
 8005272:	4903      	ldr	r1, [pc, #12]	@ (8005280 <stdio_exit_handler+0x10>)
 8005274:	4803      	ldr	r0, [pc, #12]	@ (8005284 <stdio_exit_handler+0x14>)
 8005276:	f000 b869 	b.w	800534c <_fwalk_sglue>
 800527a:	bf00      	nop
 800527c:	2000007c 	.word	0x2000007c
 8005280:	08005ff1 	.word	0x08005ff1
 8005284:	2000008c 	.word	0x2000008c

08005288 <cleanup_stdio>:
 8005288:	6841      	ldr	r1, [r0, #4]
 800528a:	4b0c      	ldr	r3, [pc, #48]	@ (80052bc <cleanup_stdio+0x34>)
 800528c:	4299      	cmp	r1, r3
 800528e:	b510      	push	{r4, lr}
 8005290:	4604      	mov	r4, r0
 8005292:	d001      	beq.n	8005298 <cleanup_stdio+0x10>
 8005294:	f000 feac 	bl	8005ff0 <_fflush_r>
 8005298:	68a1      	ldr	r1, [r4, #8]
 800529a:	4b09      	ldr	r3, [pc, #36]	@ (80052c0 <cleanup_stdio+0x38>)
 800529c:	4299      	cmp	r1, r3
 800529e:	d002      	beq.n	80052a6 <cleanup_stdio+0x1e>
 80052a0:	4620      	mov	r0, r4
 80052a2:	f000 fea5 	bl	8005ff0 <_fflush_r>
 80052a6:	68e1      	ldr	r1, [r4, #12]
 80052a8:	4b06      	ldr	r3, [pc, #24]	@ (80052c4 <cleanup_stdio+0x3c>)
 80052aa:	4299      	cmp	r1, r3
 80052ac:	d004      	beq.n	80052b8 <cleanup_stdio+0x30>
 80052ae:	4620      	mov	r0, r4
 80052b0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80052b4:	f000 be9c 	b.w	8005ff0 <_fflush_r>
 80052b8:	bd10      	pop	{r4, pc}
 80052ba:	bf00      	nop
 80052bc:	20001868 	.word	0x20001868
 80052c0:	200018d0 	.word	0x200018d0
 80052c4:	20001938 	.word	0x20001938

080052c8 <global_stdio_init.part.0>:
 80052c8:	b510      	push	{r4, lr}
 80052ca:	4b0b      	ldr	r3, [pc, #44]	@ (80052f8 <global_stdio_init.part.0+0x30>)
 80052cc:	4c0b      	ldr	r4, [pc, #44]	@ (80052fc <global_stdio_init.part.0+0x34>)
 80052ce:	4a0c      	ldr	r2, [pc, #48]	@ (8005300 <global_stdio_init.part.0+0x38>)
 80052d0:	601a      	str	r2, [r3, #0]
 80052d2:	4620      	mov	r0, r4
 80052d4:	2200      	movs	r2, #0
 80052d6:	2104      	movs	r1, #4
 80052d8:	f7ff ff94 	bl	8005204 <std>
 80052dc:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 80052e0:	2201      	movs	r2, #1
 80052e2:	2109      	movs	r1, #9
 80052e4:	f7ff ff8e 	bl	8005204 <std>
 80052e8:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 80052ec:	2202      	movs	r2, #2
 80052ee:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80052f2:	2112      	movs	r1, #18
 80052f4:	f7ff bf86 	b.w	8005204 <std>
 80052f8:	200019a0 	.word	0x200019a0
 80052fc:	20001868 	.word	0x20001868
 8005300:	08005271 	.word	0x08005271

08005304 <__sfp_lock_acquire>:
 8005304:	4801      	ldr	r0, [pc, #4]	@ (800530c <__sfp_lock_acquire+0x8>)
 8005306:	f000 ba0e 	b.w	8005726 <__retarget_lock_acquire_recursive>
 800530a:	bf00      	nop
 800530c:	200019a9 	.word	0x200019a9

08005310 <__sfp_lock_release>:
 8005310:	4801      	ldr	r0, [pc, #4]	@ (8005318 <__sfp_lock_release+0x8>)
 8005312:	f000 ba09 	b.w	8005728 <__retarget_lock_release_recursive>
 8005316:	bf00      	nop
 8005318:	200019a9 	.word	0x200019a9

0800531c <__sinit>:
 800531c:	b510      	push	{r4, lr}
 800531e:	4604      	mov	r4, r0
 8005320:	f7ff fff0 	bl	8005304 <__sfp_lock_acquire>
 8005324:	6a23      	ldr	r3, [r4, #32]
 8005326:	b11b      	cbz	r3, 8005330 <__sinit+0x14>
 8005328:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800532c:	f7ff bff0 	b.w	8005310 <__sfp_lock_release>
 8005330:	4b04      	ldr	r3, [pc, #16]	@ (8005344 <__sinit+0x28>)
 8005332:	6223      	str	r3, [r4, #32]
 8005334:	4b04      	ldr	r3, [pc, #16]	@ (8005348 <__sinit+0x2c>)
 8005336:	681b      	ldr	r3, [r3, #0]
 8005338:	2b00      	cmp	r3, #0
 800533a:	d1f5      	bne.n	8005328 <__sinit+0xc>
 800533c:	f7ff ffc4 	bl	80052c8 <global_stdio_init.part.0>
 8005340:	e7f2      	b.n	8005328 <__sinit+0xc>
 8005342:	bf00      	nop
 8005344:	08005289 	.word	0x08005289
 8005348:	200019a0 	.word	0x200019a0

0800534c <_fwalk_sglue>:
 800534c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005350:	4607      	mov	r7, r0
 8005352:	4688      	mov	r8, r1
 8005354:	4614      	mov	r4, r2
 8005356:	2600      	movs	r6, #0
 8005358:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800535c:	f1b9 0901 	subs.w	r9, r9, #1
 8005360:	d505      	bpl.n	800536e <_fwalk_sglue+0x22>
 8005362:	6824      	ldr	r4, [r4, #0]
 8005364:	2c00      	cmp	r4, #0
 8005366:	d1f7      	bne.n	8005358 <_fwalk_sglue+0xc>
 8005368:	4630      	mov	r0, r6
 800536a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800536e:	89ab      	ldrh	r3, [r5, #12]
 8005370:	2b01      	cmp	r3, #1
 8005372:	d907      	bls.n	8005384 <_fwalk_sglue+0x38>
 8005374:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8005378:	3301      	adds	r3, #1
 800537a:	d003      	beq.n	8005384 <_fwalk_sglue+0x38>
 800537c:	4629      	mov	r1, r5
 800537e:	4638      	mov	r0, r7
 8005380:	47c0      	blx	r8
 8005382:	4306      	orrs	r6, r0
 8005384:	3568      	adds	r5, #104	@ 0x68
 8005386:	e7e9      	b.n	800535c <_fwalk_sglue+0x10>

08005388 <_puts_r>:
 8005388:	6a03      	ldr	r3, [r0, #32]
 800538a:	b570      	push	{r4, r5, r6, lr}
 800538c:	6884      	ldr	r4, [r0, #8]
 800538e:	4605      	mov	r5, r0
 8005390:	460e      	mov	r6, r1
 8005392:	b90b      	cbnz	r3, 8005398 <_puts_r+0x10>
 8005394:	f7ff ffc2 	bl	800531c <__sinit>
 8005398:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800539a:	07db      	lsls	r3, r3, #31
 800539c:	d405      	bmi.n	80053aa <_puts_r+0x22>
 800539e:	89a3      	ldrh	r3, [r4, #12]
 80053a0:	0598      	lsls	r0, r3, #22
 80053a2:	d402      	bmi.n	80053aa <_puts_r+0x22>
 80053a4:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80053a6:	f000 f9be 	bl	8005726 <__retarget_lock_acquire_recursive>
 80053aa:	89a3      	ldrh	r3, [r4, #12]
 80053ac:	0719      	lsls	r1, r3, #28
 80053ae:	d502      	bpl.n	80053b6 <_puts_r+0x2e>
 80053b0:	6923      	ldr	r3, [r4, #16]
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d135      	bne.n	8005422 <_puts_r+0x9a>
 80053b6:	4621      	mov	r1, r4
 80053b8:	4628      	mov	r0, r5
 80053ba:	f000 f8e5 	bl	8005588 <__swsetup_r>
 80053be:	b380      	cbz	r0, 8005422 <_puts_r+0x9a>
 80053c0:	f04f 35ff 	mov.w	r5, #4294967295
 80053c4:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 80053c6:	07da      	lsls	r2, r3, #31
 80053c8:	d405      	bmi.n	80053d6 <_puts_r+0x4e>
 80053ca:	89a3      	ldrh	r3, [r4, #12]
 80053cc:	059b      	lsls	r3, r3, #22
 80053ce:	d402      	bmi.n	80053d6 <_puts_r+0x4e>
 80053d0:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 80053d2:	f000 f9a9 	bl	8005728 <__retarget_lock_release_recursive>
 80053d6:	4628      	mov	r0, r5
 80053d8:	bd70      	pop	{r4, r5, r6, pc}
 80053da:	2b00      	cmp	r3, #0
 80053dc:	da04      	bge.n	80053e8 <_puts_r+0x60>
 80053de:	69a2      	ldr	r2, [r4, #24]
 80053e0:	429a      	cmp	r2, r3
 80053e2:	dc17      	bgt.n	8005414 <_puts_r+0x8c>
 80053e4:	290a      	cmp	r1, #10
 80053e6:	d015      	beq.n	8005414 <_puts_r+0x8c>
 80053e8:	6823      	ldr	r3, [r4, #0]
 80053ea:	1c5a      	adds	r2, r3, #1
 80053ec:	6022      	str	r2, [r4, #0]
 80053ee:	7019      	strb	r1, [r3, #0]
 80053f0:	68a3      	ldr	r3, [r4, #8]
 80053f2:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80053f6:	3b01      	subs	r3, #1
 80053f8:	60a3      	str	r3, [r4, #8]
 80053fa:	2900      	cmp	r1, #0
 80053fc:	d1ed      	bne.n	80053da <_puts_r+0x52>
 80053fe:	2b00      	cmp	r3, #0
 8005400:	da11      	bge.n	8005426 <_puts_r+0x9e>
 8005402:	4622      	mov	r2, r4
 8005404:	210a      	movs	r1, #10
 8005406:	4628      	mov	r0, r5
 8005408:	f000 f87f 	bl	800550a <__swbuf_r>
 800540c:	3001      	adds	r0, #1
 800540e:	d0d7      	beq.n	80053c0 <_puts_r+0x38>
 8005410:	250a      	movs	r5, #10
 8005412:	e7d7      	b.n	80053c4 <_puts_r+0x3c>
 8005414:	4622      	mov	r2, r4
 8005416:	4628      	mov	r0, r5
 8005418:	f000 f877 	bl	800550a <__swbuf_r>
 800541c:	3001      	adds	r0, #1
 800541e:	d1e7      	bne.n	80053f0 <_puts_r+0x68>
 8005420:	e7ce      	b.n	80053c0 <_puts_r+0x38>
 8005422:	3e01      	subs	r6, #1
 8005424:	e7e4      	b.n	80053f0 <_puts_r+0x68>
 8005426:	6823      	ldr	r3, [r4, #0]
 8005428:	1c5a      	adds	r2, r3, #1
 800542a:	6022      	str	r2, [r4, #0]
 800542c:	220a      	movs	r2, #10
 800542e:	701a      	strb	r2, [r3, #0]
 8005430:	e7ee      	b.n	8005410 <_puts_r+0x88>
	...

08005434 <puts>:
 8005434:	4b02      	ldr	r3, [pc, #8]	@ (8005440 <puts+0xc>)
 8005436:	4601      	mov	r1, r0
 8005438:	6818      	ldr	r0, [r3, #0]
 800543a:	f7ff bfa5 	b.w	8005388 <_puts_r>
 800543e:	bf00      	nop
 8005440:	20000088 	.word	0x20000088

08005444 <siprintf>:
 8005444:	b40e      	push	{r1, r2, r3}
 8005446:	b500      	push	{lr}
 8005448:	b09c      	sub	sp, #112	@ 0x70
 800544a:	ab1d      	add	r3, sp, #116	@ 0x74
 800544c:	9002      	str	r0, [sp, #8]
 800544e:	9006      	str	r0, [sp, #24]
 8005450:	f06f 4100 	mvn.w	r1, #2147483648	@ 0x80000000
 8005454:	4809      	ldr	r0, [pc, #36]	@ (800547c <siprintf+0x38>)
 8005456:	9107      	str	r1, [sp, #28]
 8005458:	9104      	str	r1, [sp, #16]
 800545a:	4909      	ldr	r1, [pc, #36]	@ (8005480 <siprintf+0x3c>)
 800545c:	f853 2b04 	ldr.w	r2, [r3], #4
 8005460:	9105      	str	r1, [sp, #20]
 8005462:	6800      	ldr	r0, [r0, #0]
 8005464:	9301      	str	r3, [sp, #4]
 8005466:	a902      	add	r1, sp, #8
 8005468:	f000 fab4 	bl	80059d4 <_svfiprintf_r>
 800546c:	9b02      	ldr	r3, [sp, #8]
 800546e:	2200      	movs	r2, #0
 8005470:	701a      	strb	r2, [r3, #0]
 8005472:	b01c      	add	sp, #112	@ 0x70
 8005474:	f85d eb04 	ldr.w	lr, [sp], #4
 8005478:	b003      	add	sp, #12
 800547a:	4770      	bx	lr
 800547c:	20000088 	.word	0x20000088
 8005480:	ffff0208 	.word	0xffff0208

08005484 <__sread>:
 8005484:	b510      	push	{r4, lr}
 8005486:	460c      	mov	r4, r1
 8005488:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800548c:	f000 f8fc 	bl	8005688 <_read_r>
 8005490:	2800      	cmp	r0, #0
 8005492:	bfab      	itete	ge
 8005494:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 8005496:	89a3      	ldrhlt	r3, [r4, #12]
 8005498:	181b      	addge	r3, r3, r0
 800549a:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 800549e:	bfac      	ite	ge
 80054a0:	6563      	strge	r3, [r4, #84]	@ 0x54
 80054a2:	81a3      	strhlt	r3, [r4, #12]
 80054a4:	bd10      	pop	{r4, pc}

080054a6 <__swrite>:
 80054a6:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80054aa:	461f      	mov	r7, r3
 80054ac:	898b      	ldrh	r3, [r1, #12]
 80054ae:	05db      	lsls	r3, r3, #23
 80054b0:	4605      	mov	r5, r0
 80054b2:	460c      	mov	r4, r1
 80054b4:	4616      	mov	r6, r2
 80054b6:	d505      	bpl.n	80054c4 <__swrite+0x1e>
 80054b8:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054bc:	2302      	movs	r3, #2
 80054be:	2200      	movs	r2, #0
 80054c0:	f000 f8d0 	bl	8005664 <_lseek_r>
 80054c4:	89a3      	ldrh	r3, [r4, #12]
 80054c6:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80054ca:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 80054ce:	81a3      	strh	r3, [r4, #12]
 80054d0:	4632      	mov	r2, r6
 80054d2:	463b      	mov	r3, r7
 80054d4:	4628      	mov	r0, r5
 80054d6:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80054da:	f000 b8e7 	b.w	80056ac <_write_r>

080054de <__sseek>:
 80054de:	b510      	push	{r4, lr}
 80054e0:	460c      	mov	r4, r1
 80054e2:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80054e6:	f000 f8bd 	bl	8005664 <_lseek_r>
 80054ea:	1c43      	adds	r3, r0, #1
 80054ec:	89a3      	ldrh	r3, [r4, #12]
 80054ee:	bf15      	itete	ne
 80054f0:	6560      	strne	r0, [r4, #84]	@ 0x54
 80054f2:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 80054f6:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 80054fa:	81a3      	strheq	r3, [r4, #12]
 80054fc:	bf18      	it	ne
 80054fe:	81a3      	strhne	r3, [r4, #12]
 8005500:	bd10      	pop	{r4, pc}

08005502 <__sclose>:
 8005502:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8005506:	f000 b89d 	b.w	8005644 <_close_r>

0800550a <__swbuf_r>:
 800550a:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800550c:	460e      	mov	r6, r1
 800550e:	4614      	mov	r4, r2
 8005510:	4605      	mov	r5, r0
 8005512:	b118      	cbz	r0, 800551c <__swbuf_r+0x12>
 8005514:	6a03      	ldr	r3, [r0, #32]
 8005516:	b90b      	cbnz	r3, 800551c <__swbuf_r+0x12>
 8005518:	f7ff ff00 	bl	800531c <__sinit>
 800551c:	69a3      	ldr	r3, [r4, #24]
 800551e:	60a3      	str	r3, [r4, #8]
 8005520:	89a3      	ldrh	r3, [r4, #12]
 8005522:	071a      	lsls	r2, r3, #28
 8005524:	d501      	bpl.n	800552a <__swbuf_r+0x20>
 8005526:	6923      	ldr	r3, [r4, #16]
 8005528:	b943      	cbnz	r3, 800553c <__swbuf_r+0x32>
 800552a:	4621      	mov	r1, r4
 800552c:	4628      	mov	r0, r5
 800552e:	f000 f82b 	bl	8005588 <__swsetup_r>
 8005532:	b118      	cbz	r0, 800553c <__swbuf_r+0x32>
 8005534:	f04f 37ff 	mov.w	r7, #4294967295
 8005538:	4638      	mov	r0, r7
 800553a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800553c:	6823      	ldr	r3, [r4, #0]
 800553e:	6922      	ldr	r2, [r4, #16]
 8005540:	1a98      	subs	r0, r3, r2
 8005542:	6963      	ldr	r3, [r4, #20]
 8005544:	b2f6      	uxtb	r6, r6
 8005546:	4283      	cmp	r3, r0
 8005548:	4637      	mov	r7, r6
 800554a:	dc05      	bgt.n	8005558 <__swbuf_r+0x4e>
 800554c:	4621      	mov	r1, r4
 800554e:	4628      	mov	r0, r5
 8005550:	f000 fd4e 	bl	8005ff0 <_fflush_r>
 8005554:	2800      	cmp	r0, #0
 8005556:	d1ed      	bne.n	8005534 <__swbuf_r+0x2a>
 8005558:	68a3      	ldr	r3, [r4, #8]
 800555a:	3b01      	subs	r3, #1
 800555c:	60a3      	str	r3, [r4, #8]
 800555e:	6823      	ldr	r3, [r4, #0]
 8005560:	1c5a      	adds	r2, r3, #1
 8005562:	6022      	str	r2, [r4, #0]
 8005564:	701e      	strb	r6, [r3, #0]
 8005566:	6962      	ldr	r2, [r4, #20]
 8005568:	1c43      	adds	r3, r0, #1
 800556a:	429a      	cmp	r2, r3
 800556c:	d004      	beq.n	8005578 <__swbuf_r+0x6e>
 800556e:	89a3      	ldrh	r3, [r4, #12]
 8005570:	07db      	lsls	r3, r3, #31
 8005572:	d5e1      	bpl.n	8005538 <__swbuf_r+0x2e>
 8005574:	2e0a      	cmp	r6, #10
 8005576:	d1df      	bne.n	8005538 <__swbuf_r+0x2e>
 8005578:	4621      	mov	r1, r4
 800557a:	4628      	mov	r0, r5
 800557c:	f000 fd38 	bl	8005ff0 <_fflush_r>
 8005580:	2800      	cmp	r0, #0
 8005582:	d0d9      	beq.n	8005538 <__swbuf_r+0x2e>
 8005584:	e7d6      	b.n	8005534 <__swbuf_r+0x2a>
	...

08005588 <__swsetup_r>:
 8005588:	b538      	push	{r3, r4, r5, lr}
 800558a:	4b29      	ldr	r3, [pc, #164]	@ (8005630 <__swsetup_r+0xa8>)
 800558c:	4605      	mov	r5, r0
 800558e:	6818      	ldr	r0, [r3, #0]
 8005590:	460c      	mov	r4, r1
 8005592:	b118      	cbz	r0, 800559c <__swsetup_r+0x14>
 8005594:	6a03      	ldr	r3, [r0, #32]
 8005596:	b90b      	cbnz	r3, 800559c <__swsetup_r+0x14>
 8005598:	f7ff fec0 	bl	800531c <__sinit>
 800559c:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80055a0:	0719      	lsls	r1, r3, #28
 80055a2:	d422      	bmi.n	80055ea <__swsetup_r+0x62>
 80055a4:	06da      	lsls	r2, r3, #27
 80055a6:	d407      	bmi.n	80055b8 <__swsetup_r+0x30>
 80055a8:	2209      	movs	r2, #9
 80055aa:	602a      	str	r2, [r5, #0]
 80055ac:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80055b0:	81a3      	strh	r3, [r4, #12]
 80055b2:	f04f 30ff 	mov.w	r0, #4294967295
 80055b6:	e033      	b.n	8005620 <__swsetup_r+0x98>
 80055b8:	0758      	lsls	r0, r3, #29
 80055ba:	d512      	bpl.n	80055e2 <__swsetup_r+0x5a>
 80055bc:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 80055be:	b141      	cbz	r1, 80055d2 <__swsetup_r+0x4a>
 80055c0:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 80055c4:	4299      	cmp	r1, r3
 80055c6:	d002      	beq.n	80055ce <__swsetup_r+0x46>
 80055c8:	4628      	mov	r0, r5
 80055ca:	f000 f8af 	bl	800572c <_free_r>
 80055ce:	2300      	movs	r3, #0
 80055d0:	6363      	str	r3, [r4, #52]	@ 0x34
 80055d2:	89a3      	ldrh	r3, [r4, #12]
 80055d4:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 80055d8:	81a3      	strh	r3, [r4, #12]
 80055da:	2300      	movs	r3, #0
 80055dc:	6063      	str	r3, [r4, #4]
 80055de:	6923      	ldr	r3, [r4, #16]
 80055e0:	6023      	str	r3, [r4, #0]
 80055e2:	89a3      	ldrh	r3, [r4, #12]
 80055e4:	f043 0308 	orr.w	r3, r3, #8
 80055e8:	81a3      	strh	r3, [r4, #12]
 80055ea:	6923      	ldr	r3, [r4, #16]
 80055ec:	b94b      	cbnz	r3, 8005602 <__swsetup_r+0x7a>
 80055ee:	89a3      	ldrh	r3, [r4, #12]
 80055f0:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 80055f4:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 80055f8:	d003      	beq.n	8005602 <__swsetup_r+0x7a>
 80055fa:	4621      	mov	r1, r4
 80055fc:	4628      	mov	r0, r5
 80055fe:	f000 fd45 	bl	800608c <__smakebuf_r>
 8005602:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005606:	f013 0201 	ands.w	r2, r3, #1
 800560a:	d00a      	beq.n	8005622 <__swsetup_r+0x9a>
 800560c:	2200      	movs	r2, #0
 800560e:	60a2      	str	r2, [r4, #8]
 8005610:	6962      	ldr	r2, [r4, #20]
 8005612:	4252      	negs	r2, r2
 8005614:	61a2      	str	r2, [r4, #24]
 8005616:	6922      	ldr	r2, [r4, #16]
 8005618:	b942      	cbnz	r2, 800562c <__swsetup_r+0xa4>
 800561a:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 800561e:	d1c5      	bne.n	80055ac <__swsetup_r+0x24>
 8005620:	bd38      	pop	{r3, r4, r5, pc}
 8005622:	0799      	lsls	r1, r3, #30
 8005624:	bf58      	it	pl
 8005626:	6962      	ldrpl	r2, [r4, #20]
 8005628:	60a2      	str	r2, [r4, #8]
 800562a:	e7f4      	b.n	8005616 <__swsetup_r+0x8e>
 800562c:	2000      	movs	r0, #0
 800562e:	e7f7      	b.n	8005620 <__swsetup_r+0x98>
 8005630:	20000088 	.word	0x20000088

08005634 <memset>:
 8005634:	4402      	add	r2, r0
 8005636:	4603      	mov	r3, r0
 8005638:	4293      	cmp	r3, r2
 800563a:	d100      	bne.n	800563e <memset+0xa>
 800563c:	4770      	bx	lr
 800563e:	f803 1b01 	strb.w	r1, [r3], #1
 8005642:	e7f9      	b.n	8005638 <memset+0x4>

08005644 <_close_r>:
 8005644:	b538      	push	{r3, r4, r5, lr}
 8005646:	4d06      	ldr	r5, [pc, #24]	@ (8005660 <_close_r+0x1c>)
 8005648:	2300      	movs	r3, #0
 800564a:	4604      	mov	r4, r0
 800564c:	4608      	mov	r0, r1
 800564e:	602b      	str	r3, [r5, #0]
 8005650:	f7fb fcf9 	bl	8001046 <_close>
 8005654:	1c43      	adds	r3, r0, #1
 8005656:	d102      	bne.n	800565e <_close_r+0x1a>
 8005658:	682b      	ldr	r3, [r5, #0]
 800565a:	b103      	cbz	r3, 800565e <_close_r+0x1a>
 800565c:	6023      	str	r3, [r4, #0]
 800565e:	bd38      	pop	{r3, r4, r5, pc}
 8005660:	200019a4 	.word	0x200019a4

08005664 <_lseek_r>:
 8005664:	b538      	push	{r3, r4, r5, lr}
 8005666:	4d07      	ldr	r5, [pc, #28]	@ (8005684 <_lseek_r+0x20>)
 8005668:	4604      	mov	r4, r0
 800566a:	4608      	mov	r0, r1
 800566c:	4611      	mov	r1, r2
 800566e:	2200      	movs	r2, #0
 8005670:	602a      	str	r2, [r5, #0]
 8005672:	461a      	mov	r2, r3
 8005674:	f7fb fd0e 	bl	8001094 <_lseek>
 8005678:	1c43      	adds	r3, r0, #1
 800567a:	d102      	bne.n	8005682 <_lseek_r+0x1e>
 800567c:	682b      	ldr	r3, [r5, #0]
 800567e:	b103      	cbz	r3, 8005682 <_lseek_r+0x1e>
 8005680:	6023      	str	r3, [r4, #0]
 8005682:	bd38      	pop	{r3, r4, r5, pc}
 8005684:	200019a4 	.word	0x200019a4

08005688 <_read_r>:
 8005688:	b538      	push	{r3, r4, r5, lr}
 800568a:	4d07      	ldr	r5, [pc, #28]	@ (80056a8 <_read_r+0x20>)
 800568c:	4604      	mov	r4, r0
 800568e:	4608      	mov	r0, r1
 8005690:	4611      	mov	r1, r2
 8005692:	2200      	movs	r2, #0
 8005694:	602a      	str	r2, [r5, #0]
 8005696:	461a      	mov	r2, r3
 8005698:	f7fb fc9c 	bl	8000fd4 <_read>
 800569c:	1c43      	adds	r3, r0, #1
 800569e:	d102      	bne.n	80056a6 <_read_r+0x1e>
 80056a0:	682b      	ldr	r3, [r5, #0]
 80056a2:	b103      	cbz	r3, 80056a6 <_read_r+0x1e>
 80056a4:	6023      	str	r3, [r4, #0]
 80056a6:	bd38      	pop	{r3, r4, r5, pc}
 80056a8:	200019a4 	.word	0x200019a4

080056ac <_write_r>:
 80056ac:	b538      	push	{r3, r4, r5, lr}
 80056ae:	4d07      	ldr	r5, [pc, #28]	@ (80056cc <_write_r+0x20>)
 80056b0:	4604      	mov	r4, r0
 80056b2:	4608      	mov	r0, r1
 80056b4:	4611      	mov	r1, r2
 80056b6:	2200      	movs	r2, #0
 80056b8:	602a      	str	r2, [r5, #0]
 80056ba:	461a      	mov	r2, r3
 80056bc:	f7fb fca7 	bl	800100e <_write>
 80056c0:	1c43      	adds	r3, r0, #1
 80056c2:	d102      	bne.n	80056ca <_write_r+0x1e>
 80056c4:	682b      	ldr	r3, [r5, #0]
 80056c6:	b103      	cbz	r3, 80056ca <_write_r+0x1e>
 80056c8:	6023      	str	r3, [r4, #0]
 80056ca:	bd38      	pop	{r3, r4, r5, pc}
 80056cc:	200019a4 	.word	0x200019a4

080056d0 <__errno>:
 80056d0:	4b01      	ldr	r3, [pc, #4]	@ (80056d8 <__errno+0x8>)
 80056d2:	6818      	ldr	r0, [r3, #0]
 80056d4:	4770      	bx	lr
 80056d6:	bf00      	nop
 80056d8:	20000088 	.word	0x20000088

080056dc <__libc_init_array>:
 80056dc:	b570      	push	{r4, r5, r6, lr}
 80056de:	4d0d      	ldr	r5, [pc, #52]	@ (8005714 <__libc_init_array+0x38>)
 80056e0:	4c0d      	ldr	r4, [pc, #52]	@ (8005718 <__libc_init_array+0x3c>)
 80056e2:	1b64      	subs	r4, r4, r5
 80056e4:	10a4      	asrs	r4, r4, #2
 80056e6:	2600      	movs	r6, #0
 80056e8:	42a6      	cmp	r6, r4
 80056ea:	d109      	bne.n	8005700 <__libc_init_array+0x24>
 80056ec:	4d0b      	ldr	r5, [pc, #44]	@ (800571c <__libc_init_array+0x40>)
 80056ee:	4c0c      	ldr	r4, [pc, #48]	@ (8005720 <__libc_init_array+0x44>)
 80056f0:	f000 fd98 	bl	8006224 <_init>
 80056f4:	1b64      	subs	r4, r4, r5
 80056f6:	10a4      	asrs	r4, r4, #2
 80056f8:	2600      	movs	r6, #0
 80056fa:	42a6      	cmp	r6, r4
 80056fc:	d105      	bne.n	800570a <__libc_init_array+0x2e>
 80056fe:	bd70      	pop	{r4, r5, r6, pc}
 8005700:	f855 3b04 	ldr.w	r3, [r5], #4
 8005704:	4798      	blx	r3
 8005706:	3601      	adds	r6, #1
 8005708:	e7ee      	b.n	80056e8 <__libc_init_array+0xc>
 800570a:	f855 3b04 	ldr.w	r3, [r5], #4
 800570e:	4798      	blx	r3
 8005710:	3601      	adds	r6, #1
 8005712:	e7f2      	b.n	80056fa <__libc_init_array+0x1e>
 8005714:	080074cc 	.word	0x080074cc
 8005718:	080074cc 	.word	0x080074cc
 800571c:	080074cc 	.word	0x080074cc
 8005720:	080074d0 	.word	0x080074d0

08005724 <__retarget_lock_init_recursive>:
 8005724:	4770      	bx	lr

08005726 <__retarget_lock_acquire_recursive>:
 8005726:	4770      	bx	lr

08005728 <__retarget_lock_release_recursive>:
 8005728:	4770      	bx	lr
	...

0800572c <_free_r>:
 800572c:	b538      	push	{r3, r4, r5, lr}
 800572e:	4605      	mov	r5, r0
 8005730:	2900      	cmp	r1, #0
 8005732:	d041      	beq.n	80057b8 <_free_r+0x8c>
 8005734:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8005738:	1f0c      	subs	r4, r1, #4
 800573a:	2b00      	cmp	r3, #0
 800573c:	bfb8      	it	lt
 800573e:	18e4      	addlt	r4, r4, r3
 8005740:	f000 f8e0 	bl	8005904 <__malloc_lock>
 8005744:	4a1d      	ldr	r2, [pc, #116]	@ (80057bc <_free_r+0x90>)
 8005746:	6813      	ldr	r3, [r2, #0]
 8005748:	b933      	cbnz	r3, 8005758 <_free_r+0x2c>
 800574a:	6063      	str	r3, [r4, #4]
 800574c:	6014      	str	r4, [r2, #0]
 800574e:	4628      	mov	r0, r5
 8005750:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8005754:	f000 b8dc 	b.w	8005910 <__malloc_unlock>
 8005758:	42a3      	cmp	r3, r4
 800575a:	d908      	bls.n	800576e <_free_r+0x42>
 800575c:	6820      	ldr	r0, [r4, #0]
 800575e:	1821      	adds	r1, r4, r0
 8005760:	428b      	cmp	r3, r1
 8005762:	bf01      	itttt	eq
 8005764:	6819      	ldreq	r1, [r3, #0]
 8005766:	685b      	ldreq	r3, [r3, #4]
 8005768:	1809      	addeq	r1, r1, r0
 800576a:	6021      	streq	r1, [r4, #0]
 800576c:	e7ed      	b.n	800574a <_free_r+0x1e>
 800576e:	461a      	mov	r2, r3
 8005770:	685b      	ldr	r3, [r3, #4]
 8005772:	b10b      	cbz	r3, 8005778 <_free_r+0x4c>
 8005774:	42a3      	cmp	r3, r4
 8005776:	d9fa      	bls.n	800576e <_free_r+0x42>
 8005778:	6811      	ldr	r1, [r2, #0]
 800577a:	1850      	adds	r0, r2, r1
 800577c:	42a0      	cmp	r0, r4
 800577e:	d10b      	bne.n	8005798 <_free_r+0x6c>
 8005780:	6820      	ldr	r0, [r4, #0]
 8005782:	4401      	add	r1, r0
 8005784:	1850      	adds	r0, r2, r1
 8005786:	4283      	cmp	r3, r0
 8005788:	6011      	str	r1, [r2, #0]
 800578a:	d1e0      	bne.n	800574e <_free_r+0x22>
 800578c:	6818      	ldr	r0, [r3, #0]
 800578e:	685b      	ldr	r3, [r3, #4]
 8005790:	6053      	str	r3, [r2, #4]
 8005792:	4408      	add	r0, r1
 8005794:	6010      	str	r0, [r2, #0]
 8005796:	e7da      	b.n	800574e <_free_r+0x22>
 8005798:	d902      	bls.n	80057a0 <_free_r+0x74>
 800579a:	230c      	movs	r3, #12
 800579c:	602b      	str	r3, [r5, #0]
 800579e:	e7d6      	b.n	800574e <_free_r+0x22>
 80057a0:	6820      	ldr	r0, [r4, #0]
 80057a2:	1821      	adds	r1, r4, r0
 80057a4:	428b      	cmp	r3, r1
 80057a6:	bf04      	itt	eq
 80057a8:	6819      	ldreq	r1, [r3, #0]
 80057aa:	685b      	ldreq	r3, [r3, #4]
 80057ac:	6063      	str	r3, [r4, #4]
 80057ae:	bf04      	itt	eq
 80057b0:	1809      	addeq	r1, r1, r0
 80057b2:	6021      	streq	r1, [r4, #0]
 80057b4:	6054      	str	r4, [r2, #4]
 80057b6:	e7ca      	b.n	800574e <_free_r+0x22>
 80057b8:	bd38      	pop	{r3, r4, r5, pc}
 80057ba:	bf00      	nop
 80057bc:	200019b0 	.word	0x200019b0

080057c0 <sbrk_aligned>:
 80057c0:	b570      	push	{r4, r5, r6, lr}
 80057c2:	4e0f      	ldr	r6, [pc, #60]	@ (8005800 <sbrk_aligned+0x40>)
 80057c4:	460c      	mov	r4, r1
 80057c6:	6831      	ldr	r1, [r6, #0]
 80057c8:	4605      	mov	r5, r0
 80057ca:	b911      	cbnz	r1, 80057d2 <sbrk_aligned+0x12>
 80057cc:	f000 fcd6 	bl	800617c <_sbrk_r>
 80057d0:	6030      	str	r0, [r6, #0]
 80057d2:	4621      	mov	r1, r4
 80057d4:	4628      	mov	r0, r5
 80057d6:	f000 fcd1 	bl	800617c <_sbrk_r>
 80057da:	1c43      	adds	r3, r0, #1
 80057dc:	d103      	bne.n	80057e6 <sbrk_aligned+0x26>
 80057de:	f04f 34ff 	mov.w	r4, #4294967295
 80057e2:	4620      	mov	r0, r4
 80057e4:	bd70      	pop	{r4, r5, r6, pc}
 80057e6:	1cc4      	adds	r4, r0, #3
 80057e8:	f024 0403 	bic.w	r4, r4, #3
 80057ec:	42a0      	cmp	r0, r4
 80057ee:	d0f8      	beq.n	80057e2 <sbrk_aligned+0x22>
 80057f0:	1a21      	subs	r1, r4, r0
 80057f2:	4628      	mov	r0, r5
 80057f4:	f000 fcc2 	bl	800617c <_sbrk_r>
 80057f8:	3001      	adds	r0, #1
 80057fa:	d1f2      	bne.n	80057e2 <sbrk_aligned+0x22>
 80057fc:	e7ef      	b.n	80057de <sbrk_aligned+0x1e>
 80057fe:	bf00      	nop
 8005800:	200019ac 	.word	0x200019ac

08005804 <_malloc_r>:
 8005804:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8005808:	1ccd      	adds	r5, r1, #3
 800580a:	f025 0503 	bic.w	r5, r5, #3
 800580e:	3508      	adds	r5, #8
 8005810:	2d0c      	cmp	r5, #12
 8005812:	bf38      	it	cc
 8005814:	250c      	movcc	r5, #12
 8005816:	2d00      	cmp	r5, #0
 8005818:	4606      	mov	r6, r0
 800581a:	db01      	blt.n	8005820 <_malloc_r+0x1c>
 800581c:	42a9      	cmp	r1, r5
 800581e:	d904      	bls.n	800582a <_malloc_r+0x26>
 8005820:	230c      	movs	r3, #12
 8005822:	6033      	str	r3, [r6, #0]
 8005824:	2000      	movs	r0, #0
 8005826:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800582a:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8005900 <_malloc_r+0xfc>
 800582e:	f000 f869 	bl	8005904 <__malloc_lock>
 8005832:	f8d8 3000 	ldr.w	r3, [r8]
 8005836:	461c      	mov	r4, r3
 8005838:	bb44      	cbnz	r4, 800588c <_malloc_r+0x88>
 800583a:	4629      	mov	r1, r5
 800583c:	4630      	mov	r0, r6
 800583e:	f7ff ffbf 	bl	80057c0 <sbrk_aligned>
 8005842:	1c43      	adds	r3, r0, #1
 8005844:	4604      	mov	r4, r0
 8005846:	d158      	bne.n	80058fa <_malloc_r+0xf6>
 8005848:	f8d8 4000 	ldr.w	r4, [r8]
 800584c:	4627      	mov	r7, r4
 800584e:	2f00      	cmp	r7, #0
 8005850:	d143      	bne.n	80058da <_malloc_r+0xd6>
 8005852:	2c00      	cmp	r4, #0
 8005854:	d04b      	beq.n	80058ee <_malloc_r+0xea>
 8005856:	6823      	ldr	r3, [r4, #0]
 8005858:	4639      	mov	r1, r7
 800585a:	4630      	mov	r0, r6
 800585c:	eb04 0903 	add.w	r9, r4, r3
 8005860:	f000 fc8c 	bl	800617c <_sbrk_r>
 8005864:	4581      	cmp	r9, r0
 8005866:	d142      	bne.n	80058ee <_malloc_r+0xea>
 8005868:	6821      	ldr	r1, [r4, #0]
 800586a:	1a6d      	subs	r5, r5, r1
 800586c:	4629      	mov	r1, r5
 800586e:	4630      	mov	r0, r6
 8005870:	f7ff ffa6 	bl	80057c0 <sbrk_aligned>
 8005874:	3001      	adds	r0, #1
 8005876:	d03a      	beq.n	80058ee <_malloc_r+0xea>
 8005878:	6823      	ldr	r3, [r4, #0]
 800587a:	442b      	add	r3, r5
 800587c:	6023      	str	r3, [r4, #0]
 800587e:	f8d8 3000 	ldr.w	r3, [r8]
 8005882:	685a      	ldr	r2, [r3, #4]
 8005884:	bb62      	cbnz	r2, 80058e0 <_malloc_r+0xdc>
 8005886:	f8c8 7000 	str.w	r7, [r8]
 800588a:	e00f      	b.n	80058ac <_malloc_r+0xa8>
 800588c:	6822      	ldr	r2, [r4, #0]
 800588e:	1b52      	subs	r2, r2, r5
 8005890:	d420      	bmi.n	80058d4 <_malloc_r+0xd0>
 8005892:	2a0b      	cmp	r2, #11
 8005894:	d917      	bls.n	80058c6 <_malloc_r+0xc2>
 8005896:	1961      	adds	r1, r4, r5
 8005898:	42a3      	cmp	r3, r4
 800589a:	6025      	str	r5, [r4, #0]
 800589c:	bf18      	it	ne
 800589e:	6059      	strne	r1, [r3, #4]
 80058a0:	6863      	ldr	r3, [r4, #4]
 80058a2:	bf08      	it	eq
 80058a4:	f8c8 1000 	streq.w	r1, [r8]
 80058a8:	5162      	str	r2, [r4, r5]
 80058aa:	604b      	str	r3, [r1, #4]
 80058ac:	4630      	mov	r0, r6
 80058ae:	f000 f82f 	bl	8005910 <__malloc_unlock>
 80058b2:	f104 000b 	add.w	r0, r4, #11
 80058b6:	1d23      	adds	r3, r4, #4
 80058b8:	f020 0007 	bic.w	r0, r0, #7
 80058bc:	1ac2      	subs	r2, r0, r3
 80058be:	bf1c      	itt	ne
 80058c0:	1a1b      	subne	r3, r3, r0
 80058c2:	50a3      	strne	r3, [r4, r2]
 80058c4:	e7af      	b.n	8005826 <_malloc_r+0x22>
 80058c6:	6862      	ldr	r2, [r4, #4]
 80058c8:	42a3      	cmp	r3, r4
 80058ca:	bf0c      	ite	eq
 80058cc:	f8c8 2000 	streq.w	r2, [r8]
 80058d0:	605a      	strne	r2, [r3, #4]
 80058d2:	e7eb      	b.n	80058ac <_malloc_r+0xa8>
 80058d4:	4623      	mov	r3, r4
 80058d6:	6864      	ldr	r4, [r4, #4]
 80058d8:	e7ae      	b.n	8005838 <_malloc_r+0x34>
 80058da:	463c      	mov	r4, r7
 80058dc:	687f      	ldr	r7, [r7, #4]
 80058de:	e7b6      	b.n	800584e <_malloc_r+0x4a>
 80058e0:	461a      	mov	r2, r3
 80058e2:	685b      	ldr	r3, [r3, #4]
 80058e4:	42a3      	cmp	r3, r4
 80058e6:	d1fb      	bne.n	80058e0 <_malloc_r+0xdc>
 80058e8:	2300      	movs	r3, #0
 80058ea:	6053      	str	r3, [r2, #4]
 80058ec:	e7de      	b.n	80058ac <_malloc_r+0xa8>
 80058ee:	230c      	movs	r3, #12
 80058f0:	6033      	str	r3, [r6, #0]
 80058f2:	4630      	mov	r0, r6
 80058f4:	f000 f80c 	bl	8005910 <__malloc_unlock>
 80058f8:	e794      	b.n	8005824 <_malloc_r+0x20>
 80058fa:	6005      	str	r5, [r0, #0]
 80058fc:	e7d6      	b.n	80058ac <_malloc_r+0xa8>
 80058fe:	bf00      	nop
 8005900:	200019b0 	.word	0x200019b0

08005904 <__malloc_lock>:
 8005904:	4801      	ldr	r0, [pc, #4]	@ (800590c <__malloc_lock+0x8>)
 8005906:	f7ff bf0e 	b.w	8005726 <__retarget_lock_acquire_recursive>
 800590a:	bf00      	nop
 800590c:	200019a8 	.word	0x200019a8

08005910 <__malloc_unlock>:
 8005910:	4801      	ldr	r0, [pc, #4]	@ (8005918 <__malloc_unlock+0x8>)
 8005912:	f7ff bf09 	b.w	8005728 <__retarget_lock_release_recursive>
 8005916:	bf00      	nop
 8005918:	200019a8 	.word	0x200019a8

0800591c <__ssputs_r>:
 800591c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005920:	688e      	ldr	r6, [r1, #8]
 8005922:	461f      	mov	r7, r3
 8005924:	42be      	cmp	r6, r7
 8005926:	680b      	ldr	r3, [r1, #0]
 8005928:	4682      	mov	sl, r0
 800592a:	460c      	mov	r4, r1
 800592c:	4690      	mov	r8, r2
 800592e:	d82d      	bhi.n	800598c <__ssputs_r+0x70>
 8005930:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005934:	f412 6f90 	tst.w	r2, #1152	@ 0x480
 8005938:	d026      	beq.n	8005988 <__ssputs_r+0x6c>
 800593a:	6965      	ldr	r5, [r4, #20]
 800593c:	6909      	ldr	r1, [r1, #16]
 800593e:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8005942:	eba3 0901 	sub.w	r9, r3, r1
 8005946:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800594a:	1c7b      	adds	r3, r7, #1
 800594c:	444b      	add	r3, r9
 800594e:	106d      	asrs	r5, r5, #1
 8005950:	429d      	cmp	r5, r3
 8005952:	bf38      	it	cc
 8005954:	461d      	movcc	r5, r3
 8005956:	0553      	lsls	r3, r2, #21
 8005958:	d527      	bpl.n	80059aa <__ssputs_r+0x8e>
 800595a:	4629      	mov	r1, r5
 800595c:	f7ff ff52 	bl	8005804 <_malloc_r>
 8005960:	4606      	mov	r6, r0
 8005962:	b360      	cbz	r0, 80059be <__ssputs_r+0xa2>
 8005964:	6921      	ldr	r1, [r4, #16]
 8005966:	464a      	mov	r2, r9
 8005968:	f000 fc18 	bl	800619c <memcpy>
 800596c:	89a3      	ldrh	r3, [r4, #12]
 800596e:	f423 6390 	bic.w	r3, r3, #1152	@ 0x480
 8005972:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8005976:	81a3      	strh	r3, [r4, #12]
 8005978:	6126      	str	r6, [r4, #16]
 800597a:	6165      	str	r5, [r4, #20]
 800597c:	444e      	add	r6, r9
 800597e:	eba5 0509 	sub.w	r5, r5, r9
 8005982:	6026      	str	r6, [r4, #0]
 8005984:	60a5      	str	r5, [r4, #8]
 8005986:	463e      	mov	r6, r7
 8005988:	42be      	cmp	r6, r7
 800598a:	d900      	bls.n	800598e <__ssputs_r+0x72>
 800598c:	463e      	mov	r6, r7
 800598e:	6820      	ldr	r0, [r4, #0]
 8005990:	4632      	mov	r2, r6
 8005992:	4641      	mov	r1, r8
 8005994:	f000 fbb6 	bl	8006104 <memmove>
 8005998:	68a3      	ldr	r3, [r4, #8]
 800599a:	1b9b      	subs	r3, r3, r6
 800599c:	60a3      	str	r3, [r4, #8]
 800599e:	6823      	ldr	r3, [r4, #0]
 80059a0:	4433      	add	r3, r6
 80059a2:	6023      	str	r3, [r4, #0]
 80059a4:	2000      	movs	r0, #0
 80059a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80059aa:	462a      	mov	r2, r5
 80059ac:	f000 fc04 	bl	80061b8 <_realloc_r>
 80059b0:	4606      	mov	r6, r0
 80059b2:	2800      	cmp	r0, #0
 80059b4:	d1e0      	bne.n	8005978 <__ssputs_r+0x5c>
 80059b6:	6921      	ldr	r1, [r4, #16]
 80059b8:	4650      	mov	r0, sl
 80059ba:	f7ff feb7 	bl	800572c <_free_r>
 80059be:	230c      	movs	r3, #12
 80059c0:	f8ca 3000 	str.w	r3, [sl]
 80059c4:	89a3      	ldrh	r3, [r4, #12]
 80059c6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80059ca:	81a3      	strh	r3, [r4, #12]
 80059cc:	f04f 30ff 	mov.w	r0, #4294967295
 80059d0:	e7e9      	b.n	80059a6 <__ssputs_r+0x8a>
	...

080059d4 <_svfiprintf_r>:
 80059d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80059d8:	4698      	mov	r8, r3
 80059da:	898b      	ldrh	r3, [r1, #12]
 80059dc:	061b      	lsls	r3, r3, #24
 80059de:	b09d      	sub	sp, #116	@ 0x74
 80059e0:	4607      	mov	r7, r0
 80059e2:	460d      	mov	r5, r1
 80059e4:	4614      	mov	r4, r2
 80059e6:	d510      	bpl.n	8005a0a <_svfiprintf_r+0x36>
 80059e8:	690b      	ldr	r3, [r1, #16]
 80059ea:	b973      	cbnz	r3, 8005a0a <_svfiprintf_r+0x36>
 80059ec:	2140      	movs	r1, #64	@ 0x40
 80059ee:	f7ff ff09 	bl	8005804 <_malloc_r>
 80059f2:	6028      	str	r0, [r5, #0]
 80059f4:	6128      	str	r0, [r5, #16]
 80059f6:	b930      	cbnz	r0, 8005a06 <_svfiprintf_r+0x32>
 80059f8:	230c      	movs	r3, #12
 80059fa:	603b      	str	r3, [r7, #0]
 80059fc:	f04f 30ff 	mov.w	r0, #4294967295
 8005a00:	b01d      	add	sp, #116	@ 0x74
 8005a02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005a06:	2340      	movs	r3, #64	@ 0x40
 8005a08:	616b      	str	r3, [r5, #20]
 8005a0a:	2300      	movs	r3, #0
 8005a0c:	9309      	str	r3, [sp, #36]	@ 0x24
 8005a0e:	2320      	movs	r3, #32
 8005a10:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8005a14:	f8cd 800c 	str.w	r8, [sp, #12]
 8005a18:	2330      	movs	r3, #48	@ 0x30
 8005a1a:	f8df 819c 	ldr.w	r8, [pc, #412]	@ 8005bb8 <_svfiprintf_r+0x1e4>
 8005a1e:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8005a22:	f04f 0901 	mov.w	r9, #1
 8005a26:	4623      	mov	r3, r4
 8005a28:	469a      	mov	sl, r3
 8005a2a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005a2e:	b10a      	cbz	r2, 8005a34 <_svfiprintf_r+0x60>
 8005a30:	2a25      	cmp	r2, #37	@ 0x25
 8005a32:	d1f9      	bne.n	8005a28 <_svfiprintf_r+0x54>
 8005a34:	ebba 0b04 	subs.w	fp, sl, r4
 8005a38:	d00b      	beq.n	8005a52 <_svfiprintf_r+0x7e>
 8005a3a:	465b      	mov	r3, fp
 8005a3c:	4622      	mov	r2, r4
 8005a3e:	4629      	mov	r1, r5
 8005a40:	4638      	mov	r0, r7
 8005a42:	f7ff ff6b 	bl	800591c <__ssputs_r>
 8005a46:	3001      	adds	r0, #1
 8005a48:	f000 80a7 	beq.w	8005b9a <_svfiprintf_r+0x1c6>
 8005a4c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005a4e:	445a      	add	r2, fp
 8005a50:	9209      	str	r2, [sp, #36]	@ 0x24
 8005a52:	f89a 3000 	ldrb.w	r3, [sl]
 8005a56:	2b00      	cmp	r3, #0
 8005a58:	f000 809f 	beq.w	8005b9a <_svfiprintf_r+0x1c6>
 8005a5c:	2300      	movs	r3, #0
 8005a5e:	f04f 32ff 	mov.w	r2, #4294967295
 8005a62:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8005a66:	f10a 0a01 	add.w	sl, sl, #1
 8005a6a:	9304      	str	r3, [sp, #16]
 8005a6c:	9307      	str	r3, [sp, #28]
 8005a6e:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8005a72:	931a      	str	r3, [sp, #104]	@ 0x68
 8005a74:	4654      	mov	r4, sl
 8005a76:	2205      	movs	r2, #5
 8005a78:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005a7c:	484e      	ldr	r0, [pc, #312]	@ (8005bb8 <_svfiprintf_r+0x1e4>)
 8005a7e:	f7fa fbaf 	bl	80001e0 <memchr>
 8005a82:	9a04      	ldr	r2, [sp, #16]
 8005a84:	b9d8      	cbnz	r0, 8005abe <_svfiprintf_r+0xea>
 8005a86:	06d0      	lsls	r0, r2, #27
 8005a88:	bf44      	itt	mi
 8005a8a:	2320      	movmi	r3, #32
 8005a8c:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005a90:	0711      	lsls	r1, r2, #28
 8005a92:	bf44      	itt	mi
 8005a94:	232b      	movmi	r3, #43	@ 0x2b
 8005a96:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 8005a9a:	f89a 3000 	ldrb.w	r3, [sl]
 8005a9e:	2b2a      	cmp	r3, #42	@ 0x2a
 8005aa0:	d015      	beq.n	8005ace <_svfiprintf_r+0xfa>
 8005aa2:	9a07      	ldr	r2, [sp, #28]
 8005aa4:	4654      	mov	r4, sl
 8005aa6:	2000      	movs	r0, #0
 8005aa8:	f04f 0c0a 	mov.w	ip, #10
 8005aac:	4621      	mov	r1, r4
 8005aae:	f811 3b01 	ldrb.w	r3, [r1], #1
 8005ab2:	3b30      	subs	r3, #48	@ 0x30
 8005ab4:	2b09      	cmp	r3, #9
 8005ab6:	d94b      	bls.n	8005b50 <_svfiprintf_r+0x17c>
 8005ab8:	b1b0      	cbz	r0, 8005ae8 <_svfiprintf_r+0x114>
 8005aba:	9207      	str	r2, [sp, #28]
 8005abc:	e014      	b.n	8005ae8 <_svfiprintf_r+0x114>
 8005abe:	eba0 0308 	sub.w	r3, r0, r8
 8005ac2:	fa09 f303 	lsl.w	r3, r9, r3
 8005ac6:	4313      	orrs	r3, r2
 8005ac8:	9304      	str	r3, [sp, #16]
 8005aca:	46a2      	mov	sl, r4
 8005acc:	e7d2      	b.n	8005a74 <_svfiprintf_r+0xa0>
 8005ace:	9b03      	ldr	r3, [sp, #12]
 8005ad0:	1d19      	adds	r1, r3, #4
 8005ad2:	681b      	ldr	r3, [r3, #0]
 8005ad4:	9103      	str	r1, [sp, #12]
 8005ad6:	2b00      	cmp	r3, #0
 8005ad8:	bfbb      	ittet	lt
 8005ada:	425b      	neglt	r3, r3
 8005adc:	f042 0202 	orrlt.w	r2, r2, #2
 8005ae0:	9307      	strge	r3, [sp, #28]
 8005ae2:	9307      	strlt	r3, [sp, #28]
 8005ae4:	bfb8      	it	lt
 8005ae6:	9204      	strlt	r2, [sp, #16]
 8005ae8:	7823      	ldrb	r3, [r4, #0]
 8005aea:	2b2e      	cmp	r3, #46	@ 0x2e
 8005aec:	d10a      	bne.n	8005b04 <_svfiprintf_r+0x130>
 8005aee:	7863      	ldrb	r3, [r4, #1]
 8005af0:	2b2a      	cmp	r3, #42	@ 0x2a
 8005af2:	d132      	bne.n	8005b5a <_svfiprintf_r+0x186>
 8005af4:	9b03      	ldr	r3, [sp, #12]
 8005af6:	1d1a      	adds	r2, r3, #4
 8005af8:	681b      	ldr	r3, [r3, #0]
 8005afa:	9203      	str	r2, [sp, #12]
 8005afc:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 8005b00:	3402      	adds	r4, #2
 8005b02:	9305      	str	r3, [sp, #20]
 8005b04:	f8df a0c0 	ldr.w	sl, [pc, #192]	@ 8005bc8 <_svfiprintf_r+0x1f4>
 8005b08:	7821      	ldrb	r1, [r4, #0]
 8005b0a:	2203      	movs	r2, #3
 8005b0c:	4650      	mov	r0, sl
 8005b0e:	f7fa fb67 	bl	80001e0 <memchr>
 8005b12:	b138      	cbz	r0, 8005b24 <_svfiprintf_r+0x150>
 8005b14:	9b04      	ldr	r3, [sp, #16]
 8005b16:	eba0 000a 	sub.w	r0, r0, sl
 8005b1a:	2240      	movs	r2, #64	@ 0x40
 8005b1c:	4082      	lsls	r2, r0
 8005b1e:	4313      	orrs	r3, r2
 8005b20:	3401      	adds	r4, #1
 8005b22:	9304      	str	r3, [sp, #16]
 8005b24:	f814 1b01 	ldrb.w	r1, [r4], #1
 8005b28:	4824      	ldr	r0, [pc, #144]	@ (8005bbc <_svfiprintf_r+0x1e8>)
 8005b2a:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 8005b2e:	2206      	movs	r2, #6
 8005b30:	f7fa fb56 	bl	80001e0 <memchr>
 8005b34:	2800      	cmp	r0, #0
 8005b36:	d036      	beq.n	8005ba6 <_svfiprintf_r+0x1d2>
 8005b38:	4b21      	ldr	r3, [pc, #132]	@ (8005bc0 <_svfiprintf_r+0x1ec>)
 8005b3a:	bb1b      	cbnz	r3, 8005b84 <_svfiprintf_r+0x1b0>
 8005b3c:	9b03      	ldr	r3, [sp, #12]
 8005b3e:	3307      	adds	r3, #7
 8005b40:	f023 0307 	bic.w	r3, r3, #7
 8005b44:	3308      	adds	r3, #8
 8005b46:	9303      	str	r3, [sp, #12]
 8005b48:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005b4a:	4433      	add	r3, r6
 8005b4c:	9309      	str	r3, [sp, #36]	@ 0x24
 8005b4e:	e76a      	b.n	8005a26 <_svfiprintf_r+0x52>
 8005b50:	fb0c 3202 	mla	r2, ip, r2, r3
 8005b54:	460c      	mov	r4, r1
 8005b56:	2001      	movs	r0, #1
 8005b58:	e7a8      	b.n	8005aac <_svfiprintf_r+0xd8>
 8005b5a:	2300      	movs	r3, #0
 8005b5c:	3401      	adds	r4, #1
 8005b5e:	9305      	str	r3, [sp, #20]
 8005b60:	4619      	mov	r1, r3
 8005b62:	f04f 0c0a 	mov.w	ip, #10
 8005b66:	4620      	mov	r0, r4
 8005b68:	f810 2b01 	ldrb.w	r2, [r0], #1
 8005b6c:	3a30      	subs	r2, #48	@ 0x30
 8005b6e:	2a09      	cmp	r2, #9
 8005b70:	d903      	bls.n	8005b7a <_svfiprintf_r+0x1a6>
 8005b72:	2b00      	cmp	r3, #0
 8005b74:	d0c6      	beq.n	8005b04 <_svfiprintf_r+0x130>
 8005b76:	9105      	str	r1, [sp, #20]
 8005b78:	e7c4      	b.n	8005b04 <_svfiprintf_r+0x130>
 8005b7a:	fb0c 2101 	mla	r1, ip, r1, r2
 8005b7e:	4604      	mov	r4, r0
 8005b80:	2301      	movs	r3, #1
 8005b82:	e7f0      	b.n	8005b66 <_svfiprintf_r+0x192>
 8005b84:	ab03      	add	r3, sp, #12
 8005b86:	9300      	str	r3, [sp, #0]
 8005b88:	462a      	mov	r2, r5
 8005b8a:	4b0e      	ldr	r3, [pc, #56]	@ (8005bc4 <_svfiprintf_r+0x1f0>)
 8005b8c:	a904      	add	r1, sp, #16
 8005b8e:	4638      	mov	r0, r7
 8005b90:	f3af 8000 	nop.w
 8005b94:	1c42      	adds	r2, r0, #1
 8005b96:	4606      	mov	r6, r0
 8005b98:	d1d6      	bne.n	8005b48 <_svfiprintf_r+0x174>
 8005b9a:	89ab      	ldrh	r3, [r5, #12]
 8005b9c:	065b      	lsls	r3, r3, #25
 8005b9e:	f53f af2d 	bmi.w	80059fc <_svfiprintf_r+0x28>
 8005ba2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005ba4:	e72c      	b.n	8005a00 <_svfiprintf_r+0x2c>
 8005ba6:	ab03      	add	r3, sp, #12
 8005ba8:	9300      	str	r3, [sp, #0]
 8005baa:	462a      	mov	r2, r5
 8005bac:	4b05      	ldr	r3, [pc, #20]	@ (8005bc4 <_svfiprintf_r+0x1f0>)
 8005bae:	a904      	add	r1, sp, #16
 8005bb0:	4638      	mov	r0, r7
 8005bb2:	f000 f879 	bl	8005ca8 <_printf_i>
 8005bb6:	e7ed      	b.n	8005b94 <_svfiprintf_r+0x1c0>
 8005bb8:	08007491 	.word	0x08007491
 8005bbc:	0800749b 	.word	0x0800749b
 8005bc0:	00000000 	.word	0x00000000
 8005bc4:	0800591d 	.word	0x0800591d
 8005bc8:	08007497 	.word	0x08007497

08005bcc <_printf_common>:
 8005bcc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8005bd0:	4616      	mov	r6, r2
 8005bd2:	4698      	mov	r8, r3
 8005bd4:	688a      	ldr	r2, [r1, #8]
 8005bd6:	690b      	ldr	r3, [r1, #16]
 8005bd8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005bdc:	4293      	cmp	r3, r2
 8005bde:	bfb8      	it	lt
 8005be0:	4613      	movlt	r3, r2
 8005be2:	6033      	str	r3, [r6, #0]
 8005be4:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8005be8:	4607      	mov	r7, r0
 8005bea:	460c      	mov	r4, r1
 8005bec:	b10a      	cbz	r2, 8005bf2 <_printf_common+0x26>
 8005bee:	3301      	adds	r3, #1
 8005bf0:	6033      	str	r3, [r6, #0]
 8005bf2:	6823      	ldr	r3, [r4, #0]
 8005bf4:	0699      	lsls	r1, r3, #26
 8005bf6:	bf42      	ittt	mi
 8005bf8:	6833      	ldrmi	r3, [r6, #0]
 8005bfa:	3302      	addmi	r3, #2
 8005bfc:	6033      	strmi	r3, [r6, #0]
 8005bfe:	6825      	ldr	r5, [r4, #0]
 8005c00:	f015 0506 	ands.w	r5, r5, #6
 8005c04:	d106      	bne.n	8005c14 <_printf_common+0x48>
 8005c06:	f104 0a19 	add.w	sl, r4, #25
 8005c0a:	68e3      	ldr	r3, [r4, #12]
 8005c0c:	6832      	ldr	r2, [r6, #0]
 8005c0e:	1a9b      	subs	r3, r3, r2
 8005c10:	42ab      	cmp	r3, r5
 8005c12:	dc26      	bgt.n	8005c62 <_printf_common+0x96>
 8005c14:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8005c18:	6822      	ldr	r2, [r4, #0]
 8005c1a:	3b00      	subs	r3, #0
 8005c1c:	bf18      	it	ne
 8005c1e:	2301      	movne	r3, #1
 8005c20:	0692      	lsls	r2, r2, #26
 8005c22:	d42b      	bmi.n	8005c7c <_printf_common+0xb0>
 8005c24:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8005c28:	4641      	mov	r1, r8
 8005c2a:	4638      	mov	r0, r7
 8005c2c:	47c8      	blx	r9
 8005c2e:	3001      	adds	r0, #1
 8005c30:	d01e      	beq.n	8005c70 <_printf_common+0xa4>
 8005c32:	6823      	ldr	r3, [r4, #0]
 8005c34:	6922      	ldr	r2, [r4, #16]
 8005c36:	f003 0306 	and.w	r3, r3, #6
 8005c3a:	2b04      	cmp	r3, #4
 8005c3c:	bf02      	ittt	eq
 8005c3e:	68e5      	ldreq	r5, [r4, #12]
 8005c40:	6833      	ldreq	r3, [r6, #0]
 8005c42:	1aed      	subeq	r5, r5, r3
 8005c44:	68a3      	ldr	r3, [r4, #8]
 8005c46:	bf0c      	ite	eq
 8005c48:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8005c4c:	2500      	movne	r5, #0
 8005c4e:	4293      	cmp	r3, r2
 8005c50:	bfc4      	itt	gt
 8005c52:	1a9b      	subgt	r3, r3, r2
 8005c54:	18ed      	addgt	r5, r5, r3
 8005c56:	2600      	movs	r6, #0
 8005c58:	341a      	adds	r4, #26
 8005c5a:	42b5      	cmp	r5, r6
 8005c5c:	d11a      	bne.n	8005c94 <_printf_common+0xc8>
 8005c5e:	2000      	movs	r0, #0
 8005c60:	e008      	b.n	8005c74 <_printf_common+0xa8>
 8005c62:	2301      	movs	r3, #1
 8005c64:	4652      	mov	r2, sl
 8005c66:	4641      	mov	r1, r8
 8005c68:	4638      	mov	r0, r7
 8005c6a:	47c8      	blx	r9
 8005c6c:	3001      	adds	r0, #1
 8005c6e:	d103      	bne.n	8005c78 <_printf_common+0xac>
 8005c70:	f04f 30ff 	mov.w	r0, #4294967295
 8005c74:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005c78:	3501      	adds	r5, #1
 8005c7a:	e7c6      	b.n	8005c0a <_printf_common+0x3e>
 8005c7c:	18e1      	adds	r1, r4, r3
 8005c7e:	1c5a      	adds	r2, r3, #1
 8005c80:	2030      	movs	r0, #48	@ 0x30
 8005c82:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 8005c86:	4422      	add	r2, r4
 8005c88:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 8005c8c:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 8005c90:	3302      	adds	r3, #2
 8005c92:	e7c7      	b.n	8005c24 <_printf_common+0x58>
 8005c94:	2301      	movs	r3, #1
 8005c96:	4622      	mov	r2, r4
 8005c98:	4641      	mov	r1, r8
 8005c9a:	4638      	mov	r0, r7
 8005c9c:	47c8      	blx	r9
 8005c9e:	3001      	adds	r0, #1
 8005ca0:	d0e6      	beq.n	8005c70 <_printf_common+0xa4>
 8005ca2:	3601      	adds	r6, #1
 8005ca4:	e7d9      	b.n	8005c5a <_printf_common+0x8e>
	...

08005ca8 <_printf_i>:
 8005ca8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8005cac:	7e0f      	ldrb	r7, [r1, #24]
 8005cae:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 8005cb0:	2f78      	cmp	r7, #120	@ 0x78
 8005cb2:	4691      	mov	r9, r2
 8005cb4:	4680      	mov	r8, r0
 8005cb6:	460c      	mov	r4, r1
 8005cb8:	469a      	mov	sl, r3
 8005cba:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 8005cbe:	d807      	bhi.n	8005cd0 <_printf_i+0x28>
 8005cc0:	2f62      	cmp	r7, #98	@ 0x62
 8005cc2:	d80a      	bhi.n	8005cda <_printf_i+0x32>
 8005cc4:	2f00      	cmp	r7, #0
 8005cc6:	f000 80d2 	beq.w	8005e6e <_printf_i+0x1c6>
 8005cca:	2f58      	cmp	r7, #88	@ 0x58
 8005ccc:	f000 80b9 	beq.w	8005e42 <_printf_i+0x19a>
 8005cd0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005cd4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 8005cd8:	e03a      	b.n	8005d50 <_printf_i+0xa8>
 8005cda:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 8005cde:	2b15      	cmp	r3, #21
 8005ce0:	d8f6      	bhi.n	8005cd0 <_printf_i+0x28>
 8005ce2:	a101      	add	r1, pc, #4	@ (adr r1, 8005ce8 <_printf_i+0x40>)
 8005ce4:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8005ce8:	08005d41 	.word	0x08005d41
 8005cec:	08005d55 	.word	0x08005d55
 8005cf0:	08005cd1 	.word	0x08005cd1
 8005cf4:	08005cd1 	.word	0x08005cd1
 8005cf8:	08005cd1 	.word	0x08005cd1
 8005cfc:	08005cd1 	.word	0x08005cd1
 8005d00:	08005d55 	.word	0x08005d55
 8005d04:	08005cd1 	.word	0x08005cd1
 8005d08:	08005cd1 	.word	0x08005cd1
 8005d0c:	08005cd1 	.word	0x08005cd1
 8005d10:	08005cd1 	.word	0x08005cd1
 8005d14:	08005e55 	.word	0x08005e55
 8005d18:	08005d7f 	.word	0x08005d7f
 8005d1c:	08005e0f 	.word	0x08005e0f
 8005d20:	08005cd1 	.word	0x08005cd1
 8005d24:	08005cd1 	.word	0x08005cd1
 8005d28:	08005e77 	.word	0x08005e77
 8005d2c:	08005cd1 	.word	0x08005cd1
 8005d30:	08005d7f 	.word	0x08005d7f
 8005d34:	08005cd1 	.word	0x08005cd1
 8005d38:	08005cd1 	.word	0x08005cd1
 8005d3c:	08005e17 	.word	0x08005e17
 8005d40:	6833      	ldr	r3, [r6, #0]
 8005d42:	1d1a      	adds	r2, r3, #4
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	6032      	str	r2, [r6, #0]
 8005d48:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 8005d4c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8005d50:	2301      	movs	r3, #1
 8005d52:	e09d      	b.n	8005e90 <_printf_i+0x1e8>
 8005d54:	6833      	ldr	r3, [r6, #0]
 8005d56:	6820      	ldr	r0, [r4, #0]
 8005d58:	1d19      	adds	r1, r3, #4
 8005d5a:	6031      	str	r1, [r6, #0]
 8005d5c:	0606      	lsls	r6, r0, #24
 8005d5e:	d501      	bpl.n	8005d64 <_printf_i+0xbc>
 8005d60:	681d      	ldr	r5, [r3, #0]
 8005d62:	e003      	b.n	8005d6c <_printf_i+0xc4>
 8005d64:	0645      	lsls	r5, r0, #25
 8005d66:	d5fb      	bpl.n	8005d60 <_printf_i+0xb8>
 8005d68:	f9b3 5000 	ldrsh.w	r5, [r3]
 8005d6c:	2d00      	cmp	r5, #0
 8005d6e:	da03      	bge.n	8005d78 <_printf_i+0xd0>
 8005d70:	232d      	movs	r3, #45	@ 0x2d
 8005d72:	426d      	negs	r5, r5
 8005d74:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005d78:	4859      	ldr	r0, [pc, #356]	@ (8005ee0 <_printf_i+0x238>)
 8005d7a:	230a      	movs	r3, #10
 8005d7c:	e011      	b.n	8005da2 <_printf_i+0xfa>
 8005d7e:	6821      	ldr	r1, [r4, #0]
 8005d80:	6833      	ldr	r3, [r6, #0]
 8005d82:	0608      	lsls	r0, r1, #24
 8005d84:	f853 5b04 	ldr.w	r5, [r3], #4
 8005d88:	d402      	bmi.n	8005d90 <_printf_i+0xe8>
 8005d8a:	0649      	lsls	r1, r1, #25
 8005d8c:	bf48      	it	mi
 8005d8e:	b2ad      	uxthmi	r5, r5
 8005d90:	2f6f      	cmp	r7, #111	@ 0x6f
 8005d92:	4853      	ldr	r0, [pc, #332]	@ (8005ee0 <_printf_i+0x238>)
 8005d94:	6033      	str	r3, [r6, #0]
 8005d96:	bf14      	ite	ne
 8005d98:	230a      	movne	r3, #10
 8005d9a:	2308      	moveq	r3, #8
 8005d9c:	2100      	movs	r1, #0
 8005d9e:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 8005da2:	6866      	ldr	r6, [r4, #4]
 8005da4:	60a6      	str	r6, [r4, #8]
 8005da6:	2e00      	cmp	r6, #0
 8005da8:	bfa2      	ittt	ge
 8005daa:	6821      	ldrge	r1, [r4, #0]
 8005dac:	f021 0104 	bicge.w	r1, r1, #4
 8005db0:	6021      	strge	r1, [r4, #0]
 8005db2:	b90d      	cbnz	r5, 8005db8 <_printf_i+0x110>
 8005db4:	2e00      	cmp	r6, #0
 8005db6:	d04b      	beq.n	8005e50 <_printf_i+0x1a8>
 8005db8:	4616      	mov	r6, r2
 8005dba:	fbb5 f1f3 	udiv	r1, r5, r3
 8005dbe:	fb03 5711 	mls	r7, r3, r1, r5
 8005dc2:	5dc7      	ldrb	r7, [r0, r7]
 8005dc4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8005dc8:	462f      	mov	r7, r5
 8005dca:	42bb      	cmp	r3, r7
 8005dcc:	460d      	mov	r5, r1
 8005dce:	d9f4      	bls.n	8005dba <_printf_i+0x112>
 8005dd0:	2b08      	cmp	r3, #8
 8005dd2:	d10b      	bne.n	8005dec <_printf_i+0x144>
 8005dd4:	6823      	ldr	r3, [r4, #0]
 8005dd6:	07df      	lsls	r7, r3, #31
 8005dd8:	d508      	bpl.n	8005dec <_printf_i+0x144>
 8005dda:	6923      	ldr	r3, [r4, #16]
 8005ddc:	6861      	ldr	r1, [r4, #4]
 8005dde:	4299      	cmp	r1, r3
 8005de0:	bfde      	ittt	le
 8005de2:	2330      	movle	r3, #48	@ 0x30
 8005de4:	f806 3c01 	strble.w	r3, [r6, #-1]
 8005de8:	f106 36ff 	addle.w	r6, r6, #4294967295
 8005dec:	1b92      	subs	r2, r2, r6
 8005dee:	6122      	str	r2, [r4, #16]
 8005df0:	f8cd a000 	str.w	sl, [sp]
 8005df4:	464b      	mov	r3, r9
 8005df6:	aa03      	add	r2, sp, #12
 8005df8:	4621      	mov	r1, r4
 8005dfa:	4640      	mov	r0, r8
 8005dfc:	f7ff fee6 	bl	8005bcc <_printf_common>
 8005e00:	3001      	adds	r0, #1
 8005e02:	d14a      	bne.n	8005e9a <_printf_i+0x1f2>
 8005e04:	f04f 30ff 	mov.w	r0, #4294967295
 8005e08:	b004      	add	sp, #16
 8005e0a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8005e0e:	6823      	ldr	r3, [r4, #0]
 8005e10:	f043 0320 	orr.w	r3, r3, #32
 8005e14:	6023      	str	r3, [r4, #0]
 8005e16:	4833      	ldr	r0, [pc, #204]	@ (8005ee4 <_printf_i+0x23c>)
 8005e18:	2778      	movs	r7, #120	@ 0x78
 8005e1a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8005e1e:	6823      	ldr	r3, [r4, #0]
 8005e20:	6831      	ldr	r1, [r6, #0]
 8005e22:	061f      	lsls	r7, r3, #24
 8005e24:	f851 5b04 	ldr.w	r5, [r1], #4
 8005e28:	d402      	bmi.n	8005e30 <_printf_i+0x188>
 8005e2a:	065f      	lsls	r7, r3, #25
 8005e2c:	bf48      	it	mi
 8005e2e:	b2ad      	uxthmi	r5, r5
 8005e30:	6031      	str	r1, [r6, #0]
 8005e32:	07d9      	lsls	r1, r3, #31
 8005e34:	bf44      	itt	mi
 8005e36:	f043 0320 	orrmi.w	r3, r3, #32
 8005e3a:	6023      	strmi	r3, [r4, #0]
 8005e3c:	b11d      	cbz	r5, 8005e46 <_printf_i+0x19e>
 8005e3e:	2310      	movs	r3, #16
 8005e40:	e7ac      	b.n	8005d9c <_printf_i+0xf4>
 8005e42:	4827      	ldr	r0, [pc, #156]	@ (8005ee0 <_printf_i+0x238>)
 8005e44:	e7e9      	b.n	8005e1a <_printf_i+0x172>
 8005e46:	6823      	ldr	r3, [r4, #0]
 8005e48:	f023 0320 	bic.w	r3, r3, #32
 8005e4c:	6023      	str	r3, [r4, #0]
 8005e4e:	e7f6      	b.n	8005e3e <_printf_i+0x196>
 8005e50:	4616      	mov	r6, r2
 8005e52:	e7bd      	b.n	8005dd0 <_printf_i+0x128>
 8005e54:	6833      	ldr	r3, [r6, #0]
 8005e56:	6825      	ldr	r5, [r4, #0]
 8005e58:	6961      	ldr	r1, [r4, #20]
 8005e5a:	1d18      	adds	r0, r3, #4
 8005e5c:	6030      	str	r0, [r6, #0]
 8005e5e:	062e      	lsls	r6, r5, #24
 8005e60:	681b      	ldr	r3, [r3, #0]
 8005e62:	d501      	bpl.n	8005e68 <_printf_i+0x1c0>
 8005e64:	6019      	str	r1, [r3, #0]
 8005e66:	e002      	b.n	8005e6e <_printf_i+0x1c6>
 8005e68:	0668      	lsls	r0, r5, #25
 8005e6a:	d5fb      	bpl.n	8005e64 <_printf_i+0x1bc>
 8005e6c:	8019      	strh	r1, [r3, #0]
 8005e6e:	2300      	movs	r3, #0
 8005e70:	6123      	str	r3, [r4, #16]
 8005e72:	4616      	mov	r6, r2
 8005e74:	e7bc      	b.n	8005df0 <_printf_i+0x148>
 8005e76:	6833      	ldr	r3, [r6, #0]
 8005e78:	1d1a      	adds	r2, r3, #4
 8005e7a:	6032      	str	r2, [r6, #0]
 8005e7c:	681e      	ldr	r6, [r3, #0]
 8005e7e:	6862      	ldr	r2, [r4, #4]
 8005e80:	2100      	movs	r1, #0
 8005e82:	4630      	mov	r0, r6
 8005e84:	f7fa f9ac 	bl	80001e0 <memchr>
 8005e88:	b108      	cbz	r0, 8005e8e <_printf_i+0x1e6>
 8005e8a:	1b80      	subs	r0, r0, r6
 8005e8c:	6060      	str	r0, [r4, #4]
 8005e8e:	6863      	ldr	r3, [r4, #4]
 8005e90:	6123      	str	r3, [r4, #16]
 8005e92:	2300      	movs	r3, #0
 8005e94:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8005e98:	e7aa      	b.n	8005df0 <_printf_i+0x148>
 8005e9a:	6923      	ldr	r3, [r4, #16]
 8005e9c:	4632      	mov	r2, r6
 8005e9e:	4649      	mov	r1, r9
 8005ea0:	4640      	mov	r0, r8
 8005ea2:	47d0      	blx	sl
 8005ea4:	3001      	adds	r0, #1
 8005ea6:	d0ad      	beq.n	8005e04 <_printf_i+0x15c>
 8005ea8:	6823      	ldr	r3, [r4, #0]
 8005eaa:	079b      	lsls	r3, r3, #30
 8005eac:	d413      	bmi.n	8005ed6 <_printf_i+0x22e>
 8005eae:	68e0      	ldr	r0, [r4, #12]
 8005eb0:	9b03      	ldr	r3, [sp, #12]
 8005eb2:	4298      	cmp	r0, r3
 8005eb4:	bfb8      	it	lt
 8005eb6:	4618      	movlt	r0, r3
 8005eb8:	e7a6      	b.n	8005e08 <_printf_i+0x160>
 8005eba:	2301      	movs	r3, #1
 8005ebc:	4632      	mov	r2, r6
 8005ebe:	4649      	mov	r1, r9
 8005ec0:	4640      	mov	r0, r8
 8005ec2:	47d0      	blx	sl
 8005ec4:	3001      	adds	r0, #1
 8005ec6:	d09d      	beq.n	8005e04 <_printf_i+0x15c>
 8005ec8:	3501      	adds	r5, #1
 8005eca:	68e3      	ldr	r3, [r4, #12]
 8005ecc:	9903      	ldr	r1, [sp, #12]
 8005ece:	1a5b      	subs	r3, r3, r1
 8005ed0:	42ab      	cmp	r3, r5
 8005ed2:	dcf2      	bgt.n	8005eba <_printf_i+0x212>
 8005ed4:	e7eb      	b.n	8005eae <_printf_i+0x206>
 8005ed6:	2500      	movs	r5, #0
 8005ed8:	f104 0619 	add.w	r6, r4, #25
 8005edc:	e7f5      	b.n	8005eca <_printf_i+0x222>
 8005ede:	bf00      	nop
 8005ee0:	080074a2 	.word	0x080074a2
 8005ee4:	080074b3 	.word	0x080074b3

08005ee8 <__sflush_r>:
 8005ee8:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8005eec:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005ef0:	0716      	lsls	r6, r2, #28
 8005ef2:	4605      	mov	r5, r0
 8005ef4:	460c      	mov	r4, r1
 8005ef6:	d454      	bmi.n	8005fa2 <__sflush_r+0xba>
 8005ef8:	684b      	ldr	r3, [r1, #4]
 8005efa:	2b00      	cmp	r3, #0
 8005efc:	dc02      	bgt.n	8005f04 <__sflush_r+0x1c>
 8005efe:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8005f00:	2b00      	cmp	r3, #0
 8005f02:	dd48      	ble.n	8005f96 <__sflush_r+0xae>
 8005f04:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005f06:	2e00      	cmp	r6, #0
 8005f08:	d045      	beq.n	8005f96 <__sflush_r+0xae>
 8005f0a:	2300      	movs	r3, #0
 8005f0c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8005f10:	682f      	ldr	r7, [r5, #0]
 8005f12:	6a21      	ldr	r1, [r4, #32]
 8005f14:	602b      	str	r3, [r5, #0]
 8005f16:	d030      	beq.n	8005f7a <__sflush_r+0x92>
 8005f18:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8005f1a:	89a3      	ldrh	r3, [r4, #12]
 8005f1c:	0759      	lsls	r1, r3, #29
 8005f1e:	d505      	bpl.n	8005f2c <__sflush_r+0x44>
 8005f20:	6863      	ldr	r3, [r4, #4]
 8005f22:	1ad2      	subs	r2, r2, r3
 8005f24:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8005f26:	b10b      	cbz	r3, 8005f2c <__sflush_r+0x44>
 8005f28:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8005f2a:	1ad2      	subs	r2, r2, r3
 8005f2c:	2300      	movs	r3, #0
 8005f2e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8005f30:	6a21      	ldr	r1, [r4, #32]
 8005f32:	4628      	mov	r0, r5
 8005f34:	47b0      	blx	r6
 8005f36:	1c43      	adds	r3, r0, #1
 8005f38:	89a3      	ldrh	r3, [r4, #12]
 8005f3a:	d106      	bne.n	8005f4a <__sflush_r+0x62>
 8005f3c:	6829      	ldr	r1, [r5, #0]
 8005f3e:	291d      	cmp	r1, #29
 8005f40:	d82b      	bhi.n	8005f9a <__sflush_r+0xb2>
 8005f42:	4a2a      	ldr	r2, [pc, #168]	@ (8005fec <__sflush_r+0x104>)
 8005f44:	410a      	asrs	r2, r1
 8005f46:	07d6      	lsls	r6, r2, #31
 8005f48:	d427      	bmi.n	8005f9a <__sflush_r+0xb2>
 8005f4a:	2200      	movs	r2, #0
 8005f4c:	6062      	str	r2, [r4, #4]
 8005f4e:	04d9      	lsls	r1, r3, #19
 8005f50:	6922      	ldr	r2, [r4, #16]
 8005f52:	6022      	str	r2, [r4, #0]
 8005f54:	d504      	bpl.n	8005f60 <__sflush_r+0x78>
 8005f56:	1c42      	adds	r2, r0, #1
 8005f58:	d101      	bne.n	8005f5e <__sflush_r+0x76>
 8005f5a:	682b      	ldr	r3, [r5, #0]
 8005f5c:	b903      	cbnz	r3, 8005f60 <__sflush_r+0x78>
 8005f5e:	6560      	str	r0, [r4, #84]	@ 0x54
 8005f60:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8005f62:	602f      	str	r7, [r5, #0]
 8005f64:	b1b9      	cbz	r1, 8005f96 <__sflush_r+0xae>
 8005f66:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8005f6a:	4299      	cmp	r1, r3
 8005f6c:	d002      	beq.n	8005f74 <__sflush_r+0x8c>
 8005f6e:	4628      	mov	r0, r5
 8005f70:	f7ff fbdc 	bl	800572c <_free_r>
 8005f74:	2300      	movs	r3, #0
 8005f76:	6363      	str	r3, [r4, #52]	@ 0x34
 8005f78:	e00d      	b.n	8005f96 <__sflush_r+0xae>
 8005f7a:	2301      	movs	r3, #1
 8005f7c:	4628      	mov	r0, r5
 8005f7e:	47b0      	blx	r6
 8005f80:	4602      	mov	r2, r0
 8005f82:	1c50      	adds	r0, r2, #1
 8005f84:	d1c9      	bne.n	8005f1a <__sflush_r+0x32>
 8005f86:	682b      	ldr	r3, [r5, #0]
 8005f88:	2b00      	cmp	r3, #0
 8005f8a:	d0c6      	beq.n	8005f1a <__sflush_r+0x32>
 8005f8c:	2b1d      	cmp	r3, #29
 8005f8e:	d001      	beq.n	8005f94 <__sflush_r+0xac>
 8005f90:	2b16      	cmp	r3, #22
 8005f92:	d11e      	bne.n	8005fd2 <__sflush_r+0xea>
 8005f94:	602f      	str	r7, [r5, #0]
 8005f96:	2000      	movs	r0, #0
 8005f98:	e022      	b.n	8005fe0 <__sflush_r+0xf8>
 8005f9a:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005f9e:	b21b      	sxth	r3, r3
 8005fa0:	e01b      	b.n	8005fda <__sflush_r+0xf2>
 8005fa2:	690f      	ldr	r7, [r1, #16]
 8005fa4:	2f00      	cmp	r7, #0
 8005fa6:	d0f6      	beq.n	8005f96 <__sflush_r+0xae>
 8005fa8:	0793      	lsls	r3, r2, #30
 8005faa:	680e      	ldr	r6, [r1, #0]
 8005fac:	bf08      	it	eq
 8005fae:	694b      	ldreq	r3, [r1, #20]
 8005fb0:	600f      	str	r7, [r1, #0]
 8005fb2:	bf18      	it	ne
 8005fb4:	2300      	movne	r3, #0
 8005fb6:	eba6 0807 	sub.w	r8, r6, r7
 8005fba:	608b      	str	r3, [r1, #8]
 8005fbc:	f1b8 0f00 	cmp.w	r8, #0
 8005fc0:	dde9      	ble.n	8005f96 <__sflush_r+0xae>
 8005fc2:	6a21      	ldr	r1, [r4, #32]
 8005fc4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8005fc6:	4643      	mov	r3, r8
 8005fc8:	463a      	mov	r2, r7
 8005fca:	4628      	mov	r0, r5
 8005fcc:	47b0      	blx	r6
 8005fce:	2800      	cmp	r0, #0
 8005fd0:	dc08      	bgt.n	8005fe4 <__sflush_r+0xfc>
 8005fd2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8005fd6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8005fda:	81a3      	strh	r3, [r4, #12]
 8005fdc:	f04f 30ff 	mov.w	r0, #4294967295
 8005fe0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8005fe4:	4407      	add	r7, r0
 8005fe6:	eba8 0800 	sub.w	r8, r8, r0
 8005fea:	e7e7      	b.n	8005fbc <__sflush_r+0xd4>
 8005fec:	dfbffffe 	.word	0xdfbffffe

08005ff0 <_fflush_r>:
 8005ff0:	b538      	push	{r3, r4, r5, lr}
 8005ff2:	690b      	ldr	r3, [r1, #16]
 8005ff4:	4605      	mov	r5, r0
 8005ff6:	460c      	mov	r4, r1
 8005ff8:	b913      	cbnz	r3, 8006000 <_fflush_r+0x10>
 8005ffa:	2500      	movs	r5, #0
 8005ffc:	4628      	mov	r0, r5
 8005ffe:	bd38      	pop	{r3, r4, r5, pc}
 8006000:	b118      	cbz	r0, 800600a <_fflush_r+0x1a>
 8006002:	6a03      	ldr	r3, [r0, #32]
 8006004:	b90b      	cbnz	r3, 800600a <_fflush_r+0x1a>
 8006006:	f7ff f989 	bl	800531c <__sinit>
 800600a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800600e:	2b00      	cmp	r3, #0
 8006010:	d0f3      	beq.n	8005ffa <_fflush_r+0xa>
 8006012:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8006014:	07d0      	lsls	r0, r2, #31
 8006016:	d404      	bmi.n	8006022 <_fflush_r+0x32>
 8006018:	0599      	lsls	r1, r3, #22
 800601a:	d402      	bmi.n	8006022 <_fflush_r+0x32>
 800601c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800601e:	f7ff fb82 	bl	8005726 <__retarget_lock_acquire_recursive>
 8006022:	4628      	mov	r0, r5
 8006024:	4621      	mov	r1, r4
 8006026:	f7ff ff5f 	bl	8005ee8 <__sflush_r>
 800602a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 800602c:	07da      	lsls	r2, r3, #31
 800602e:	4605      	mov	r5, r0
 8006030:	d4e4      	bmi.n	8005ffc <_fflush_r+0xc>
 8006032:	89a3      	ldrh	r3, [r4, #12]
 8006034:	059b      	lsls	r3, r3, #22
 8006036:	d4e1      	bmi.n	8005ffc <_fflush_r+0xc>
 8006038:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 800603a:	f7ff fb75 	bl	8005728 <__retarget_lock_release_recursive>
 800603e:	e7dd      	b.n	8005ffc <_fflush_r+0xc>

08006040 <__swhatbuf_r>:
 8006040:	b570      	push	{r4, r5, r6, lr}
 8006042:	460c      	mov	r4, r1
 8006044:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8006048:	2900      	cmp	r1, #0
 800604a:	b096      	sub	sp, #88	@ 0x58
 800604c:	4615      	mov	r5, r2
 800604e:	461e      	mov	r6, r3
 8006050:	da0d      	bge.n	800606e <__swhatbuf_r+0x2e>
 8006052:	89a3      	ldrh	r3, [r4, #12]
 8006054:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8006058:	f04f 0100 	mov.w	r1, #0
 800605c:	bf14      	ite	ne
 800605e:	2340      	movne	r3, #64	@ 0x40
 8006060:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8006064:	2000      	movs	r0, #0
 8006066:	6031      	str	r1, [r6, #0]
 8006068:	602b      	str	r3, [r5, #0]
 800606a:	b016      	add	sp, #88	@ 0x58
 800606c:	bd70      	pop	{r4, r5, r6, pc}
 800606e:	466a      	mov	r2, sp
 8006070:	f000 f862 	bl	8006138 <_fstat_r>
 8006074:	2800      	cmp	r0, #0
 8006076:	dbec      	blt.n	8006052 <__swhatbuf_r+0x12>
 8006078:	9901      	ldr	r1, [sp, #4]
 800607a:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 800607e:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8006082:	4259      	negs	r1, r3
 8006084:	4159      	adcs	r1, r3
 8006086:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800608a:	e7eb      	b.n	8006064 <__swhatbuf_r+0x24>

0800608c <__smakebuf_r>:
 800608c:	898b      	ldrh	r3, [r1, #12]
 800608e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006090:	079d      	lsls	r5, r3, #30
 8006092:	4606      	mov	r6, r0
 8006094:	460c      	mov	r4, r1
 8006096:	d507      	bpl.n	80060a8 <__smakebuf_r+0x1c>
 8006098:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 800609c:	6023      	str	r3, [r4, #0]
 800609e:	6123      	str	r3, [r4, #16]
 80060a0:	2301      	movs	r3, #1
 80060a2:	6163      	str	r3, [r4, #20]
 80060a4:	b003      	add	sp, #12
 80060a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80060a8:	ab01      	add	r3, sp, #4
 80060aa:	466a      	mov	r2, sp
 80060ac:	f7ff ffc8 	bl	8006040 <__swhatbuf_r>
 80060b0:	9f00      	ldr	r7, [sp, #0]
 80060b2:	4605      	mov	r5, r0
 80060b4:	4639      	mov	r1, r7
 80060b6:	4630      	mov	r0, r6
 80060b8:	f7ff fba4 	bl	8005804 <_malloc_r>
 80060bc:	b948      	cbnz	r0, 80060d2 <__smakebuf_r+0x46>
 80060be:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 80060c2:	059a      	lsls	r2, r3, #22
 80060c4:	d4ee      	bmi.n	80060a4 <__smakebuf_r+0x18>
 80060c6:	f023 0303 	bic.w	r3, r3, #3
 80060ca:	f043 0302 	orr.w	r3, r3, #2
 80060ce:	81a3      	strh	r3, [r4, #12]
 80060d0:	e7e2      	b.n	8006098 <__smakebuf_r+0xc>
 80060d2:	89a3      	ldrh	r3, [r4, #12]
 80060d4:	6020      	str	r0, [r4, #0]
 80060d6:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80060da:	81a3      	strh	r3, [r4, #12]
 80060dc:	9b01      	ldr	r3, [sp, #4]
 80060de:	e9c4 0704 	strd	r0, r7, [r4, #16]
 80060e2:	b15b      	cbz	r3, 80060fc <__smakebuf_r+0x70>
 80060e4:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 80060e8:	4630      	mov	r0, r6
 80060ea:	f000 f837 	bl	800615c <_isatty_r>
 80060ee:	b128      	cbz	r0, 80060fc <__smakebuf_r+0x70>
 80060f0:	89a3      	ldrh	r3, [r4, #12]
 80060f2:	f023 0303 	bic.w	r3, r3, #3
 80060f6:	f043 0301 	orr.w	r3, r3, #1
 80060fa:	81a3      	strh	r3, [r4, #12]
 80060fc:	89a3      	ldrh	r3, [r4, #12]
 80060fe:	431d      	orrs	r5, r3
 8006100:	81a5      	strh	r5, [r4, #12]
 8006102:	e7cf      	b.n	80060a4 <__smakebuf_r+0x18>

08006104 <memmove>:
 8006104:	4288      	cmp	r0, r1
 8006106:	b510      	push	{r4, lr}
 8006108:	eb01 0402 	add.w	r4, r1, r2
 800610c:	d902      	bls.n	8006114 <memmove+0x10>
 800610e:	4284      	cmp	r4, r0
 8006110:	4623      	mov	r3, r4
 8006112:	d807      	bhi.n	8006124 <memmove+0x20>
 8006114:	1e43      	subs	r3, r0, #1
 8006116:	42a1      	cmp	r1, r4
 8006118:	d008      	beq.n	800612c <memmove+0x28>
 800611a:	f811 2b01 	ldrb.w	r2, [r1], #1
 800611e:	f803 2f01 	strb.w	r2, [r3, #1]!
 8006122:	e7f8      	b.n	8006116 <memmove+0x12>
 8006124:	4402      	add	r2, r0
 8006126:	4601      	mov	r1, r0
 8006128:	428a      	cmp	r2, r1
 800612a:	d100      	bne.n	800612e <memmove+0x2a>
 800612c:	bd10      	pop	{r4, pc}
 800612e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 8006132:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8006136:	e7f7      	b.n	8006128 <memmove+0x24>

08006138 <_fstat_r>:
 8006138:	b538      	push	{r3, r4, r5, lr}
 800613a:	4d07      	ldr	r5, [pc, #28]	@ (8006158 <_fstat_r+0x20>)
 800613c:	2300      	movs	r3, #0
 800613e:	4604      	mov	r4, r0
 8006140:	4608      	mov	r0, r1
 8006142:	4611      	mov	r1, r2
 8006144:	602b      	str	r3, [r5, #0]
 8006146:	f7fa ff8a 	bl	800105e <_fstat>
 800614a:	1c43      	adds	r3, r0, #1
 800614c:	d102      	bne.n	8006154 <_fstat_r+0x1c>
 800614e:	682b      	ldr	r3, [r5, #0]
 8006150:	b103      	cbz	r3, 8006154 <_fstat_r+0x1c>
 8006152:	6023      	str	r3, [r4, #0]
 8006154:	bd38      	pop	{r3, r4, r5, pc}
 8006156:	bf00      	nop
 8006158:	200019a4 	.word	0x200019a4

0800615c <_isatty_r>:
 800615c:	b538      	push	{r3, r4, r5, lr}
 800615e:	4d06      	ldr	r5, [pc, #24]	@ (8006178 <_isatty_r+0x1c>)
 8006160:	2300      	movs	r3, #0
 8006162:	4604      	mov	r4, r0
 8006164:	4608      	mov	r0, r1
 8006166:	602b      	str	r3, [r5, #0]
 8006168:	f7fa ff89 	bl	800107e <_isatty>
 800616c:	1c43      	adds	r3, r0, #1
 800616e:	d102      	bne.n	8006176 <_isatty_r+0x1a>
 8006170:	682b      	ldr	r3, [r5, #0]
 8006172:	b103      	cbz	r3, 8006176 <_isatty_r+0x1a>
 8006174:	6023      	str	r3, [r4, #0]
 8006176:	bd38      	pop	{r3, r4, r5, pc}
 8006178:	200019a4 	.word	0x200019a4

0800617c <_sbrk_r>:
 800617c:	b538      	push	{r3, r4, r5, lr}
 800617e:	4d06      	ldr	r5, [pc, #24]	@ (8006198 <_sbrk_r+0x1c>)
 8006180:	2300      	movs	r3, #0
 8006182:	4604      	mov	r4, r0
 8006184:	4608      	mov	r0, r1
 8006186:	602b      	str	r3, [r5, #0]
 8006188:	f7fa ff92 	bl	80010b0 <_sbrk>
 800618c:	1c43      	adds	r3, r0, #1
 800618e:	d102      	bne.n	8006196 <_sbrk_r+0x1a>
 8006190:	682b      	ldr	r3, [r5, #0]
 8006192:	b103      	cbz	r3, 8006196 <_sbrk_r+0x1a>
 8006194:	6023      	str	r3, [r4, #0]
 8006196:	bd38      	pop	{r3, r4, r5, pc}
 8006198:	200019a4 	.word	0x200019a4

0800619c <memcpy>:
 800619c:	440a      	add	r2, r1
 800619e:	4291      	cmp	r1, r2
 80061a0:	f100 33ff 	add.w	r3, r0, #4294967295
 80061a4:	d100      	bne.n	80061a8 <memcpy+0xc>
 80061a6:	4770      	bx	lr
 80061a8:	b510      	push	{r4, lr}
 80061aa:	f811 4b01 	ldrb.w	r4, [r1], #1
 80061ae:	f803 4f01 	strb.w	r4, [r3, #1]!
 80061b2:	4291      	cmp	r1, r2
 80061b4:	d1f9      	bne.n	80061aa <memcpy+0xe>
 80061b6:	bd10      	pop	{r4, pc}

080061b8 <_realloc_r>:
 80061b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80061bc:	4680      	mov	r8, r0
 80061be:	4615      	mov	r5, r2
 80061c0:	460c      	mov	r4, r1
 80061c2:	b921      	cbnz	r1, 80061ce <_realloc_r+0x16>
 80061c4:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80061c8:	4611      	mov	r1, r2
 80061ca:	f7ff bb1b 	b.w	8005804 <_malloc_r>
 80061ce:	b92a      	cbnz	r2, 80061dc <_realloc_r+0x24>
 80061d0:	f7ff faac 	bl	800572c <_free_r>
 80061d4:	2400      	movs	r4, #0
 80061d6:	4620      	mov	r0, r4
 80061d8:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80061dc:	f000 f81a 	bl	8006214 <_malloc_usable_size_r>
 80061e0:	4285      	cmp	r5, r0
 80061e2:	4606      	mov	r6, r0
 80061e4:	d802      	bhi.n	80061ec <_realloc_r+0x34>
 80061e6:	ebb5 0f50 	cmp.w	r5, r0, lsr #1
 80061ea:	d8f4      	bhi.n	80061d6 <_realloc_r+0x1e>
 80061ec:	4629      	mov	r1, r5
 80061ee:	4640      	mov	r0, r8
 80061f0:	f7ff fb08 	bl	8005804 <_malloc_r>
 80061f4:	4607      	mov	r7, r0
 80061f6:	2800      	cmp	r0, #0
 80061f8:	d0ec      	beq.n	80061d4 <_realloc_r+0x1c>
 80061fa:	42b5      	cmp	r5, r6
 80061fc:	462a      	mov	r2, r5
 80061fe:	4621      	mov	r1, r4
 8006200:	bf28      	it	cs
 8006202:	4632      	movcs	r2, r6
 8006204:	f7ff ffca 	bl	800619c <memcpy>
 8006208:	4621      	mov	r1, r4
 800620a:	4640      	mov	r0, r8
 800620c:	f7ff fa8e 	bl	800572c <_free_r>
 8006210:	463c      	mov	r4, r7
 8006212:	e7e0      	b.n	80061d6 <_realloc_r+0x1e>

08006214 <_malloc_usable_size_r>:
 8006214:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8006218:	1f18      	subs	r0, r3, #4
 800621a:	2b00      	cmp	r3, #0
 800621c:	bfbc      	itt	lt
 800621e:	580b      	ldrlt	r3, [r1, r0]
 8006220:	18c0      	addlt	r0, r0, r3
 8006222:	4770      	bx	lr

08006224 <_init>:
 8006224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006226:	bf00      	nop
 8006228:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800622a:	bc08      	pop	{r3}
 800622c:	469e      	mov	lr, r3
 800622e:	4770      	bx	lr

08006230 <_fini>:
 8006230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006232:	bf00      	nop
 8006234:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006236:	bc08      	pop	{r3}
 8006238:	469e      	mov	lr, r3
 800623a:	4770      	bx	lr
